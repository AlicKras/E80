[
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "Reference Designs",
    "section": "",
    "text": "This design adapts the lab turbidity meter to the requirements for being immersed and waterproofed. The instructions and procedure are here. A zip file of the design files is here."
  },
  {
    "objectID": "reference/index.html#auv-turbidity-meter",
    "href": "reference/index.html#auv-turbidity-meter",
    "title": "Reference Designs",
    "section": "",
    "text": "This design adapts the lab turbidity meter to the requirements for being immersed and waterproofed. The instructions and procedure are here. A zip file of the design files is here."
  },
  {
    "objectID": "reference/index.html#anemometer",
    "href": "reference/index.html#anemometer",
    "title": "Reference Designs",
    "section": "Anemometer",
    "text": "Anemometer\nAn anemometer is used for measuring wind speed. It is useful for a surface vehicle, but not so much for a submersible. The instructions and procedures are here. A zip file of the design documents is here."
  },
  {
    "objectID": "reference/index.html#weather-vane",
    "href": "reference/index.html#weather-vane",
    "title": "Reference Designs",
    "section": "Weather Vane",
    "text": "Weather Vane\nA weather vane is used for indicating wind direction relative to the local coordinates of a surface craft. It is not so useful for a submersible. There are two possible sensors for the weather vane. The first is the MLX90316. The instructions and procedure are here. The second is the ACE128. The instructions and procedures are here. A zip file of the design files for both is here."
  },
  {
    "objectID": "reference/index.html#velocity-sensor",
    "href": "reference/index.html#velocity-sensor",
    "title": "Reference Designs",
    "section": "Velocity Sensor",
    "text": "Velocity Sensor\nThe reference design for the velocity sensor was not terribly successful. Perhaps you can learn from other’s mistakes. The instructions and procedures, such as they are, are here. A spreadsheet with the design calculations is here. A spreadsheet with the experimental results is here. A zip archive with the design documents is here.\nSalinity Sensor"
  },
  {
    "objectID": "reference/index.html#future-designs",
    "href": "reference/index.html#future-designs",
    "title": "Reference Designs",
    "section": "Future Designs",
    "text": "Future Designs\nIf you had a design that was particularly successful and you would like to share it with future generations of E80 students, let the professors know, and it may show up here."
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#teaching-team",
    "href": "presentation/kickoff/kickoff-presentation.html#teaching-team",
    "title": "E80 Kickoff Presentation",
    "section": "Teaching Team",
    "text": "Teaching Team\n\n\n\n\n\n\nProf. Josh Brake\n\n\n\n\n\n\n\nProf. Dre Helmns\n\n\n\n\n\n\n\nProf. Ethan Ritz\n\n\n\n\n\n\n\nProf. Matt Spencer\n\n\n\n\n\n\n\n\n\nProf. Qimin Yang\n\n\n\n\n\n\n\nLynn Kim\n\n\n\n\n\n\n\nXavier Walter"
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#e80-is-about-forming-your-engineering-identity-and-learning-how-to-do-experiments",
    "href": "presentation/kickoff/kickoff-presentation.html#e80-is-about-forming-your-engineering-identity-and-learning-how-to-do-experiments",
    "title": "E80 Kickoff Presentation",
    "section": "E80 is about forming your engineering identity and learning how to do experiments",
    "text": "E80 is about forming your engineering identity and learning how to do experiments\nIn this course you will learn how to…\n\n\nDo Experiments\n\n\nDesign instrumentation\nGather, interpret, and present data\nLearn domain-specific skills (e.g., using op-amps and the wind tunnel)\n\n\n\nBe an Engineer\n\n\nDeal with failure and learn from it.\nProfessionally present your experiments.\nKnow what good results look like.\nWork effectively on technical problems as a team under pressure.\n\n\n\n\nOur goal is to take you from Students → Engineers"
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#course-philosophy",
    "href": "presentation/kickoff/kickoff-presentation.html#course-philosophy",
    "title": "E80 Kickoff Presentation",
    "section": "Course Philosophy",
    "text": "Course Philosophy\nGrowth requires good stress and progressive overload."
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#course-overview",
    "href": "presentation/kickoff/kickoff-presentation.html#course-overview",
    "title": "E80 Kickoff Presentation",
    "section": "Course Overview",
    "text": "Course Overview\nKey places for course information:\n\nCourse website: https://hmc-e80.github.io/E80/\nDiscord\nCanvas\n\nLots of new stuff this year!\n\nShiny new website!\nRedesigned labs!\nNew writing assignment format!\nResubmissions!"
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#course-overview-labs-project-phases",
    "href": "presentation/kickoff/kickoff-presentation.html#course-overview-labs-project-phases",
    "title": "E80 Kickoff Presentation",
    "section": "Course Overview: Labs & Project Phases",
    "text": "Course Overview: Labs & Project Phases\nE80 has two main phases: lab and project.\nLabs\n\nEach lab has an experiment and a writing component.\n\nExperiments are done during your 4-hour lab section.\nWriting is done in the Friday Writing & Reflection period.\n\n\nProject\n\nThe project is the chance for you to design and perform your own experiment using the skills you’ve developed in the labs.\nYou propose an experiment and design a robot with the appropriate sensors to make measurements."
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#blooms-taxonomy",
    "href": "presentation/kickoff/kickoff-presentation.html#blooms-taxonomy",
    "title": "E80 Kickoff Presentation",
    "section": "Bloom’s Taxonomy",
    "text": "Bloom’s Taxonomy\n\n\nFigure 1: Bloom’s Taxonomy, Vanderbilt University Center for Teaching.\n\n\n\n\n\n\n\nLearning Outcome Categorization\n\n\nLook at the learning outcomes both for the overall E80 course, and Lab 1, and the Lab 1 writing assignment and categorize them using Bloom’s Taxonomy."
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#learning-outcome-categorization",
    "href": "presentation/kickoff/kickoff-presentation.html#learning-outcome-categorization",
    "title": "E80 Kickoff Presentation",
    "section": "Learning Outcome Categorization",
    "text": "Learning Outcome Categorization\nE80 General\n\n\n\n\nDesign instrumentation\nGather, interpret, and present data\nLearn domain-specific skills (e.g., using op-amps and the wind tunnel)\n\n\n\nDeal with failure and learn from it.\nProfessionally present your experiments.\nKnow what good results look like.\nWork effectively on technical problems as a team under pressure."
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#learning-outcome-categorization-1",
    "href": "presentation/kickoff/kickoff-presentation.html#learning-outcome-categorization-1",
    "title": "E80 Kickoff Presentation",
    "section": "Learning Outcome Categorization",
    "text": "Learning Outcome Categorization\n\nLab 1\n\nModify an E79 robot to build an E80 robot.\nProgram your robot to traverse basic trajectories.\nExtract data from your robot, import it into MATLAB, and plot it.\nUse statistical measures to analyze data gathered from your robot.\nExplain the limitations and challenges of open loop control.\nRelate your robot’s behavior to governing equations from E79.\n\nLab 1 Writing\n\nLearn how to design a clear figure\nUnderstand what information should be in the figure, figure caption, and text referencing the figure."
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#scheduling-details",
    "href": "presentation/kickoff/kickoff-presentation.html#scheduling-details",
    "title": "E80 Kickoff Presentation",
    "section": "Scheduling & Details",
    "text": "Scheduling & Details\nE80 moves quickly and you’ve got multiple things to turn in each week.\nCanvas is the place to turn everything in!\n1. Lecture Quiz\n\nWatch lecture videos and take quiz each week. Due each Monday at 12 pm (noon).\n\n2. Lab Submission Sheet\n\nSubmit key deliverables collected in lab. Due at the end of your lab section each week (5:15 pm).\n\n3. Writing & Reflection Section\n\nBring deliverables from lab each week. Write a small section of a technical memo each week, review it to meet spec, and check it off with an instructor. Due at Friday at 3:15 pm.\n\n4. Weekly Team Check In\n\nFill out a survey to help you assess how your team is doing and if there are any issues developing. Due Friday at 3:30 pm."
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#weekly-schedule",
    "href": "presentation/kickoff/kickoff-presentation.html#weekly-schedule",
    "title": "E80 Kickoff Presentation",
    "section": "Weekly Schedule",
    "text": "Weekly Schedule\n\n\n\n\n\n\n\n\n\n\nDay\nLecture Quiz\nSubmission Sheet\nWrite Up\nWeekly Check In Peer Evaluation\n\n\n\n\nMonday\nQuiz Due @ Noon (Canvas)\n\n\n\n\n\nTuesday\n\nDue @ 5:15p (E80-1)\n\n\n\n\nWednesday\n\nDue @ 5:15p (E80-2)\n\n\n\n\nThursday\n\nDue @ 5:15p (E80-3)\n\n\n\n\nFriday\n\n\nDue @ 3:15p\nDue @ 3:30p"
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#scheduling-activity",
    "href": "presentation/kickoff/kickoff-presentation.html#scheduling-activity",
    "title": "E80 Kickoff Presentation",
    "section": "Scheduling Activity",
    "text": "Scheduling Activity\nEvery week you need to have the following time carved out.\n\n\n\nItem\nTime Required [hours]\n\n\n\n\nLab\n4 hours\n\n\nWriting & Reflection\n2 hours\n\n\nWatch Lecture Videos\n1 hour\n\n\nTake Lecture Quiz\n30 minutes\n\n\nPre-lab Work & Team Meetings\n4.5 hours"
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#team-administrivia",
    "href": "presentation/kickoff/kickoff-presentation.html#team-administrivia",
    "title": "E80 Kickoff Presentation",
    "section": "Team Administrivia",
    "text": "Team Administrivia\n\nSchedule a time for you to meet as a team of 4 each week.\nCreate a shared file storage location (e.g., a shared Google Drive folder or Shared Drive).\nDecide how you want to communicate this semester (e.g., email, text thread, Discord, Slack, etc.).\nBlock out time for all the activities on the previous slide on your calendar!"
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#specifications-effort-and-completion",
    "href": "presentation/kickoff/kickoff-presentation.html#specifications-effort-and-completion",
    "title": "E80 Kickoff Presentation",
    "section": "Specifications: Effort and Completion",
    "text": "Specifications: Effort and Completion\nThe grading in E80 this semester for submission sheets and writing assignments will be based on whether or not your deliverables meet two different levels of specifications: effort and complete. The overall grade on an assignment will be determined by how many of the sections meet either effort or completion.\n\n\nEffort specs describe good-faith effort.\n\n\n\n\nCompletion specs describe correctness.\n\n\n\nIn most situations, completing effort specs is equivalent to a passing grade on the assignment and the remaining sections of completion specs are worth a grade level each."
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#effort-and-completion-specifications-example-lab-1",
    "href": "presentation/kickoff/kickoff-presentation.html#effort-and-completion-specifications-example-lab-1",
    "title": "E80 Kickoff Presentation",
    "section": "Effort and Completion Specifications Example: Lab 1",
    "text": "Effort and Completion Specifications Example: Lab 1\n\nSample Effort and Completion Specifications"
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#resubmissions-policy",
    "href": "presentation/kickoff/kickoff-presentation.html#resubmissions-policy",
    "title": "E80 Kickoff Presentation",
    "section": "Resubmissions Policy",
    "text": "Resubmissions Policy\nLearning is about iterative feedback.\nThis year we are introducing some new policies to allow you to revise your work if you don’t meet all the specifications for an assignment on the first try.\n\n\nYou must submit something by the deadline.\n\nDon’t phone this in because there is limited time for resubmission.\n\nAfter you receive feedback, you can revise your submissions until spring break.\n\nMost of specs can be done outside of lab with data.\nHowever, if you weren’t able to get good data, there is one week before spring break where you can go back to collect more.\n\nResubmissions are checked off by an instructor during office hours.\nFor all submissions, you will need to self-assess before you submit. Every assignment you submit should be accompanied along with a checklist of specs that you believe the assignment meets or does not meet.\nAll resubmissions must be completed by spring break."
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#google-project-aristotle-describes-the-attributes-of-a-high-functioning-team",
    "href": "presentation/kickoff/kickoff-presentation.html#google-project-aristotle-describes-the-attributes-of-a-high-functioning-team",
    "title": "E80 Kickoff Presentation",
    "section": "Google Project Aristotle describes the attributes of a high-functioning team",
    "text": "Google Project Aristotle describes the attributes of a high-functioning team\n\n\nPsychological Safety\nDependability\nStructure and Clarity\nMeaning\nImpact\n\n\n\nGoogle Blog Post on Project Aristotle (Web Archive)"
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#team-formation-refresh",
    "href": "presentation/kickoff/kickoff-presentation.html#team-formation-refresh",
    "title": "E80 Kickoff Presentation",
    "section": "Team Formation Refresh",
    "text": "Team Formation Refresh\n\nPsychological Safety: creating an environment where team members are comfortable taking risks and speaking up.\nTeam Norms: A set of agreements about how the team will operate.\n\n“I’m giving you these comments because I have very high expectations and I’m confident you can reach them.” - advice on feedback from Adam Grant"
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#team-contract-activity",
    "href": "presentation/kickoff/kickoff-presentation.html#team-contract-activity",
    "title": "E80 Kickoff Presentation",
    "section": "Team Contract Activity",
    "text": "Team Contract Activity\n\nGo to the website and download the team contract form (found on the lectures page).\nDiscuss with your team and fill out the missing sections.\nWhen you think you are finished, fill out the checklist of effort and completion specs and put up your green flag.\nAfter an instructor has come by and given you feedback, make the suggested revisions and submit a PDF of your the team contract and PDF of the completed checklist with any notes to Canvas."
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#you-are-going-to-build-cool-stuff",
    "href": "presentation/kickoff/kickoff-presentation.html#you-are-going-to-build-cool-stuff",
    "title": "E80 Kickoff Presentation",
    "section": "You are going to build cool stuff!",
    "text": "You are going to build cool stuff!\n\n\n\n\n\nE80 main PCB\n\n\n\n\n\n\nPaul Zoeller, The Post and Courier.\n\n\n\n\nYour E80 board has a GPS, IMU, Tiny Computer, 5 amp Motor Driver, and you’ll use the full robot in Lab 1."
  },
  {
    "objectID": "presentation/kickoff/kickoff-presentation.html#snacks",
    "href": "presentation/kickoff/kickoff-presentation.html#snacks",
    "title": "E80 Kickoff Presentation",
    "section": "Snacks",
    "text": "Snacks\nJoin us for snacks outside in the tents near Parsons!"
  },
  {
    "objectID": "presentation/kickoff/team-contract-template.html",
    "href": "presentation/kickoff/team-contract-template.html",
    "title": "E80 Team Contract",
    "section": "",
    "text": "Note\n\n\n\nThis page contains notes to highlight the purpose and suggested comment for each section. These comments will only appear on the web, not in the MS Word version of the template.\nE80, Section #: _______ Team # ______"
  },
  {
    "objectID": "presentation/kickoff/team-contract-template.html#team-members",
    "href": "presentation/kickoff/team-contract-template.html#team-members",
    "title": "E80 Team Contract",
    "section": "Team Members",
    "text": "Team Members\n\n\n\n\nTeam Member\n\n\n\n\n1.\n\n\n\n2.\n\n\n\n3.\n\n\n\n4.\n\n\n\n5.\n\n\n\n\nYou can complete this contract only after having your consensus-building discussion!"
  },
  {
    "objectID": "presentation/kickoff/team-contract-template.html#mission",
    "href": "presentation/kickoff/team-contract-template.html#mission",
    "title": "E80 Team Contract",
    "section": "Mission",
    "text": "Mission\n\n\n\n\n\n\nNote\n\n\n\nTeam members share truthfully what they want from their E80 team experience. Identify and describe your team’s mission which will serve you as a guide for setting priorities, making decisions and how members will work together.\n\n\nWe agree that the purpose of our team is…\n\n\n\n\n\n\nExample from an E4 team\n\n\n\nThe purpose of our team is to use the process of creating a successful composting design as an avenue to develop both our engineering and interpersonal skills. We strive to maintain a positive team dynamic by allocating tasks fairly and communicating both regularly and effectively."
  },
  {
    "objectID": "presentation/kickoff/team-contract-template.html#logistics-organization",
    "href": "presentation/kickoff/team-contract-template.html#logistics-organization",
    "title": "E80 Team Contract",
    "section": "Logistics / Organization",
    "text": "Logistics / Organization\n\n\n\n\n\n\nOrganization Information to Include\n\n\n\nDescribe in detail how you will:\n\nCommunicate with each other\n\nMedium (e.g., email, text, Discord)\nFrequency\nExpected response time\n\nStore, update, and exchange information (Google Drive, Discord, Slack, etc.)\nHold effective meetings (Schedule, Agenda, Roles, Meeting Minutes, etc.)\nTrack task progress & completion (who will do what by when?)"
  },
  {
    "objectID": "presentation/kickoff/team-contract-template.html#strengths-weaknesses",
    "href": "presentation/kickoff/team-contract-template.html#strengths-weaknesses",
    "title": "E80 Team Contract",
    "section": "Strengths & Weaknesses",
    "text": "Strengths & Weaknesses\n\n\n\n\n\n\nStrengths & Weaknesses\n\n\n\nList here each team member’s strengths (e.g., strong Python skills, detail oriented, inclusive, focus on excellence, doer attitude, loves research, positive attitude, etc.) and weaknesses (tends to speak a lot, tends to speak very little, no CAD experience, tends to be late for meetings, etc.), how each team member plans to apply their strengths to the team’s success, and how each team member plans to work on improving/compensating their weaknesses.\n\n\n\nTeam Member 1:\nStrengths\n\n\n\nWeaknesses\n\n\n\n\n\nTeam Member 2:\nStrengths\n\n\n\nWeaknesses\n\n\nTeam Member 3:\nStrengths\n\n\n\nWeaknesses\n\n\n\n\n\nTeam Member 4:\nStrengths\n\n\n\nWeaknesses\n\n\n\n\n\nTeam Member 5:\nStrengths\n\n\n\nWeaknesses"
  },
  {
    "objectID": "presentation/kickoff/team-contract-template.html#objectives",
    "href": "presentation/kickoff/team-contract-template.html#objectives",
    "title": "E80 Team Contract",
    "section": "Objectives",
    "text": "Objectives\n\n\n\n\n\n\nExample Team Objectives\n\n\n\nDescribe in detail your team’s objectives:\n\nGrades\nQuality of work\nDesired participation of team members and how will you measure it\nDistribution of work\nDevelopment of specific technical skills\nDevelopment of teamwork skills"
  },
  {
    "objectID": "presentation/kickoff/team-contract-template.html#team-norms",
    "href": "presentation/kickoff/team-contract-template.html#team-norms",
    "title": "E80 Team Contract",
    "section": "Team Norms",
    "text": "Team Norms\n\n\n\n\n\n\nExample Team Norms\n\n\n\nDescribe in detail your team’s rules of engagement:\n\nHow the team will create and maintain psychological safety\nHow you will ensure to create a healthy feedback culture\nHow your team makes decisions\nHow your team handles & resolves conflicts\nHow you hold each other accountable\nThe consequences for breaking rules\nAnything else important for your team (e.g., humor)"
  },
  {
    "objectID": "presentation/kickoff/team-contract-template.html#team-signatures",
    "href": "presentation/kickoff/team-contract-template.html#team-signatures",
    "title": "E80 Team Contract",
    "section": "Team Signatures",
    "text": "Team Signatures\n\nI participated in formulating the mission, logistics, strengths and weaknesses, objectives, and ground rules as stated in this contract.\nI understand that I am obligated to abide by these terms and conditions.\nI understand that if I do not abide by these terms and conditions, I will suffer the consequences as stated in this contract.\n\n\n\n\nTeam Member\nDate\n\n\n\n\n1.\n\n\n\n2.\n\n\n\n3.\n\n\n\n4.\n\n\n\n5."
  },
  {
    "objectID": "history/index.html",
    "href": "history/index.html",
    "title": "History",
    "section": "",
    "text": "A cleverly designed bottom crawler used powerful motors and a tethered surface skiff to map depth along accurate trajectories.\nhttps://drive.google.com/file/d/1s1zsGPTx-QZpVYCwWR4Md5jM4KVQRcAZ/view\nAn ASV used a particle filter based navigation and error correction system to achieve unusually good trajectory accuracy\nhttps://drive.google.com/file/d/1hbRGmwnh3ZMJ5kYYFFD54oPrNAFauuVd/view"
  },
  {
    "objectID": "history/index.html#section",
    "href": "history/index.html#section",
    "title": "History",
    "section": "",
    "text": "A cleverly designed bottom crawler used powerful motors and a tethered surface skiff to map depth along accurate trajectories.\nhttps://drive.google.com/file/d/1s1zsGPTx-QZpVYCwWR4Md5jM4KVQRcAZ/view\nAn ASV used a particle filter based navigation and error correction system to achieve unusually good trajectory accuracy\nhttps://drive.google.com/file/d/1hbRGmwnh3ZMJ5kYYFFD54oPrNAFauuVd/view"
  },
  {
    "objectID": "history/index.html#section-1",
    "href": "history/index.html#section-1",
    "title": "History",
    "section": "2017",
    "text": "2017\nAn acoustic beacon tracker deployed in the Mudd test tank. The oscillations in it’s trajectory are characteristic of angle control based on stereo sensors, and the team had a MATLAB model which showed the same behavior.\nhttps://drive.google.com/file/d/1nXRh81PjcI-u6L069lIfVtWcA4mYu-3c/view\nA wind-measuring ASV did an exceptionally good job of sensor calibration, including using the wind tunnel to calibrate sensors.\nhttps://drive.google.com/file/d/1RJtr_GxRZIaCJ95jLnJmj6HU9P30WT7T/view"
  },
  {
    "objectID": "history/index.html#older-versions-of-e80",
    "href": "history/index.html#older-versions-of-e80",
    "title": "History",
    "section": "Older Versions of E80",
    "text": "Older Versions of E80\nE80 serves a critical role in the Harvey Mudd college curriculum and it’s unsurprising that some of Mudd’s best faculty have had ownership of the course. A brief history of E80, courtesy of Erik Spjut on the previous E80 page, is provided below. You can find the previous E80 website, a treasure trove of information, here.\n\nE80, Hammer Time was one of the most successful field laboratory courses of all time. Zee Duron is widely acknowledged as one of the premiere course directors of the 21st Century. But time moves on, fashions change, and people move to other projects. Duron has moved on to administrative work, and he has left E80, The Next Generation to Erik Spjut and Mary Cardenas. The challenges and expectations of this sequel are chronicled in this website. We invite you to explore and enjoy.\n\nThe Harvey Mudd Way\nA key element of the philosophy of the Harvey Mudd College General Engineering education is that there are fundamental principles that are applicable to many engineering disciplines. Experimental Engineering (E80) is a sophomore-level, semester-long required course, which has striven to teach a large subset of these fundamental principles through multiple experiments in a number of engineering disciplines. We are redesigning the Experimental Engineering course to explicitly require learning in multiple engineering disciplines while directing all of the experiments to a final goal: to build, instrument, and fly a small rocket; and analyze and report on the data collected during the flight.\nThe project involves the creation of learning materials, teaching strategies, and equipment for a multidisciplinary experimental engineering course involving the instrumentation and testing of these small model rockets. The project includes the design, acquisition, and testing all of the pedagogy, hardware, and software necessary to implement the revised course. We will conduct the course several times with formal assessment, revise the course in response to that assessment, and distribute the course plans, instrumentation requirements, and pedagogical results to the wider academic community. Our plans and results will be presented on this web site.\n\n\nThe Wider World\nIt is difficult to predict where the commercial space era will take us, but this project will fulfill a need for multidisciplinary engineers interested in aerospace applications. The pedagogical materials can be used at a number of engineering institutions to teach experimental engineering in a multidisciplinary way, not only to the students, but also to faculty (at HMC and other institutions) who may not have industrial or hands-on multidisciplinary engineering experience. The proposed learning workshop for faculty will be a means for disseminating the creative learning materials and teaching strategies. Outreach to local middle schools will introduce rocketry (and the associated mathematics and physics) to a very diverse population; there is a real opportunity to increase the interest in and pursuit of math, science, and engineering by these diverse groups, and to increase the diverse and properly-trained workforce in these areas."
  },
  {
    "objectID": "labs/lab1/lab1-writing.html",
    "href": "labs/lab1/lab1-writing.html",
    "title": "Lab 1 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will create a figure, write a caption for it, and write a paragraph of text to reference and explain the figure. In doing this, you will learn how to create a well-designed figure to clearly and effectively present captured data. You will also learn how to refer to the figure in supporting text by writing a short paragraph to explain the significance of the data and the important takeaways."
  },
  {
    "objectID": "labs/lab1/lab1-writing.html#writing-assignment",
    "href": "labs/lab1/lab1-writing.html#writing-assignment",
    "title": "Lab 1 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will create a figure, write a caption for it, and write a paragraph of text to reference and explain the figure. In doing this, you will learn how to create a well-designed figure to clearly and effectively present captured data. You will also learn how to refer to the figure in supporting text by writing a short paragraph to explain the significance of the data and the important takeaways."
  },
  {
    "objectID": "labs/lab1/lab1-writing.html#learning-objectives",
    "href": "labs/lab1/lab1-writing.html#learning-objectives",
    "title": "Lab 1 Writing Assignment",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nBy the end of this writing assignment you will…\n\nLearn how to design a clear figure\nUnderstand what information should be in the figure, figure caption, and text referencing the figure."
  },
  {
    "objectID": "labs/lab1/lab1-writing.html#required-resources",
    "href": "labs/lab1/lab1-writing.html#required-resources",
    "title": "Lab 1 Writing Assignment",
    "section": "Required Resources",
    "text": "Required Resources\n\nData from Lab 1\nCode used to process and plot Lab 1 data\nFigure generated from Lab 1"
  },
  {
    "objectID": "labs/lab1/lab1-writing.html#specifications",
    "href": "labs/lab1/lab1-writing.html#specifications",
    "title": "Lab 1 Writing Assignment",
    "section": "Specifications",
    "text": "Specifications\n\nEffort\n\nA figure of acceleration plots is present and shows the required traces.\nThe figure has a caption\nThere is a paragraph of text explaining the contents of the figure.\n\n\n\nCompletion\n\nFigure Design\n\nY-axis label is clear and descriptive of the dependent variable\nX-axis label is clear and descriptive of the independent variable\nAll axis ticks are legible\nGraph is easily readable (e.g., appropriate fonts, line weights and data markers and not overly cluttered)\nLegend is present and well-placed if multiple lines are present on the plot (e.g., no on top of any data)\nCorrect units in the labels for both axes (e.g., Distance [m])\nData is shown with good level of zoom to highlight the important parts of the captured trace. Beginning and end of the trace is trimmed.\nData overlayed well (e.g., all three axes of acceleration measurements are plotted together on the same axes in different colors.)\n\n\n\nCaption\n\nContains a figure number.\nIncludes a succinct description of the contents of the figure.\nIs free of grammar and spelling issues.\n\n\n\nSupporting Text\n\nRefers to each figure\nExplains the significance and meaning of the figure.\nCorrect sentence mechanics like cohesion and coherence between sentences and no run-ons.\nCorrect paragraph mechanics like topic sentences and placement at breaks between ideas.\nLanguage is not stilted and jargon is kept to a reasonable minimum.\n\n\n\nCode\n\nCode used to process and plot the captured data is present.\nEach script file has a descriptive filename (e.g., acceleration_data_procesor.m).\nFilename, author name, author email, and date included at the top of each script file.\nEach function contains a comment at the top describing its purpose.\n\n\n\n\nComments\nAdd specific notes here about the assignment and what is yet to be completed."
  },
  {
    "objectID": "labs/lab1/submission.html",
    "href": "labs/lab1/submission.html",
    "title": "Lab 1 Submission Sheet",
    "section": "",
    "text": "Keep answers as short as possible while still meeting specifications. Submit as a PDF.\nTeam Number:\nTeam Member Names:"
  },
  {
    "objectID": "labs/lab1/submission.html#provide-acceleration-plots-and-analysis",
    "href": "labs/lab1/submission.html#provide-acceleration-plots-and-analysis",
    "title": "Lab 1 Submission Sheet",
    "section": "Provide acceleration plots and analysis",
    "text": "Provide acceleration plots and analysis\nThis submission item will cover multiple questions from the “Motherboard Validation, IMU Calibration, and IMU Error Measurement” section:\n\nHow many m/s^2 does one accelerometer unit represent?\nWhat are the x, y and z axis zero acceleration measurements?\nAre the x, y and z axis zero acceleration measurements statistically different from one another?\nWhat are the mean, standard deviation, standard error and 95% confidence bounds for a static acceleration measurement in the z direction?\n\nAnswering these questions requires data from your accelerometer, which you should include in this submission as three graphs depicting data from the same trial, one showing x acceleration, one showing y acceleration, and one depicting z acceleration.\nEffort Specification:\n\nIncludes four plots of data from the accelerometer that show zero acceleration x data, zero acceleration y data, zero acceleration z data, and z data that reflects acceleration due to gravity.\nPlots are labeled (in title or caption) to indicate which is zero x, zero y, zero z and accelerated z.\nAccelrated z plot has different mean from other plots.\nVertical scale is set to show variations in the data values.\nY-axis is set so we can easily read off values.\nIncludes some calculations for each question.\n\nComplete Specification:\n\nCalcuations that relate acceleration due to gravity to one accelerometer unit are correct.\nTake the mean of data to calculate the resting zero acceleration values. Report them clearly with appropriate uncertainty bounds.\nIncludes description of how to calculate statistics and correct values.\nIncludes description of how to calculate T tests and results of tests on data."
  },
  {
    "objectID": "labs/lab1/submission.html#paste-the-code-used-to-navigate-the-obstacle-course",
    "href": "labs/lab1/submission.html#paste-the-code-used-to-navigate-the-obstacle-course",
    "title": "Lab 1 Submission Sheet",
    "section": "Paste the code used to navigate the obstacle course",
    "text": "Paste the code used to navigate the obstacle course\nEffort Specification:\n\nPresent and reasonable.\n\nThere is no complete specification for this deliverable."
  },
  {
    "objectID": "labs/lab1/submission.html#plot-acceleration-measurements-vs.-the-sample-number-from-a-run-in-the-obstacle-course.-no-need-to-convert-the-x-axis-to-time.",
    "href": "labs/lab1/submission.html#plot-acceleration-measurements-vs.-the-sample-number-from-a-run-in-the-obstacle-course.-no-need-to-convert-the-x-axis-to-time.",
    "title": "Lab 1 Submission Sheet",
    "section": "Plot acceleration measurements vs. the sample number from a run in the obstacle course. (No need to convert the x-axis to time.)",
    "text": "Plot acceleration measurements vs. the sample number from a run in the obstacle course. (No need to convert the x-axis to time.)\nEffort Specification:\n\nPresent and interpretable.\n\nComplete Specification:\n\nShows multiple acceleration events that suggest motion through an obstacle course.\n\nScale is legible and data is cropped to just the run through the obstacle course, omitting getting the robot into the tank, fishing it out, etc."
  },
  {
    "objectID": "labs/lab1/submission.html#write-a-formula-for-peak-acceleration-of-a-robot-from-rest-calculate-the-predicted-acceleration-that-formula-makes-and-compare-that-value-to-the-peak-acceleration-observed-in-your-measurements.",
    "href": "labs/lab1/submission.html#write-a-formula-for-peak-acceleration-of-a-robot-from-rest-calculate-the-predicted-acceleration-that-formula-makes-and-compare-that-value-to-the-peak-acceleration-observed-in-your-measurements.",
    "title": "Lab 1 Submission Sheet",
    "section": "Write a formula for peak acceleration of a robot from rest, calculate the predicted acceleration that formula makes, and compare that value to the peak acceleration observed in your measurements.",
    "text": "Write a formula for peak acceleration of a robot from rest, calculate the predicted acceleration that formula makes, and compare that value to the peak acceleration observed in your measurements.\nEffort Specification:\n\nAppropriate governing equation copied from E79 notes.\nEquation manipulated into a form that predicts peak acceleration from rest.\n\nComplete Specification:\n\nManipulated equation is fully correct and well explained.\nAnnotation of the obstacle course acceleration plots show the measured peak acceleration from rest.\nTheoretical numbers for thrust extracted from E79 resources.\nThrust and mass are used to predict theoretical peak acceleration.\nComment on differences between theory and measurement."
  },
  {
    "objectID": "labs/lab7/lab7-writing.html",
    "href": "labs/lab7/lab7-writing.html",
    "title": "Lab 7 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will write an abstract for the work you did in lab 7. Be sure to follow the conventions of an abstract carefully:\n\nDon’t summarize more of your work than necessary\nDo include quantitative results\nKeep it short."
  },
  {
    "objectID": "labs/lab7/lab7-writing.html#writing-assignment",
    "href": "labs/lab7/lab7-writing.html#writing-assignment",
    "title": "Lab 7 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will write an abstract for the work you did in lab 7. Be sure to follow the conventions of an abstract carefully:\n\nDon’t summarize more of your work than necessary\nDo include quantitative results\nKeep it short."
  },
  {
    "objectID": "labs/lab7/lab7-writing.html#learning-objectives",
    "href": "labs/lab7/lab7-writing.html#learning-objectives",
    "title": "Lab 7 Writing Assignment",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nBy the end of this writing assignment you will…\n\nLearn to write an abstract that follows the conventions of scientific writing."
  },
  {
    "objectID": "labs/lab7/lab7-writing.html#specifications",
    "href": "labs/lab7/lab7-writing.html#specifications",
    "title": "Lab 7 Writing Assignment",
    "section": "Specifications",
    "text": "Specifications\n\nLab Report Introduction\n\nConcisely summarizes the gist of each section of the lab report.\nArranges the sentences in the order the sections are presented in the lab report.\nIs self-sufficient and does not refer to the body of the report, such as specific results.\nUses past tense to report what was done.\nStays within the maximum words allowed (usually 100-200 words)."
  },
  {
    "objectID": "labs/lab3/lab3-writing.html",
    "href": "labs/lab3/lab3-writing.html",
    "title": "Lab 3 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will learn to make high quality electrical schematics and mechanical drawings. You’ll then write text to describe the operation of the electrical system and the key aspects of the mechanical design presented."
  },
  {
    "objectID": "labs/lab3/lab3-writing.html#writing-assignment",
    "href": "labs/lab3/lab3-writing.html#writing-assignment",
    "title": "Lab 3 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will learn to make high quality electrical schematics and mechanical drawings. You’ll then write text to describe the operation of the electrical system and the key aspects of the mechanical design presented."
  },
  {
    "objectID": "labs/lab3/lab3-writing.html#learning-objectives",
    "href": "labs/lab3/lab3-writing.html#learning-objectives",
    "title": "Lab 3 Writing Assignment",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nBy the end of this writing assignment you will…\n\nCreate a clear mechanical drawing with relevant details included\nDraw a neat and complete electrical schematic"
  },
  {
    "objectID": "labs/lab3/lab3-writing.html#required-resources",
    "href": "labs/lab3/lab3-writing.html#required-resources",
    "title": "Lab 3 Writing Assignment",
    "section": "Required Resources",
    "text": "Required Resources\n\nReference schematic from the lab notebook of the op amp circuit used in lab."
  },
  {
    "objectID": "labs/lab3/lab3-writing.html#specifications",
    "href": "labs/lab3/lab3-writing.html#specifications",
    "title": "Lab 3 Writing Assignment",
    "section": "Specifications",
    "text": "Specifications\n\nElectrical Schematics\n\nStandard electrical schematic symbols are used whenever possible (i.e., don’t make up new symbols for resistors, amplifiers, etc.)\nAll lines connecting elements are straight lines wherever possible (i.e., no curved lines)\nAll junctions indicated with a solid circle at the intersection point\nNo 4-way wire junctions\nUse heavy line weights and large fonts\nReference designators and the values for parts are placed nearby the parts.\nDraw pins according to function (i.e., not just according to the physical layout of the pins on the chip.)\nAll pins labeled with number\nAll pins labeled with name/description of function\nDecoupling capacitors are placed nearby the part that they accompany.\nIf needed, notes are legible and well-placed\n\n\n\nMechanical Drawings\n\nClear depiction of components and how they fit into assembly\nDrawings only include enough detail to make your point (i.e., you need only show the relevant dimensions in the drawing)\nFollow mechanical schematic drawing conventions, such as the layout, flow and symbols\nUse heavy line weights and large fonts\nPart geometry is clear and well illustrated\nDrawing is clear and fully labeled\nIf needed, notes are legible and well-placed\nClearly makes the point that is suggested in the text\n\n\n\nResults\n\nStates the main conclusion of the experiment\nStates any shortcomings or outlier data for future exploration along with suggested mechanisms.\n\n\n\nEquations\n\nEach equation is labeled\nEach equation is referenced in the text\nVariables of the equations are described in the text\n\n\n\nSupporting Text\n\nRefers to each schematic/drawing.\nCorrect sentence mechanics like cohesion and coherence between sentences and no run-ons\nCorrect paragraph mechanics like topic sentences and placement at breaks between ideas\nLanguage is not stilted and jargon is kept to a reasonable minimum."
  },
  {
    "objectID": "labs/lab3/submission.html",
    "href": "labs/lab3/submission.html",
    "title": "Lab 3 Submission Sheet",
    "section": "",
    "text": "Keep answers as short as possible while still meeting specifications. Submit as a PDF.\nTeam Number:\nTeam Member Names:\nSeveral of the deliverables in this submission sheet will call for schematics, oscilloscope traces or circuit pictures. These are specific genres of technical documents, so they have conventions you need to adhere to. The specifications for all schematics, oscilloscope traces and circuit pictures are listed on this page instead of being repeated for each deliverable in the document.\nAll schematics in this report should adhere the following specification:\nAll oscilloscope traces in this report should adhere to the following specification:\nAll pictures of circuits in this report should adhere to the following specification:"
  },
  {
    "objectID": "labs/lab3/submission.html#report-on-the-design-and-characterization-of-a-non-inverting-amplifier",
    "href": "labs/lab3/submission.html#report-on-the-design-and-characterization-of-a-non-inverting-amplifier",
    "title": "Lab 3 Submission Sheet",
    "section": "Report on the Design and Characterization of a Non-Inverting Amplifier",
    "text": "Report on the Design and Characterization of a Non-Inverting Amplifier\nEffort:\n\nProvides a picture of the inverting amplifier\nProvides a schematic of the inverting amplifier and stimulus\n\nComplete:\n\nProvides an oscilloscope trace of the input and the output for the following input: 100 mV amplitude sine wave with a 1 V offset.\nProvides an oscilloscope trace of the input and the output for the following input: 100 mV amplitude sine wave with a 0 V offset.\nTraces show correct behavior, matching designed gain and highlighting appropriate non-idealities\nCorrectly, in 1-2 sentences, describes why the output signal in the 0 V offset trace does not fully obey the equation that describes non-inverting amplifier outputs."
  },
  {
    "objectID": "labs/lab3/submission.html#report-on-the-design-and-characterization-of-an-offset-amplifier",
    "href": "labs/lab3/submission.html#report-on-the-design-and-characterization-of-an-offset-amplifier",
    "title": "Lab 3 Submission Sheet",
    "section": "Report on the Design and Characterization of an Offset Amplifier",
    "text": "Report on the Design and Characterization of an Offset Amplifier\nEffort:\n\nProvides a picture of the offset amplifier\nProvides a schematic of the offset amplifier\n\nComplete:\n\nDescribes the design process for the offset amplifier: specifies the intended gain and offset, provides equation describing offset amplifier output Voltage, manipulates that equation (and states necessary assumptions) to find resistor values and showing the appropriate equation and hand calculations to find the for offset amplifier output Voltage.\nProvides an oscilloscope trace of the input and the output for the following input: 100 mV amplitude sine wave with a 0 V offset.\nThe output trace shows a complete sine wave with no op-amp introduced non-idealities.\nThe op-amp trace behaves as predicted in the hand design.\n1-2 sentences of discussion of why this design performs differently than a non-inverting amplifier for the same input."
  },
  {
    "objectID": "labs/lab3/submission.html#report-on-the-design-and-characterization-of-a-555-timer-led-driver",
    "href": "labs/lab3/submission.html#report-on-the-design-and-characterization-of-a-555-timer-led-driver",
    "title": "Lab 3 Submission Sheet",
    "section": "Report on the Design and Characterization of a 555 Timer LED Driver",
    "text": "Report on the Design and Characterization of a 555 Timer LED Driver\nEffort:\n\nProvides a picture of the 555 timer LED driver.\nProvides a schematic of the 555 timer LED driver.\n\nComplete:\n\nProvides an oscilloscope trace of the output, 555 capacitor node, and Voltage in the middle of the diode-resistor string.\nTrace indicates 500 Hz - 1 kHz operating frequency and ~60% duty cycle.\nResistor value in schematic and resistor voltage measurement indicate diode is receiving 20-40 mA of current.\nIncludes design process for 555 timer: lists target frequency and duty cycle, and shows how resistors and capacitors were selected to hit that target.\nIncludes calculations showing how resistor was selected to limit current in IR1503."
  },
  {
    "objectID": "labs/lab3/submission.html#report-on-the-design-and-characterization-of-a-transimpedance-amplifier",
    "href": "labs/lab3/submission.html#report-on-the-design-and-characterization-of-a-transimpedance-amplifier",
    "title": "Lab 3 Submission Sheet",
    "section": "Report on the Design and Characterization of a Transimpedance Amplifier",
    "text": "Report on the Design and Characterization of a Transimpedance Amplifier\nEffort:\n\nProvides a picture of the transimpedance amplifier including the IR LED illuminating the photodiode\nProvides a schematic of the transimpedance amplifier\n\nComplete:\n\nIncludes analysis of transimpedance amplifier circuit, showing relation between VOUT, ID and RF.\nProvides an oscilloscope trace of 555 timer output and transimpedance amplifier output when transimpedance photodiode is illuminated by the IR LED."
  },
  {
    "objectID": "labs/lab3/submission.html#report-on-the-design-and-characterization-of-a-turbidity-meter",
    "href": "labs/lab3/submission.html#report-on-the-design-and-characterization-of-a-turbidity-meter",
    "title": "Lab 3 Submission Sheet",
    "section": "Report on the Design and Characterization of a Turbidity Meter",
    "text": "Report on the Design and Characterization of a Turbidity Meter\nEffort:\n\nProvides a picture of the prepared solutions in cuvettes. Picture is annotated to indicate turbidity of each cuvette.\nProvides a picture of the assembled turbidity meter.\n\nComplete:\n\nProvides two sets of oscilloscope traces showing 555 timer output, 90° transimpedance amplifier output and transmission transimpedance amplifier output.\n\nThe traces are gathered while a solution of middling turbidity is in the turbidity meter, so both 90° and transmission outputs are visible.\nThe first set of traces are gathered under normal lighting conditions.\nThe second set of traces are gathered under shadowed lighting conditions.\n\nPlot of Vpp,90/Vpp,Transmission vs. Turbidity values annotated with uncertainty measures.\nPlotted turbidity data shows a linear relationship so measured Voltages can be used to predict turbidity.\n2-3 sentences explaining why we use a switching LED, why we measure peak-peak Voltages in the transimpedance outputs, and why those decisions are related to ambient light."
  },
  {
    "objectID": "labs/lab3/submission.html#extra-credit-writeups",
    "href": "labs/lab3/submission.html#extra-credit-writeups",
    "title": "Lab 3 Submission Sheet",
    "section": "Extra Credit Writeups:",
    "text": "Extra Credit Writeups:\nWe don’t provide complete specifications for extra credit writeups, but they will be graded for effort and completeness like normal sections. You need to provide a “mini-report” of &lt;1 page for each extra credit section that you attempt. Put a page break between each extra credit mini-report."
  },
  {
    "objectID": "labs/lab_overview/index.html",
    "href": "labs/lab_overview/index.html",
    "title": "Lab Overview",
    "section": "",
    "text": "Lab manuals are linked here."
  },
  {
    "objectID": "labs/lab_overview/index.html#general-rules",
    "href": "labs/lab_overview/index.html#general-rules",
    "title": "Lab Overview",
    "section": "General rules",
    "text": "General rules\n\nNo eating or drinking in lab. If necessary you may leave lab, wash your hands, eat and/or drink something outside the lab, wash your hands, return to lab.\nKnow the location of fire extinguisher, eye wash, safety shower and quickest escape route.\nNotify instructor immediately after any injury, fire, spills or breakage.\nClean lab bench and turn off equipment before leaving. Leave the bench power on.\nElectricity and water DO NOT MIX –a lot of water is involved in E80 – be mindful at all times."
  },
  {
    "objectID": "labs/lab_overview/index.html#proper-attire",
    "href": "labs/lab_overview/index.html#proper-attire",
    "title": "Lab Overview",
    "section": "Proper attire",
    "text": "Proper attire\n\nClosed-toe shoes\nShort sleeves preferred, rolled-up long sleeves acceptable\nLong pants\nNo dangling jewelry – no rings, bracelets, necklaces or earrings\nLoose clothing must be secured away from work (including hoody draw strings)\nLong hair pulled back and secured\nFor field experiences:\n\nLocation-appropriate footwear and clothing\nAppropriate PPE (including floatation devices for boats)\nSunscreen\nHydration"
  },
  {
    "objectID": "labs/lab_overview/index.html#chemical-safety-epoxies-and-ca-cyanoacrylate-aka-superglue",
    "href": "labs/lab_overview/index.html#chemical-safety-epoxies-and-ca-cyanoacrylate-aka-superglue",
    "title": "Lab Overview",
    "section": "Chemical safety: epoxies and CA (CyanoAcrylate aka superglue)",
    "text": "Chemical safety: epoxies and CA (CyanoAcrylate aka superglue)\n\nSafety goggles\nGloves\nIf procedure emits fumes, then must be done in a fume hood or out of doors away from buildings"
  },
  {
    "objectID": "labs/lab_overview/index.html#soldering",
    "href": "labs/lab_overview/index.html#soldering",
    "title": "Lab Overview",
    "section": "Soldering",
    "text": "Soldering\n\nIron must be turned off when not in your hand.\nUse recently soaked sponge. Use spray bottle to moisten. Never use sink or water fountain.\nUse fume extractor: fume from rosin in solder is a respiratory irritant.\nWash hands after handling solder – solder is 40% lead. Skin contact is harmless, but ingestion can occur with unwashed hands when eating, drinking, or smoking."
  },
  {
    "objectID": "labs/lab_overview/index.html#deliverables",
    "href": "labs/lab_overview/index.html#deliverables",
    "title": "Lab Overview",
    "section": "Deliverables",
    "text": "Deliverables\nA submission sheet is due at the end of each 4-hour lab period. The submission sheet must be uploaded before the end of your lab session at 5:15 pm. Note that only ONE member of each team should access and submit the submission sheet. It is the responsibility of that team member to add the rest of the team’s names to the submission sheet."
  },
  {
    "objectID": "labs/lab_overview/index.html#hardware-checkout",
    "href": "labs/lab_overview/index.html#hardware-checkout",
    "title": "Lab Overview",
    "section": "Hardware checkout",
    "text": "Hardware checkout\nYou will work with some expensive hardware in this class. Expensive hardware like motherboards and batteries must be explicitly checked out from a professor or proctor so that we can track where it is. If any hardware that you checked out breaks, you will need to request a replacement from a professor. You make this request by filling out an error report (paper copies will be in lab). This report needs to be well thought out; professors will reject reports that don’t represent sufficient testing or thought. You will keep this hardware with you throughout the semester in your storage box."
  },
  {
    "objectID": "labs/lab_overview/index.html#safety-questions",
    "href": "labs/lab_overview/index.html#safety-questions",
    "title": "Lab Overview",
    "section": "SAFETY QUESTIONs",
    "text": "SAFETY QUESTIONs\nLabs will include callout boxes labeled “SAFETY QUESTION: the question text”. ALL group members must be able to answer these questions before the lab. Failing to understand the SAFETY QUESTIONs can damage equipment or harm lab users. You should always feel empowered to stop work and grab an instructor if you find a safety question that makes you unsure."
  },
  {
    "objectID": "labs/lab6/lab6-writing.html",
    "href": "labs/lab6/lab6-writing.html",
    "title": "Lab 6 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will write a complete technical memorandum about lab 6 that explains the experiments you undertook, your analysis, and your results. This memo may be up to 5 pages long and should be in IEEE format. Be sure to include an introduction that motivates the work and provides appropriate references, an introduction to the analytical models that you will use to check your data, a description of the experimental methods you use, reports of your data in figures and tables as appropriate, and a conclusion. You have leeway in the organization of this work, and the scientific standard of Introduction, Background, Methods, Results, Conclusion may or may not serve you well depending on your approach. Be sure to carefully select the appropriate topics to discuss so that your report fits in the page limit; the report won’t have room to include every piece of data in the submission sheet."
  },
  {
    "objectID": "labs/lab6/lab6-writing.html#writing-assignment",
    "href": "labs/lab6/lab6-writing.html#writing-assignment",
    "title": "Lab 6 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will write a complete technical memorandum about lab 6 that explains the experiments you undertook, your analysis, and your results. This memo may be up to 5 pages long and should be in IEEE format. Be sure to include an introduction that motivates the work and provides appropriate references, an introduction to the analytical models that you will use to check your data, a description of the experimental methods you use, reports of your data in figures and tables as appropriate, and a conclusion. You have leeway in the organization of this work, and the scientific standard of Introduction, Background, Methods, Results, Conclusion may or may not serve you well depending on your approach. Be sure to carefully select the appropriate topics to discuss so that your report fits in the page limit; the report won’t have room to include every piece of data in the submission sheet."
  },
  {
    "objectID": "labs/lab6/lab6-writing.html#learning-objectives",
    "href": "labs/lab6/lab6-writing.html#learning-objectives",
    "title": "Lab 6 Writing Assignment",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nBy the end of this writing assignment you will…\n\nLearn to write a full technical report that follows the conventions of scientific writing.\nReflect on and synthesize the skills that have been built through the previous writing assignments."
  },
  {
    "objectID": "labs/lab6/lab6-writing.html#specifications",
    "href": "labs/lab6/lab6-writing.html#specifications",
    "title": "Lab 6 Writing Assignment",
    "section": "Specifications",
    "text": "Specifications"
  },
  {
    "objectID": "labs/lab6/index.html",
    "href": "labs/lab6/index.html",
    "title": "Lab 6: Fluid Dynamics",
    "section": "",
    "text": "UNDER CONSTRUCTION, DO NOT USE FOR PRELAB\nTeam size: 4"
  },
  {
    "objectID": "labs/lab6/index.html#learning-objectives",
    "href": "labs/lab6/index.html#learning-objectives",
    "title": "Lab 6: Fluid Dynamics",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter successful completion of this lab, you will be able to…\n\nPerform computational fluid dynamics simulations in COMSOL Multiphysics.\nUse the wind tunnel to perform experiments to verify the results of your fluid dynamics simulations."
  },
  {
    "objectID": "labs/lab6/index.html#introduction",
    "href": "labs/lab6/index.html#introduction",
    "title": "Lab 6: Fluid Dynamics",
    "section": "0. Introduction",
    "text": "0. Introduction\nThis lab will take place in Parsons B178 and the wind tunnel room. E80 students should already have card access to Parsons B178. If you cannot access the room, please contact Sue Lindley in the Engineering Department Office.\nYou will be using COMSOL Multiphysics software Version 5.6 in this lab. You may practice using COMSOL and go through Granny Spark’s COMSOL tutorials outside of your designated lab time. However, you CANNOT run COMSOL simulations on LAB-RELATED objects outside of your designated lab time. These objects include the cylindrical objects tested in the wind tunnel, the NACA 6412 wing, your team’s low-drag body, and your team’s wing.\nThis lab will be completed in full teams. It is up to the team to determine which parts of the lab are done by whom, and at what time during the 4 hours of lab time.\nEach team will have exactly 60 minutes to use the wind tunnel to run experiments and collect data.\nThe instructions for this lab are not detailed. You are expected to review the resources, plan out your experiments, and fill in the blanks.\nNot all deliverables are due at the end of lab this week. You will submit a submission sheet at the end of lab as a team (per usual), but each of you will write a technical memorandum about the team’s process and findings individually. Details of the tech memo are discussed in the deliverables section below, but it is important to lay out the boundaries of collaboration on the tech memo. Specifically, the team must not collaborate on any writing in the tech memo at any time, and the team may not collaborate on the data or code after the assigned lab section is finished.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here.\nBy the end of the laboratory the student will:\n\nDemonstration of the safe start-up and shut-down sequence for the wind tunnel.\nDetermination of wind speeds in the wind tunnel using a Pitot tube and digital manometer.\nMeasurement of drag forces on various shapes in the wind tunnel at various flow velocities.\nUtilize COMSOL computational fluid dynamics (CFD) to model the drag and lift forces of the objects tested in the wind tunnel.\nCompare the results obtained in the wind tunnel to those predicted by COMSOL.\nUse COMSOL to create and simulate your own low-drag object and predict the drag forces that it will experience during service.\nUse COMSOL to create, simulate, and predict the lift and drag characteristics of a NACA 6412 wing.\nUse COMSOL to create, simulate, and predict the lift and drag characteristics of your own wing.\n\nYou will be provided with:\n\nThe HMC wind tunnel.\nA stainless steel Pitot tube (similar to the one shown here).\nA Dwyer Series 475 Mark III Digital Manometer (click here for more information).\n\nNote: Dwyer has released an app that you will find very useful. Search for “Dwyer Air Velocity Calculator” on Google Play or the App Store.\n\nA cylinder to be mounted in the wind tunnel. These will be provided to you at the start of the lab, and you will measure their dimensions during lab.\nThree different nose shapes for the cylinder. These will be provided to you at the start of the lab, and you will measure their dimensions during lab.\nA computer with COMSOL in the Engineering Computing Facility (ECF). It is highly recommended that you practice using COMSOL in your pre-lab. Please see the links to the Grandma Spark’s Step-By-Step guides and COMSOL tutorial videos mentioned below. You will not have time to learn COMSOL during lab.\n\nHere are informative resources on fluids, aerodynamics, and COMSOL that you should review PRIOR to lab:\n\nNASA Beginner’s Guide to Aerodynamics (click here)\nE80 fluid measurements lecture notes (click here)\nAirfoil database (click here)\nAirfoil and angle of attack definitions (click here)\nNASA Wing geometry definitions (click here)\nNASA Reynolds Number guide (click here)\nGrandma Spark’s step-by-step video guide to using COMSOL to model a cylinder in laminar flow (105 MB PowerPoint File, click here)\n\nEach slide on the PowerPoint contains a video! Make sure that you press play on each video!\n\nGrandma Spark’s step-by-step video guide to using COMSOL to model a NACA 0009 airfoil in laminar flow (164 MB PowerPoint File, click here)\n\nEach slide on the PowerPoint contains a video! Make sure that you press play on each video!\n\nCOMSOL video tutorials for beginners (click here)\nHow to use COMSOL 3D geometry tools (click here)\nHow to form unions in COMSOL (click here)\nComputing lift and drag forces in COMSOL (click here)\n\nNOTE: The COMSOL CFD portion of this lab will consume most of your time in this lab. You will not finish this lab if you are not prepared. Reviewing the COMSOL resources above and practicing COMSOL ahead of time will be essential to your team’s success in this lab.\nIMPORTANT SAFETY TIPS: For in-person labs\n\nFollow the dress code for E80 Lab. Everyone must wear safety goggles during the test. Hearing protection will be provided if needed.\nNever turn the fan on before checking to see that loose objects are NOT in the test chamber and the test chamber cover plate is secure.\nEnsure that all test personnel are at a safe distance from the wind tunnel itself (at least 24” in any direction).\nMake sure the article under test is securely fastened inside the test chamber.\nNever run the wind tunnel without a proctor or professor present."
  },
  {
    "objectID": "labs/lab6/index.html#wind-tunnel-experiments",
    "href": "labs/lab6/index.html#wind-tunnel-experiments",
    "title": "Lab 6: Fluid Dynamics",
    "section": "1. Wind Tunnel Experiments",
    "text": "1. Wind Tunnel Experiments\nYour team will have exactly 60 minutes to complete this section. The order in which teams will conduct experiments in the wind tunnel will be randomly determined at the start of each section. Be ready to go first! If you are in a six-team section, you may be using the wind tunnel during the final hour of lab, and therefore you must have a plan in place to obtain data and submit your report by the deadline.\n\n1.1 Getting to Know Your Wind Tunnel\nIn this sub-section, you will familiarize yourself with the wind tunnel and relate airspeed to fan RPM.\n\nA professor or proctor will take you to the wind tunnel room.\nLocate the gray box that is the fan RPM controller for the wind tunnel. Click here to see what it looks like.\nLocate the white box that displays the fan speed RPM. Click here to see what it looks like.\nLocate the LVDT box that displays lift and drag forces. It is located above the wind tunnel test chamber. Ensure that it is turned on. If it is not, the switch is on the right side of the box in the rear. DO NOT TOUCH THE KNOBS ON THE FRONT OF THIS BOX. Click here to see what the box looks like.\nEnsure that the fan is not running in the wind tunnel by pushing the “STOP” button.\nOpen the wind tunnel test chamber by removing the four clamps and gently removing the window.\nVerify that there is nothing but a Pitot probe and the force measurement stand in the wind tunnel. If there are other objects in the wind tunnel, remove them.\nObserve the mounting of the Pitot probe in the wind tunnel. Ensure that the end of the tube is properly oriented directly facing the incoming airflow. Ensure that the pitot probe is connected to the digital manometer.\nTurn on the digital manometer. Zero it. To calculate air velocity, you can use this Excel spreadsheet PitotVelocityCalculator , this Google Sheet, the Dwyer Air Velocity Calculator app or use the Dwyer Air Velocity Calculation Card that has been placed next to the wind tunnel. Use of these tools or the card requires that you know:\n\nThe ambient (room) temperature. Read the temperature sensor in the room.\nThe relative humidity. Read the humidity sensor in the room.\nThe absolute air pressure. Use a barometric pressure app on a cell phone.\n\nGENTLY push on the left side of the force measurement stand with one finger. What is happening to the drag force shown on the LVDT?\n\nGENTLY push on the right side of the force measurement stand with one finger. What is happening to the drag force shown on the LVDT?\nGENTLY push on the top of the force measurement stand with one finger. What is happening to the drag force shown on the LVDT?\nGENTLY pull on the top side of the force measurement stand with two fingers. What is happening to the lift force shown on the LVDT?\n\nInstall the window on the test section and ensure that it is clamped at four corners. Make sure that everyone in the room is wearing safety goggles.\nPower up the wind tunnel by pushing the green button labeled “START” on the gray box. You adjust the speed with the knob on the gray box. You read the RPM in the white box near the main power switch. Measure the airspeed from 20% to 90% of max fan speed (in increments of 10%). Allow time at each measurement for the wind tunnel to come to steady state. Repeat measurements with increasing and decreasing RPM to ensure reproducible results.\n\nObserve the lift and drag forces exhibited by the force measurement stand at each RPM setting. How will these values be used in your calculations?\nPlot a calibration curve of airspeed in the test section versus RPM. Perform the necessary regression analysis and display the appropriate error bars.\nZero the speed in the wind tunnel and push the red button labeled “STOP” on the gray box.\n\n\n\n1.2 Measuring the Drag Forces on Cylindrical Objects\nPLEASE BE GENTLE WHEN MOUNTING FIXTURES ONTO THE FORCE MEASUREMENT STAND. IT IS A SENSITIVE PIECE OF EQUIPMENT. DO NOT PUSH, PULL, PRESS DOWN, OR PULL UP WITH GREAT FORCE. ASK FOR HELP FROM A PROCTOR OR PROFESSOR IF YOU NEED IT.\n\nWhen opening the wind tunnel, always ensure that there is no airflow by pressing the red “STOP” button and verifying that the fan RPM is zero.\nMount the cylindrical fixture on the force measurement stand and ensure that it is horizontal. Make sure that the side of the cylinder that says “FRONT TOWARDS FLOW” is actually facing the incoming flow.\nInstall “Nose #1” on the cylinder.\nAfter ensuring that the window is securely clamped, power up the wind tunnel.\nWhat values for lift and drag are shown on the LVDT box at zero flow velocity? How will these values be used in your calculations?\nMeasure the drag force on the object from 20% to 90% of max fan speed (in increments of 10%).\n\nUsing Excel, MATLAB, or other graphing software, plot a curve of Drag Force vs. Reynolds Number for Nose #1 (Do this in Parsons B178).\n\nUsing Excel, MATLAB, or other graphing software, plot a curve of Drag Coefficient vs. Reynolds Number for Nose #1 (Do this in Parsons B178). What are the correct reference area and characteristic length?\n\nBring the flow back down to zero and press the red “STOP” button, and then repeat steps 3-6 for “Nose #2” and “Nose #3”.\n\nUsing Excel, MATLAB, or other graphing software, plot a curve of Drag Force vs. Reynolds Number for Nose #2 and for Nose #3 (Do this in Parsons B178).\n\nUsing Excel, MATLAB, or other graphing software, plot a curve of Drag Coefficient vs. Reynolds Number for Nose #2 and for Nose #3 (Do this in Parsons B178). What are the correct reference area and characteristic length?\n\n\n\n\n1.3 Measuring the Drag Forces on a Scale Robot Model\n\nWhen opening the wind tunnel, always ensure that there is no airflow by pressing the red “STOP” button and verifying that the fan RPM is zero.\nMount the 1/3 scale model of the robot in the wind tunnel chamber using a zip tie (as shown here, here and here). Pay attention to its orientation. Ensure the window is securely clamped and power up the wind tunnel.\nRecord necessary calibration information, then record drag force on the object from 20%-90% of max fan speed (in increments of 10%).\n\nUsing Excel, MATLAB, or other graphing software, plot a curve of Drag Force vs. Reynolds Number for the scale model of the robot (Do this in Parsons B178).\n\nUsing Excel, MATLAB, or other graphing software, plot a curve of Drag Coefficient vs. Reynolds Number for the scale model of the robot (Do this in Parsons B178). What are the correct reference area and characteristic length?"
  },
  {
    "objectID": "labs/lab6/index.html#cfd-simulations-of-cylindrical-objects",
    "href": "labs/lab6/index.html#cfd-simulations-of-cylindrical-objects",
    "title": "Lab 6: Fluid Dynamics",
    "section": "2. CFD Simulations of Cylindrical Objects",
    "text": "2. CFD Simulations of Cylindrical Objects\nMake sure to download and watch Grandma Spark’s step-by-step video guide to using COMSOL to model a cylinder in laminar flow (106 MB PowerPoint File, click here). Each slide on the PowerPoint contains a video. Make sure that you press play on each video.\n\n\nUse these dimensions of the objects that will be tested in the wind tunnel. Note that the wind tunnel test section is 1 ft x 1 ft x 2 ft.\nPerform COMSOL CFD simulations of your tests in the wind tunnel for the Cylindrical Object with Nose #1.\n\nUsing Excel, MATLAB, or other graphing software, create a graph of Drag Force vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s). How does drag force change with Reynolds Number?\nUsing Excel, MATLAB, or other graphing software, create a graph of Cd vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s). How does Cd change with Reynolds Number?\nCreate a velocity profile (single slice at centerline of body) for the 45 m/s flow condition. Grandma Sparks step-by-step guide shows you how to do this.\nCreate a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition. Grandma Sparks step-by-step guide shows you how to do this.\nHow do your computational results for drag and Cd compare to your experimental results? Were there any similarities or differences? What factors caused the differences? Explain.\n\nPerform COMSOL CFD simulations of your tests in the wind tunnel for the Cylindrical Object with Nose #2.\n\nHint: An object can be rotated in COMSOL by selecting a Cartesian Axis and entering values for x, y, and z.\nUsing Excel, MATLAB, or other graphing software, create a graph of Drag Force vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s). How does drag force change with Reynolds Number?\nUsing Excel, MATLAB, or other graphing software, create a graph of Cd vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s). How does Cd change with Reynolds Number?\nCreate a velocity profile (single slice at centerline of body) for the 45 m/s flow condition.\nCreate a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition.\nHow do your computational results for drag and Cd compare to your experimental results? Were there any similarities or differences? What factors caused the differences?\n\nPerform COMSOL CFD simulations of your tests in the wind tunnel for the Cylindrical Object with Nose #3.\n\nHint: An object can be rotated in COMSOL by selecting a Cartesian Axis and entering values for x, y, and z.\nUsing Excel, MATLAB, or other graphing software, create a graph of Drag Force vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s). How does drag force change with Reynolds Number?\nUsing Excel, MATLAB, or other graphing software, create a graph of Cd vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s). How does Cd change with Reynolds Number?\nCreate a velocity profile (single slice at centerline of body) for the 45 m/s flow condition.\nCreate a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition.\nHow do your computational results for drag and Cd compare to your experimental results? Were there any similarities or differences? What factors caused the differences?\n\nDesign an object using COMSOL that can achieve a LOWER Drag Coefficient than ALL of the cylindrical configurations that you have tested. Your team’s object should have the same reference area as the cylindrical bodies that you have tested, and should have a minimum length that is no less than the cylindrical object with Nose #1, and a maximum length no more than the cylindrical object with Nose #3.\n\nHINT: If your object does not converge during the study, it is not possible for COMSOL to simulate it. Please re-design your object so that it converges during the study.\n\nProvide a detailed drawing of your object that shows relevant dimensions.\nDiscuss the design process for your team’s low-drag body. Why did you choose the dimensions and shape of your object?\nUsing Excel, MATLAB, or other graphing software, create a graph of Cd vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s).\nHow does the performance of your team’s low-drag object compare to the ones that you tested?\n\nCreate a velocity profile (single slice at centerline of body) and a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition.\n\nUse COMSOL to determine the drag forces that your custom cylindrical body will encounter when it is moving in water. COMSOL allows you to change the fluid in your simulations from air to water. However, changing the fluid to water alone is not enough. You need to use similitude to determine appropriate velocities in water. Use the concept of similitude to convert velocities in air between 5 m/s to 45 m/s to velocities in water. Once appropriate velocities in water are determined…\n\nPlot the drag force vs. Reynolds Number for your cylindrical body in water.\n\nPlot the Cd vs. Reynolds Number for your cylindrical body in water.\n\nSimulate a model of your robot (found here) in water at various velocities such that the Reynold’s number is comparable to the Reynold’s number of the scale model of the robot in the wind tunnel.\n\nPlot the drag force vs. Reynolds Number for your simulated robot\nPlot the Cd vs. Reynolds Number for your simulated robot\nNote that you’re not expected to construct this model during the lab like the other shapes. The following instructions will help to do that\n\nSelect Model Wizard -&gt; 3D -&gt; Laminar Flow -&gt; Stationary. Set units under the Geometry tab in the left hand column.\nRight click on “Geometry” in the left hand column and select “Import”. When importing, make sure that under “Objects to import” both the “Solids” and “Surfaces” boxes are checked and that under “For surface objects:” you select “Form solids” (see photo).\nCreate the box and set up the laminar flow simulation as usual."
  },
  {
    "objectID": "labs/lab6/index.html#cfd-simulations-of-wings",
    "href": "labs/lab6/index.html#cfd-simulations-of-wings",
    "title": "Lab 6: Fluid Dynamics",
    "section": "3. CFD Simulations of Wings",
    "text": "3. CFD Simulations of Wings\nFor parts 2 and 3 of this section, please make sure to watch Grandma Spark’s step-by-step video guide to using COMSOL to model a NACA 0009 airfoil in laminar flow (164 MB PowerPoint File, click here). Each slide on the PowerPoint contains a video. Make sure that you press play on each video.\n\nUse these dimensions of a wing that COULD be tested in the wind tunnel. Note that the wind tunnel test section is 1 ft x 1 ft x 2 ft. What are the appropriate reference area and characteristic length to determine the lift force and coefficient of lift for the flat plate?\n\nPerform COMSOL CFD simulations of your tests in the wind tunnel for the “Flat Plate Wing”. At three angles of attack (5, 15, and 45 degrees), vary the flow velocities between 5 m/s and 45 m/s.\n\n\n\nPlot the lift force vs. Reynolds Number at each angle of attack at flow velocities between 5 m/s and 45 m/s (in increments of 10 m/s). Plot the three curves on the same axes so that you can compare your results.\n\nMake sure that you indicate the angle of attack on each curve on the plot. A legend or labels would be helpful!\n\n\nPlot the coefficient of lift (Cl) vs. Reynolds Number at each angle of attack at flow velocities between 5 m/s and 45 m/s (in increments of 10 m/s). Plot the three curves on the same axes so that you can compare your results.\n\nMake sure that you indicate the angle of attack on each curve on the plot. A legend or labels would be helpful!\n\n\nCreate a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition at a 15 degree angle of attack.\nHow does the pressure on the bottom of the wing compare to the top of the wing at a 15 degree angle of attack?\n\n\nPerform COMSOL CFD simulations of a wing based on the NACA 6412 airfoil that has a similar reference area as your flat plate at three angles of attack (5, 15, and 45 degrees). Vary the flow velocities between 5 m/s and 45 m/s.\n\nPlot the lift force vs. Reynolds Number at each angle of attack at flow velocities between 5 m/s and 45 m/s (in increments of 10 m/s). Plot the three curves on the same axes so that you can compare your results.\n\nMake sure that you indicate the angle of attack on each curve on the plot. A legend or labels would be helpful!\n\n\nPlot Cl vs. Reynolds Number at each angle of attack at flow velocities between 5 m/s and 45 m/s (in increments of 10 m/s). Plot the three curves on the same axes so that you can compare your results.\n\nMake sure that you indicate the angle of attack on each curve on the plot. A legend or labels would be helpful!\n\nHow does the NACA 6412 wing’s Coefficient of Lift compare to the flat plate at an angle of attack of 15 degrees?\nCreate a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition at a 15 degree angle of attack.\nHow do the pressure differences between the top and bottom surfaces of the NACA 6412 wing compare to the pressure difference on the flat plate at 45 m/s and a 15 degree angle of attack?\n\nDesign a wing that will have a higher Cl than the flat plate and NACA 6412 wing at a chosen angle of attack (pick one: 5, 15, or 45 degrees), varying the flow velocities between 5 m/s and 45 m/s. Your wing must have the same reference area as the flat plate and NACA 6412 wing. You could either draw an airfoil in COMSOL and extrude it, plot it using points in the yz work plane followed by an extrusion, or any other method that your team chooses. This wing has to be unique to your team. You may use features of other airfoils in the airfoil database for inspiration, but you are not allowed to use any of the airfoils in the database.\n\nProvide a detailed drawing of your wing that shows relevant dimensions (e.g. chord line, camber line, max thickness, click here for details).\nPlot the lift force vs. Reynolds Number at your chosen angle of attack for flow velocities between 5 m/s and 45 m/s (in increments of 10 m/s). Overlay the results of the flat plate and NACA 6412 wing at this angle of attack to compare the performance of the three wings.\n\nMake sure that you indicate the chosen angle of attack on the plot. A legend or labels would be helpful!\n\n\nPlot the Cl vs. Reynolds Number at your chosen angle of attack for flow velocities between 5 m/s and 45 m/s (in increments of 10 m/s). Overlay the results of the flat plate and NACA 6412 wing at this angle of attack to compare the performance of the three wings.\n\nMake sure that you indicate the chosen angle of attack on the plot. A legend or labels would be helpful!\n\nHow does your wing’s Coefficient of Lift compare to the NACA 6412 wing and the flat plate at your chosen angle of attack?\nCreate a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition your chosen angle of attack."
  },
  {
    "objectID": "labs/lab6/index.html#deliverables",
    "href": "labs/lab6/index.html#deliverables",
    "title": "Lab 6: Fluid Dynamics",
    "section": "4. Deliverables",
    "text": "4. Deliverables\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here.\nRecall that no late work is accepted, we will grade whatever is submitted at the deadlines.\nIn addition, you will each individually submit a technical memorandum, which requires you to combine the writing skills that we have practiced in previous weeks in a longer format. Because the memorandum is longer, it is not due at the end of your lab week. Final report due date is 3/3/2024 for Group B and 3/10/2024 for Group A.Beware that the E72 final problem set has a due date that occasionally conflicts with this memo, so plan your time carefully.\nThe memo will be written based on this prompt, and we will do this activity during the writing and reflection (Friday, 2/24/2024 for Group B and Friday, 3/3/2024 for Group A) section of the week in which lab 6 is carried out. The activity won’t take the whole section, so we encourage you to use the time to get started writing. When you have a draft, feel free to use this peer review worksheet on your own time. We are grading on the criterion shown in this rubric, but we’ve left out the point breakdown because we want you to figure out what’s important to emphasize on your own.\nYou are allowed to process your data any time until the report is due to write this report. If you are unable to generate results with your data in any section, then you may generate your own, simulated example data inside of MATLAB to analyze. You may not record any new data or run new COMSOL simulations. You may not share code, figures or text with any other students while writing this memo, though you may discuss ideas. We recommend that you make use of the writing center. Remember that you must submit a tech memo to pass the class."
  },
  {
    "objectID": "labs/lab2/prelab.html",
    "href": "labs/lab2/prelab.html",
    "title": "Lab 2 Prelab Help Sheet",
    "section": "",
    "text": "This help sheet is not going to be as comprehensive as the prelab help sheet for lab 1, and next week will be even less thorough. Part of the goal of this class is for you to be able to devise prelab activities on your own. So if you’re running out of ideas for things to do, please review last week’s help sheet.\nThink carefully about which group members you want to complete each section. Many of the topics here are interconnected, so it often helps to make sure everyone does them (or, at minimum, that you meet and share out what you learned during prelab.) We especially encourage everyone to do the reading and watch the videos."
  },
  {
    "objectID": "labs/lab2/prelab.html#reading-and-reference",
    "href": "labs/lab2/prelab.html#reading-and-reference",
    "title": "Lab 2 Prelab Help Sheet",
    "section": "Reading and Reference",
    "text": "Reading and Reference\n\nWatch lecture videos.\nWatch op-amp videos 1 & 2.\nRead the lab.\nFlag parts of the lab that didn’t make sense for discussion with your team or a prof.\nRead the submission sheet and notice:\n\nWhat are the deliverables?\nWhat are the specifications on those deliverables?\n\nRead the “Additional Information about Accuracy in Multimeters” article\nRead “Auntie Sparks Guide to Breadboarding”"
  },
  {
    "objectID": "labs/lab2/prelab.html#software",
    "href": "labs/lab2/prelab.html#software",
    "title": "Lab 2 Prelab Help Sheet",
    "section": "Software",
    "text": "Software\n\nTest compile matlab_logging.ino\nMake sure you have access to and understand the use of matlablogging.m (Why can’t we give it a test run?)"
  },
  {
    "objectID": "labs/lab2/prelab.html#teensy-measurements",
    "href": "labs/lab2/prelab.html#teensy-measurements",
    "title": "Lab 2 Prelab Help Sheet",
    "section": "Teensy Measurements",
    "text": "Teensy Measurements\n\nHow are you going to find the sample rate of the Teensy?\nHow are you going to find the size of one Teensy unit?\nWhat do you expect to happen with the 175kHz input signal? Why would we ask you about it?"
  },
  {
    "objectID": "labs/lab2/prelab.html#divider-measurements",
    "href": "labs/lab2/prelab.html#divider-measurements",
    "title": "Lab 2 Prelab Help Sheet",
    "section": "Divider Measurements",
    "text": "Divider Measurements\n\nLook up all necessary impedance values and uncertainties.\nHave you calculated your expected output voltage for each entry in the table?\nDo you know whether you’ll get a RMS or peak-peak measurement for each experiment?\nLay out your breadboard ahead of time using a breadboard simulator like fritzing or Tinkercad\nAre you sure you understand and accounted for instrument loading? Consult the videos or a Prof. if you’re not confident you got this right.\nAre you clear on how to change a channel setting between 1x and 10x modes?\nHow are you going to quickly calculate your VOPC, ERRI and ERRC values in the lab? Would making a spreadsheet or a Matlab script help?\nHow does error propagation work?\nAre you accounting for error in every component in your experiment, including your instruments?"
  },
  {
    "objectID": "labs/lab2/prelab.html#op-amp-divider-measurements",
    "href": "labs/lab2/prelab.html#op-amp-divider-measurements",
    "title": "Lab 2 Prelab Help Sheet",
    "section": "Op-Amp Divider Measurements",
    "text": "Op-Amp Divider Measurements\n\nHave you calculated your expected output voltage for each entry in the table?\nWhat do op-amp followers do and why are we using them in this context?"
  },
  {
    "objectID": "labs/lab2/prelab.html#results",
    "href": "labs/lab2/prelab.html#results",
    "title": "Lab 2 Prelab Help Sheet",
    "section": "Results",
    "text": "Results\n\nMake a plan for how your team will split its time in lab.\nWrite up the math parts of your submission sheet so that you can just paste in results in lab."
  },
  {
    "objectID": "labs/lab2/submission.html",
    "href": "labs/lab2/submission.html",
    "title": "Lab 2 Submission Sheet",
    "section": "",
    "text": "Keep answers as short as possible while still meeting specifications. Submit as a PDF.\nTeam Number:\nTeam Member Names:"
  },
  {
    "objectID": "labs/lab2/submission.html#what-is-one-teensy-unit",
    "href": "labs/lab2/submission.html#what-is-one-teensy-unit",
    "title": "Lab 2 Submission Sheet",
    "section": "What is one ‘Teensy Unit’?",
    "text": "What is one ‘Teensy Unit’?\ni.e.: How much has the Voltage input to the Teensy changed when the number reported by matlablogging.m increases by 1? Include a graph of Teensy output vs. sample number, any other relevant information about your test setup or measurements, and calculations showing how you did your conversion from Voltage to Teensy units.\nEffort Specification:\n\nIncludes a graph of data sampled from the Teensy\nIncludes information (an oscilloscope measurement, a multimeter measurement, or a detail of how the function generator is set up) that can be used to calibrate the vertical scale of the Teensy graph.\nSome calculations present\n\nComplete Specification:\n\nOne sentence describing what happens to Teensy outputs when Teensy inputs are less than zero\nOne sentence explaining what point or points were used to calculate the Teensy unit.\nCalculations are correct and yield the proper Teensy unit value."
  },
  {
    "objectID": "labs/lab2/submission.html#what-is-the-sample-rate-of-the-teensy-running-matlablogging.ino",
    "href": "labs/lab2/submission.html#what-is-the-sample-rate-of-the-teensy-running-matlablogging.ino",
    "title": "Lab 2 Submission Sheet",
    "section": "What is the sample rate of the Teensy running matlablogging.ino?",
    "text": "What is the sample rate of the Teensy running matlablogging.ino?\nEffort Specification:\n\nIncludes a graph of data sampled from the Teensy\nIncludes information (an oscilloscope measurement or a detail of how the function generator is set up) that can be used to calibrate the horizontal scale of the Teensy graph.\nSome calculations present\n\nComplete Specification:\n\nCalculations are correct and yield the proper Teensy unit value.\nResults are used to explain measurement errors that are present in the 175 kHz measurement that are not present in the 200 Hz measurement."
  },
  {
    "objectID": "labs/lab2/submission.html#fill-in-this-table-of-properties-for-voltage-dividers",
    "href": "labs/lab2/submission.html#fill-in-this-table-of-properties-for-voltage-dividers",
    "title": "Lab 2 Submission Sheet",
    "section": "Fill in this table of properties for voltage dividers",
    "text": "Fill in this table of properties for voltage dividers\nFill in only one of the “Measured Output Voltage” columns for each measurement, whichever is appropriate to the instrument that you are using to measure. If you are using the “Measured Output Voltage (Vpp)” column, then also convert that measured voltage to an RMS value in the “Converted Output Voltage (Vrms)” column.\nSeveral column names have been abbreviated to make that table easier to fit on one page:\n\nVOPI refers to “Predicted output Voltage with ideal components”, which is the prediction you are able to make before the start of lab.\nVOPC refers to “Prediction output Voltage with measured components”, which refers to predictions of the output voltage that you make once you have measured your exact component values in lab.\nVOM refers to “Measured output voltage”. There are two VOM columns, one in units of Vrms, and the other in units of Vpp. Fill in only the column appropriate to the instrument you are using.\nVOC refers to “Converted output voltage”. This column will only be filled in for VOM measurements that use the Vpp units. It should contain the RMS Voltage that corresponds to your measured peak-peak Voltage.\n\\(\\lambda\\) refers to the 95% confidence bounds you predicted for VOPI.\nERRI refers to the percent error between your VOPI and VOM/VOC.\nERRC refers to the percent error between your VOPC and VOM/VOC.\n\nProvide example calculations showing how you calculated the predicted output voltage and the predicted uncertainty bounds of the case where Z1=10 M\\(\\Omega\\), Z2=20 M\\(\\Omega\\) and you measured the output with the multimeter.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nZ1 & Z2\nInstrument\nVOPI (Vrms)\nVOPC (Vrms)\nVOM (Vrms)\nVOM (Vpp)\nVOC (Vrms)\n\\(\\lambda\\) (V)\nERRI (%)\nERRC (%)\n\n\n\n\nZ1=wire Z2=open\nMultimeter\n\n\n\n\n\n\n\n\n\n\nZ1=wire Z2=open\n1x Scope Probe\n\n\n\n\n\n\n\n\n\n\nZ1=wire Z2=open\n10x Scope Probe\n\n\n\n\n\n\n\n\n\n\nZ1=wire Z2=open\nTeensy\n\n\n\n\n\n\n\n\n\n\nZ1=10 \\(\\Omega\\) Z2=20 \\(\\Omega\\)\nMultimeter\n\n\n\n\n\n\n\n\n\n\nZ1=10 \\(\\Omega\\) Z2=20 \\(\\Omega\\)\nTeensy\n\n\n\n\n\n\n\n\n\n\nZ1=1 k\\(\\Omega\\) Z2=2 k\\(\\Omega\\)\nMultimeter\n\n\n\n\n\n\n\n\n\n\nZ1=1 k\\(\\Omega\\) Z2=2 k\\(\\Omega\\)\nTeensy\n\n\n\n\n\n\n\n\n\n\nZ1=100 k\\(\\Omega\\) Z2=200 k\\(\\Omega\\)\nMultimeter\n\n\n\n\n\n\n\n\n\n\nZ1=100 k\\(\\Omega\\) Z2=200 k\\(\\Omega\\)\n1x Scope Probe\n\n\n\n\n\n\n\n\n\n\nZ1=100 k\\(\\Omega\\) Z2=200 k\\(\\Omega\\)\nTeensy\n\n\n\n\n\n\n\n\n\n\nZ1=10 M\\(\\Omega\\) Z2=20 M\\(\\Omega\\)\nMultimeter\n\n\n\n\n\n\n\n\n\n\nZ1=10 M\\(\\Omega\\) Z2=20 M\\(\\Omega\\)\n1x Scope Probe\n\n\n\n\n\n\n\n\n\n\nZ1=10 M\\(\\Omega\\) Z2=20 M\\(\\Omega\\)\n10x Scope Probe\n\n\n\n\n\n\n\n\n\n\nZ1=10 M\\(\\Omega\\) Z2=20 M\\(\\Omega\\)\nTeensy\n\n\n\n\n\n\n\n\n\n\n\nEffort Specification:\n\nAt least half of the measurements are filled in with plausible values.\nMeasured values also have a corresponding predicted value that shows understanding of the divider equation.\nExample calculation shows understanding of divider equations.\nExample calculation uses error propagation to find the uncertainty bounds in the output voltage.\n\nComplete Specification:\n\nAll measurements are filled in with correct values that match theory.\nExample calculation additionally shows understanding of loading effects and use correct instrument loads.\nAll theoretical calculations (inccluding the example calcualtion) correctly include loading effects and match measurements well. (i.e.: Predicted Output Voltage (Vrms) and Measured/Converted Output Voltage (Vrms) are within predicted error bounds of one another.)"
  },
  {
    "objectID": "labs/lab2/submission.html#fill-in-this-table-of-properties-for-voltage-dividers-with-op-amp-buffers",
    "href": "labs/lab2/submission.html#fill-in-this-table-of-properties-for-voltage-dividers-with-op-amp-buffers",
    "title": "Lab 2 Submission Sheet",
    "section": "Fill in this table of properties for voltage dividers with op-amp buffers",
    "text": "Fill in this table of properties for voltage dividers with op-amp buffers\nThis table uses the same column abbreviation as the previous section.\nProvide example calculations showing how you calculated the predicted output voltage and the predicted uncertainty bounds for the case where there is an op-amp at the output.\n\n\n\n\n\n\n\n\n\n\n\n\nOp-amp at\nVOPI (Vrms)\nVOPC (Vrms)\nVOM (Vrms)\n\\(\\lambda\\) (V)\nERRI (%)\nERRC (%)\n\n\n\n\ninput\n\n\n\n\n\n\n\n\noutput\n\n\n\n\n\n\n\n\n\nEffort Specification:\n\nAt least one of the measurements is filled in with plausible values.\nMeasured values also have a corresponding predicted value that shows understanding of the divider equation.\nExample calculation is present and is theoretically appropriate.\n\nComplete Specification:\n\nAll measurements and calculations are filled in with correct values\nExample calculation additionally includes a 1-2 sentence explanation of how the op-amp is affecting the calculation and the measurement. The explanation should make reference to appropriate op-amp input and output impedance properties."
  },
  {
    "objectID": "labs/lab2/submission.html#extra-credit-writeups",
    "href": "labs/lab2/submission.html#extra-credit-writeups",
    "title": "Lab 2 Submission Sheet",
    "section": "Extra Credit Writeups:",
    "text": "Extra Credit Writeups:\nWe don’t provide complete specifications for extra credit writeups, but they will be graded for effort and completeness like normal sections. You need to provide a “mini-report” of &lt;1 page for each extra credit section that you attempt. Put a page break between each extra credit mini-report."
  },
  {
    "objectID": "labs/lab0/matlab-startup.html",
    "href": "labs/lab0/matlab-startup.html",
    "title": "E72+E80 MATLAB Tutorial",
    "section": "",
    "text": "Welcome to the E72+E80 MATLAB Tutorial! If you need more support, ask someone during E72 office hours. Also, there are lots of resources online for using MATLAB."
  },
  {
    "objectID": "labs/lab0/matlab-startup.html#what-to-submit",
    "href": "labs/lab0/matlab-startup.html#what-to-submit",
    "title": "E72+E80 MATLAB Tutorial",
    "section": "What to Submit",
    "text": "What to Submit\nAt the end of this assignment you will submit pieces of information:\n\nA screenshot showing you’ve completed the assigned sections of the MATLAB On-ramp tutorial.\nA brief, 2-3 sentence reflection detailing something you learned from the plotting question.\nA brief, 4-5 sentence reflection detailing something you learned from the debugging practice.\n\nYou should prepare these items in an MS Word document or Google Doc and then download it as a PDF to submit on Canvas."
  },
  {
    "objectID": "labs/lab0/matlab-startup.html#matlab-tutorial",
    "href": "labs/lab0/matlab-startup.html#matlab-tutorial",
    "title": "E72+E80 MATLAB Tutorial",
    "section": "MATLAB Tutorial",
    "text": "MATLAB Tutorial\n\n1. Installing MATLAB on your personal computer\nThere is a version of MATLAB that youone can run in the cloud via a browser, but because we’ll be using MATLAB a lot in this class, so we recommend that you install it on your personal computer. To do so, follow these instructions. Please install MATLAB R2023b or later.\nImportant: When you are installing MATLAB, you’ll be asked what packages you want included. For E72, you need at minimum the following toolboxes:\n\nCurve Fitting Toolbox\nOptimization Toolbox\nSignal Processing Toolbox\nSymbolic Math Toolbox\n\nIf you’ve previously installed MATLAB, you can add the packages by going through the installation process again. To see what packages you have installed, type “ver” at the command window. You can also install packages within MATLAB by clicking on Apps, then Get More Apps, typing in the name of the toolbox in the search bar, and making sure Toolboxes and Products is checked under Filter by Type on the left side bar. If you get an error Your administrator has restricted your download access..., first try restarting MATLAB.\nThere are lots of videos on MATLAB online. For example, if you want to know how to use fsolve, you can search “MATLAB fsolve tutorial” on YouTube.\n\n\n2. MATLAB Onramp\n\n\n\n\n\n\nFigure 1: Screenshot of MATLAB Onramp\n\n\n\nFirst, you will learn some basics of MATLAB using the MATLAB Academy tutorial called Onramp. Note that Onramp does not require you to install MATLAB, since it uses an online programming environment that simulates MATLAB’s look, feel, and functionality.\n\nNavigate to the MATLAB Onramp self-paced online course. You will need to login using the account that you created earlier.\nComplete the following modules of Onramp:\n\nCourse Overview\nCommands\nVectors and Matrices\nArray Indexing and Modification\nData Import\n\n\nFeel free to explore other parts of this too to build your confidence with MATLAB.\nOnce you’ve finished the modules in the list above, take a screenshot of the Course modules pages which shows your progress and green checkmarks next to the segments you’ve completed. You’ll need to submit this screenshot for this assignment.\n\n\n3. MATLAB Plotting Video\nWatch this 17-minute video https://vimeo.com/57954461 to learn how to create various 2-D and 3-D graphs in MATLAB.\nWe strongly recommend that you don’t watch the videos passively. Instead, pause frequently while watching the video so that you can try things out on your own in MATLAB.\n\n\n4. MATLAB Debugging Tips\nWatch this 17-minute video https://vimeo.com/501103844 to learn how to find and fix errors in your MATLAB code. This skill will greatly aid you in all classes that require the use of MATLAB.\nIf you want to try using the debugger yourself with this piece of code, download debugpractice.m.\nTo download the file, you can click the little downward pointing arrow in the toolbard at the top right of the code.\n\n\n\n\n\n\nFigure 2: Button to download individual file from the GitHub repository.\n\n\n\n\n\n5. Practice Debugging in MATLAB\nPractice your MATLAB debugging skills on this script debugme.m, which is supposed to create a matrix like the one below.\nThe code should be able to produce a matrix with a user-specified number of columns. In the diagram below, we show what the output matrix should look like if it has 10 columns. The number of rows in this case would need to be 32, since the matrix has three 10x10 blocks in the middle, sandwiched by the row of ones at the top and row of ones at the bottom.\n\n\n\n\n\n\nFigure 3: Desired code output matrix.\n\n\n\n\nHint: In MATLAB, if you create a matrix with a certain size and then you try to assign an element of that matrix outside of its existing dimensions, MATLAB won’t give you an error. Instead, it will just extend the matrix outward as large as necessary to accommodate that new element."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "E80: Experimental Engineering",
    "section": "",
    "text": "E80, Experimental Engineering, is a sophomore-level, semester-long required course, in which students conduct multiple experiments covering a number of engineering disciplines. These experiments are a training ground for a final project: a field deployment where student teams measure phenomena of their choice. Experimental Engineering is an essential part of the engineering curriculum at Harvey Mudd College, and has been offered as a course for over twenty years. Its predecessor E54 - which had more experiments and no field experience - was also offered for more than 20 years.\nThe primary purpose of the course is to teach basic instrumentation and measurement techniques, good lab report practice, technical report writing, analysis and presentation of data, the usage of experimental results for engineering design purposes, and the beginnings of professional practice. In 2008 the course was revamped to change the field experience to flying fully-instrumented model rockets. In 2017 the course was revamped again with yet another new field experience: deploying fully autonomous underwater robots."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "E80: Experimental Engineering",
    "section": "",
    "text": "E80, Experimental Engineering, is a sophomore-level, semester-long required course, in which students conduct multiple experiments covering a number of engineering disciplines. These experiments are a training ground for a final project: a field deployment where student teams measure phenomena of their choice. Experimental Engineering is an essential part of the engineering curriculum at Harvey Mudd College, and has been offered as a course for over twenty years. Its predecessor E54 - which had more experiments and no field experience - was also offered for more than 20 years.\nThe primary purpose of the course is to teach basic instrumentation and measurement techniques, good lab report practice, technical report writing, analysis and presentation of data, the usage of experimental results for engineering design purposes, and the beginnings of professional practice. In 2008 the course was revamped to change the field experience to flying fully-instrumented model rockets. In 2017 the course was revamped again with yet another new field experience: deploying fully autonomous underwater robots."
  },
  {
    "objectID": "index.html#faculty-and-office-hours",
    "href": "index.html#faculty-and-office-hours",
    "title": "E80: Experimental Engineering",
    "section": "Faculty and Office Hours",
    "text": "Faculty and Office Hours\n\n\n\n\n\n\n\n\n\nName\nDay\nHours\nLocation\n\n\n\n\nMatthew Spencer\nMonday\n9:30 am to 11:00 am and1:00 pm to 4:00 pm\nParsons 2358\n\n\nEthan Ritz\nMonday/Wednesday\n4:00 pm to 5:00 pm\nMiddle tent in Strauss plaza\n\n\nQimin Yang\nTuesday\n9:00 am to 11:00 am\nParsons 2365\n\n\nJosh Brake\nTuesday\n1:00 pm to 3:00 pm\nTent outside Parsons\n\n\nDre Helmns\nWednesday\n1:00 pm to 3:00 pm\nParsons 1292C\n\n\n\nYou may attend any office hours, not just your section professor’s."
  },
  {
    "objectID": "index.html#meeting-times",
    "href": "index.html#meeting-times",
    "title": "E80: Experimental Engineering",
    "section": "Meeting Times",
    "text": "Meeting Times\n\nLab Section 1:\nTuesday 1:15 p.m. to 5:15 p.m. in Parsons B171 & B181 (Prof. Helmns)\nLab Section 2:\nWednesday 1:15 p.m. to 5:15 p.m. in Parsons B171 & B181 (Prof. Yang)\nLab Section 3:\nThursday 1:15 p.m. to 5:15 p.m. in Parsons B171 & B181 (Prof. Ritz)\nWriting and Reflection for all sections - Friday 1:15 p.m. - 3:15 p.m\n\nSection 1 - Shan 2440\nSection 2 - Shan 2450\nSection 3 - Shan 2454\n\n\nAfter spring break: There will be open lab hours in Parsons B171 & B181 during the normally scheduled lab times.\nStudents may only work in the E80 labs when a professor, staff or a proctor opens the lab. Any team may use the equipment in the labs during a lab section, but teams that are scheduled for the section have top priority for the equipment."
  },
  {
    "objectID": "index.html#mask-policy",
    "href": "index.html#mask-policy",
    "title": "E80: Experimental Engineering",
    "section": "Mask Policy",
    "text": "Mask Policy\nMasks will be required for all E80 activities until further notice."
  },
  {
    "objectID": "index.html#digital-communication",
    "href": "index.html#digital-communication",
    "title": "E80: Experimental Engineering",
    "section": "Digital Communication",
    "text": "Digital Communication\n\nhttps://github.com/HMC-E80/E80 This is our Github repository, which lets you use Git to acces E80 software. Git is a distributed version control system where you can copy source code and track changes to the code. Lab 0 will walk you through the steps to configure Git on your computer.\nhttps://discord.gg/Eu7gFZKgcj This is an invite to our Discord server. All digital communication and asynchronous help requests will go through Discord, so default to messaging there instead of emailing us.\nhttps://harveymuddcollege.instructure.com/courses/1097 This is our Canvas site. We will use Canvas to collect your assignments, receive your quiz responses and record your grades.\nAll other information for the course is distributed on this website."
  },
  {
    "objectID": "index.html#course-kit-fee",
    "href": "index.html#course-kit-fee",
    "title": "E80: Experimental Engineering",
    "section": "Course kit fee",
    "text": "Course kit fee\n\nThere is a $65 kit fee per student. This fee can be waived in cases of financial hardship. Course instructors will not know about waiver requests.\nKit payment can be made here.\nKit waiver request can be made here."
  },
  {
    "objectID": "index.html#team-and-group-assignments",
    "href": "index.html#team-and-group-assignments",
    "title": "E80: Experimental Engineering",
    "section": "Team and Group Assignments",
    "text": "Team and Group Assignments\nAlmost all work in E80 is completed in teams. Some details about teams are below.\n\nTeams are assigned before your first laboratory meeting.\nThese assignments will be made using whatever method your instructor desires, and the nominal team size is four members.\nSometimes registration limits in a class will require teams of three or five members to be formed.\nThese teams are designated using a 2 digit number where the first is your section number and the second is your team’s number (e.g. section 1’s team 1 is 11).\nYou must report your team number on all assignments.\nFor three of the labs (2, 3, and 5), you will need to split your team into 2 sub-teams.\nA different sub-team must be used for each of these Labs.\nTeam assignments will be for the duration of the course.\nIf you’re having problems on your team, talk to a professor or staff member early so we can try to help.\n\nTeam assignments can be found on the People tab on Cavnas."
  },
  {
    "objectID": "index.html#graded-submissions",
    "href": "index.html#graded-submissions",
    "title": "E80: Experimental Engineering",
    "section": "Graded Submissions",
    "text": "Graded Submissions\n\nGraded Submissions Breakdown\n\n\n\n\nItem\nWeight\n\n\n\n\nLecture Quizzes\n7%\n\n\nSurveys and Team Check-Ins\n6%\n\n\nLaboratory Submission Sheets\n32%\n\n\nLaboratory Writing Assignments\n15%\n\n\nTechnical Memorandum\n10%\n\n\nFinal Presentation\n10%\n\n\nFinal Report\n15%\n\n\nParticipation\n5%\n\n\n\n\n\n\nTurn-In on Canvas\nAll assignments that you need to complete, including links to quizzes, can be found in the Modules tab on Cavnas. You will always turn in assignments on Canvas or complete quizzes/surveys linked from Canvas.\n\n\nSpecifications Grading\nThe grading in E80 for submission sheets and writing assignments is based on whether or not your deliverables meet two different levels of specifications: effort and completion. The overall grade on an assignment is determined by how many of the sections meet either effort or completion.\nEffort specs describe good-faith effort whereas completion specs describe correctness.\nIn most situations, completing all the effort specs is equivalent to a passing grade on the assignment. The remaining sections of completion specs raise your grade from a passing grade to full credit.\nIf the initial version of a submitted assignment does not meet specs, it may be revised according to the stipulations of the course resubmissions policy.\n\n\nGraded Submissions Details\n\nLecture Quizzes\n\nThere are seven video lecture sets that you are expected to watch. Each of these video sets has an associated online quiz. You must take each of these quizzes individually.\nYou may not talk to other people in order to take the quiz, but they are open book, notes and internet. The one exception to the ‘no people’ rule is that you may speak with a professor to clarify ideas before you open the quiz associated with the lecture set.\n\n\n\nSurveys and Team Check-Ins\n\nYou will be called upon to complete surveys at the beginning, middle and end of the class, and each week, you will be asked to complete a team check-in (a quick peer evaluation) for the lab done that week. Completing each of the check-ins is worth 0.5% of your grade, and completing each of the longer surveys is worth 1% of your grade.\nThere are a total of 6 weekly check-ins (from weeks 2 through 7) and they are due each Friday at 3:30 pm.\nThese are individual assignments\n\n\n\nLaboratory Submission Sheets\n\nThere are a total of 8 labs in the class: Lab0 through Lab7. You must submit a submission sheet for each of the labs that contains data you collected during the lab. (Though note that in lab0 the Matlab on-ramp deliverable is the submission sheet.) This submission sheet will be evaluated for correctness: it’s a way of assessing whether your experimental procedure was correct during the lab. Each submission sheet you provide will be worth 4% of your final grade.\nThese are group assignments, so there will be only one submission per team. The Matlab onramp for lab 0 is an exception: it is an individual assignment.\n\n\n\nLaboratory Writing Assignments\n\nYou will be required to complete a writing assignment after labs 1-5. The purpose of the writing assignments is to train you in specific aspects of scientific writing: making figures, using tables, equations, etc. These assignments are completed entirely on Friday in the Writing and Reflection section. Each writing assignment will be worth 3% of your final grade, and you submit five assignments for a total of 15%.\nThese are individual assignments. The team contract exercise in week 0 is an exception, there should be one team contract submission per team.\n\n\n\nTechnical Memorandum\n\nEach student will write an individual technical memorandum on material covered in Lab 6. See the Lab 6 page for more information.\nYou must submit a tech memo to pass the class.\n\n\n\nFinal Presentation\n\nEach team will make a final presentation during Presentation Days, on Wednesday, May 1st, 2024. A detailed schedule will be posted ASAP. The presentation is 15-minutes long followed by a 10-minute Q&A session. The Final Presentation guidelines and rubric are found on the Final Project page.\n\n\n\nFinal Report\n\nA final technical report will be submitted by each team on the results of the final AUV deployments. The report will be graded for both technical content and proper use of technical English. (see also this article.). A rough draft of your final report is due at 11:59 PM on 4/26/24. The final draft is due at 11:59 PM on 5/1/2024. The Final Report guidelines are found on the Final Project page.\n\n\n\nParticipation\n\nThe instructors will assign you a participation grade which is determined by their in-lab observations, your peer evaluations, and your regular progress through the project checkoffs."
  },
  {
    "objectID": "index.html#end-of-semester-grades",
    "href": "index.html#end-of-semester-grades",
    "title": "E80: Experimental Engineering",
    "section": "End-of-Semester Grades",
    "text": "End-of-Semester Grades\nGrades will be awarded on a standard grading scale (93.3% is an A, 90% A-, 86.6% is a B+, etc …) based on your total individual score. The professors reserve the right to award grades more leniently than this grading standard."
  },
  {
    "objectID": "index.html#course-calendar",
    "href": "index.html#course-calendar",
    "title": "E80: Experimental Engineering",
    "section": "Course Calendar",
    "text": "Course Calendar\nA Google Sheet with the key dates and assignments in E80 can be found here.\nYou can also review the Modules tab on Cavnas for a week-by-week breakdown of what’s due with links to refernece material and where to turn stuff in."
  },
  {
    "objectID": "index.html#course-policies",
    "href": "index.html#course-policies",
    "title": "E80: Experimental Engineering",
    "section": "Course Policies",
    "text": "Course Policies\n\nAttendance and Tardiness\nStudents sometimes have to miss E80 labs for an assortment of reasons. The instructors don’t record attendance because we assume that groups will work to equitably account for absences or tardiness. For example, if your group has a member with a planned absence for a particular lab, then you and your teammates should discuss how to shift more prelab work to the person who will be absent. If you don’t feel like everyone is pulling their fair share, talk to your group and talk to an instructor so we can help you navigate the situation.\n\n\nLate Work Policy\nNo late work is accepted. You will receive no points for work submitted after deadlines. This is in keeping with good professional practice. Some assignments may allow for multiple attempts and resubmission, but the first attempt always needs to be submitted by the appropriate deadline.\n\n\nIncomplete Grade Policy\nIncomplete grades will be granted only in rare circumstances and require the approval of the instructor.\n\n\nPre- and Post-Lab Work Policy\nThe amount of time that you are free to work in lab is restricted. We enforce these restrictions for three main reasons:\n\nto simulate demands that can arise in real-world engineering,\nto help students internalize the learning goals of the class, and\nto help keep E80 to a smaller time footprint.\n\nYou are allowed to work in any way you would like on before a lab (pre-lab) as long as you do not touch any hardware. You may NOT collect data (for your experiment), manipulate or test hardware, populate a protoboard, or use the laboratory equipment outside of your lab hours. However, you may look at datasheets, write software, calculate expected results, prepare Excel sheets to do calculations in lab, ask how equipment works, run your preparations by professors, and pursue a variety of other activities. You can spend as much or as little time desired on the pre-lab activities, but successful teams spend a lot of time and energy before the lab starts.\nThe post-lab period is for reflection, resubmission when it’s allowed, and taking a break from E80. You may NOT collect data, manipulate or test hardware, populate a protoboard, or use the laboratory equipment outside of lab. However, you may freely reprocess any data that you have already collected during a lab section. This includes, but is not limited to, writing MATLAB code for processing and visualizing your data.\nWhen in doubt about whether an activity is acceptable outside of lab, ask.\n\n\nResubmission Policy\nLab submission sheets and writing assignments in E80 are able to be resubmitted without penalty if they do not meet completion specs on the initial attempt. To be clear, this means that resubmitted assignments are worth the same amount as initial submission and full credit can be earned even if the initial submission does not fully meet the specifications.\nThe resubmission policy is subject to the stipulations listed below:\n\nYou must submit something by the assignment deadline.\n\nDon’t phone this in because there is limited time for resubmission.\n\nAfter you receive feedback, you can revise your submissions until spring break.\n\nMost of specs can be done outside of lab with data.\nHowever, if you weren’t able to get good data, there is one week before spring break where you can go back to collect more.\n\nResubmissions are checked off by an instructor during office hours.\nFor all submissions, you will need to self-assess before you submit. Every assignment you submit should be accompanied along with a checklist of specs that you believe the assignment meets or does not meet.\nAll resubmissions must be completed by spring break.\n\n\n\nCooperation Between Teams\nCooperation between teams is limited. The rules for each period of the week (pre-lab, during lab, post-lab and writing and reflection) are below. In this section, the word group will refer to a full team of students during a normal week or a sub-team of students during weeks where teams are split into sub-teams.\n\nPre-lab: A group may discuss the lab with another group to make sure they are clear on concepts and understanding. Groups may not share code, writing, or documentation with other groups.\nDuring Lab: Groups cannot work together, discuss concepts or understanding, share data, share code, or share writing. Groups may arrange to swap hardware to debug and test defective parts of an experiment or device, but they should strongly consider elevating their concerns to an instructor if part swaps are necessary or if parts are being destroyed.\nPost-Lab: Groups may work with other groups in the same way as the prelab: they may discuss concepts and understanding (including talking about the scale of measured results from lab).\nWriting and Reflection: Each student should be producing an individual work product and may not exchange code or writing with other students. Data may be shared among a group, but not between groups.\n\nThese work restrictions are relaxed during the final project (after spring break): Groups may work on their robot at any time and may discuss any aspect of their robots with one another (as if the prelab policy always applies).\n\n\nSharing Rubrics\nWe will be returning/releasing graded lab report rubrics throughout the semester. It is an HONOR CODE VIOLATION to share these rubrics with other teams or with students enrolled in future versions of E80.\n\n\nAccess to Lab During the Final Project\n\nStudents may work in the labs any time that it is open.\nStudents may only work in the E80 lab when a professor, staff member or proctor opens the lab.\nAny team may use the equipment in the E80 and electronics labs during a lab section, but teams which are scheduled for a section have top priority for the equipment.\n\n\n\nAccessibility and Accommodations\nHarvey Mudd College strives to make all learning experiences as accessible as possible. If you anticipate or experience academic barriers based on your disability (including mental health, chronic or temporary medical conditions). If you have any questions, please contact the Office of Accessible Education at access@g.hmc.edu. Students from the other Claremont Colleges should contact their home college’s disability officer. You also need to register with the Office of Disability Resources. to establish reasonable accommodations.\n\n\nAcademic Honesty/Plagiarism\nEach student will be responsible for observing HMC’s Honor code and abiding by the Standards of Conduct:\n\n\n“All members of ASHMC are responsible for maintaining their integrity and the integrity of the College community in all academic matters and in all affairs concerning the community.” –ASHMC Constitution\n\n\nThoughtful respect for the rights of others;\nHonesty and integrity in both academic and personal matters;\nResponsible behavior both on and off campus;\nAppropriate use of campus buildings and equipment, and;\nCompliance with College regulations and policies."
  },
  {
    "objectID": "labs/lab0/index.html",
    "href": "labs/lab0/index.html",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "",
    "text": "Team size: 4"
  },
  {
    "objectID": "labs/lab0/index.html#introduction",
    "href": "labs/lab0/index.html#introduction",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Introduction",
    "text": "Introduction\nThis lab is an opportunity for refreshing your skills and getting software and hardware setup for Labs 1 through 6 and the project Jump Start.\nBy the end of this lab you should have:\n\nChosen and resized an E79 robot frame\nPrepared 3 waterproof motors, tested them, and attached them to the frame\nCharged your battery\nReviewed breadboarding and use of oscilloscope and power supply\nChecked out and soldered header pins to Teensy 4.0 (Limited supply - Do not lose/break/eat)\nSet up the Arduino IDE on your computer\nSet up Github Desktop on your computer\nDownloaded E80 source code\nSet up MATLAB\n\nAsk your instructor for any guidance including where to find tools. Don’t forget to clean up afterwards.\nThis lab is a little different than most E80 labs because we want each team member to individially practice most of the skills. In future labs, it will be imperative to get into the habit of distributing work across team members and working in parallel. Deciding how to break up that work is a great pre-lab exercise, and you’ll be hearing more about prelab soon.\nEvery member of the team should complete the following sections:\n\nBreadboarding\nOscilloscope\nSoldering (though only one person can solder the Teensy, everyone should practice)\nGithub Desktop and Arduino IDE Setup\nArduino Practice\nSD Card Reading\nMATLAB Access\nMATLAB On-ramp\n\nThe remaining sections can be broken into parallel tasks\n\nFrame Assembly (it makes sense to break up frame assembly and motor construction)\nBattery\n\nAnd, of course, every team member should participate in the team forming activity"
  },
  {
    "objectID": "labs/lab0/index.html#team-forming",
    "href": "labs/lab0/index.html#team-forming",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Team Forming",
    "text": "Team Forming\nWelcome to your new E80 team! Working well together is important to your success. Do this introduction game, even if it seems silly, to lay the foundation for your future teamwork!\n\nTeam Proverb\nCompose a proverb one word at a time by following these instructions:\n\nEveryone in the team stands in a circle.\nSomeone begins a proverb by saying one word.\nThe person next to them continues the proverb with another word.\nKeep moving around the cirle until the proverb feels complete.\nCelebrate the proverb by having everyone in the circle tap their fingers together saying “yesyesyesyes…”\nRepeat 1-2 more times.\n\nTo get you started, here are some example proverbs:\n\nA real one: “A bird in the hand is worth two in the bush.”\nOne from the E80 teaching team: “A dog says ‘woof’ if happy or sad … yesyesyesyes…”\n\n\n\nGet to Know Your Teammates\nNext, please take turns sharing the following. The person whose birthday is soonest goes first!\n\nYour name and where you live on campus\nYour favorite breakfast cereal\nOne thing that makes you excited about E80\nOne thing that makes you nervous about E80\nWhat you most hope to learn from E80\n\n\n\nKick Off the Semester\nCelebrate your team formation with some gesture before diving in to the work. Options include:\n\nPutting hands together and yelling, “go team!”\nOne clap in unison\nSteely eyed stares and nods for ~5 seconds\nSolemnly swearing to support one another’s learning\nSome other token you invent"
  },
  {
    "objectID": "labs/lab0/index.html#frame-assembly",
    "href": "labs/lab0/index.html#frame-assembly",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Frame Assembly",
    "text": "Frame Assembly\nWe will be reusing the frames from the ROV’s you constructed during E79, but a minor modification will need to be made in order to change your ROV (Remotely Controlled Vehicle) into an AUV (Autonomous Underwater Vehicle). Specifically, you will need to increase the width of the frame to fit the waterproof box that will house the motherboard, microcontroller, battery, additional sensors, etc.\nThis image is a helpful reference for the modification:\n\n\n\n\n\n\nFigure 1: Modified E79 ROV for use in E80.\n\n\n\n\nObtain two additional 6.5’’ PVC pieces to replace the 4.5’’ ones.\nDrill the mounting holes for your vertical motor. You will be mounting your AUV’s motors in the same manner as the three motor assembly in Practicum 1A Section 4.7.\nConstruct at least one additional motor from scratch. Reference Practicum 1A Section 4.2 for assembly instructions. Each team will be provided with 2 used motors, but needs to make a third, and may make more to have backups.\nTest that all three of your motors pull less than 500 mA. To do this, supply 6 V to the motor using a power supply.\nMount the motors on the new frame."
  },
  {
    "objectID": "labs/lab0/index.html#battery",
    "href": "labs/lab0/index.html#battery",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Battery",
    "text": "Battery\nYour AUV will need power, and we provide that with a battery pack. The battery pack used in E80 is a 3000 mAh to 3500 mAh, 30 C, 11.1 V LiPo battery pack. To charge the batteries, we will use a HiTec x1 Mini charger or a UP60AC multi charger. Here are some helpful images showing a correct charging setup.\n\nRead the manual on how to use the chargers.\nDetermine how many cells are in the battery pack, and the maximum, minimum and nominal voltage outputs of these battery packs.\nRequest a battery and a LiPo safe bag from an instructor and set up your battery for charging.\nImportant! Ask an instructor or proctor to check your recharging setup before you begin charging!\nCharge the battery up to its maximum voltage.\n\n\n\n\n\n\n\nWarning\n\n\n\nMake sure you plug the balancer cable into the balance lead socket (the black wire should align with the minus sign). Failure to do this may cause the battery to explode! Always use a LiPo-safe bag while charging. Never charge above 12.6 V or allow your battery to discharbe below 11.1V."
  },
  {
    "objectID": "labs/lab0/index.html#breadboarding",
    "href": "labs/lab0/index.html#breadboarding",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Breadboarding",
    "text": "Breadboarding\nWe do a lot of electronics prototyping in E80 because most experimental measurements are electrical. A breadboard is a crucial tool for electronics prototyping. The videos below explain how a breadboard works and how to use one. Watch the first two videos and follow along with them. Give the third one a try if you have time.\n\nSimple LED Lesson: The tutorial shows an LED circuit without a current limiting resistor, which can make the LED burn up. Sometimes literally. So please place a resistor in series with your LED, and calculate an appropriate resistance value using this formula:\n\\[R=\\frac{(V_s-V_F)}{I_F}\\]\nwhere \\(V_S\\) is the supply voltage, and \\(V_F\\) and \\(I_F\\) are the foward voltage and current of the diode respectively. \\(V_F\\) and \\(I_F\\) can be found on LED datasheet.\nBreadboard Internals.\nHow to build a 555 Timer circuit. Here is a link with a circuit diagram. Here is a video on how the 555 works.\n\n\n\n\n\n\n\nNote\n\n\n\nNote: one super tricky failure mode in breadboards is that internal connections of breadboards can break. You can always trace connectivity with a multimeter if you’re stumped with a failing circuit."
  },
  {
    "objectID": "labs/lab0/index.html#oscilloscope",
    "href": "labs/lab0/index.html#oscilloscope",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Oscilloscope",
    "text": "Oscilloscope\nYou will be using an oscilloscope for most E80 labs. If you need a refresher on how to use an oscilloscope, refer to Practicum 2B from E79."
  },
  {
    "objectID": "labs/lab0/index.html#soldering",
    "href": "labs/lab0/index.html#soldering",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Soldering",
    "text": "Soldering\nYou will need to solder printed circuit boards and wire connections in E80, so it’s worthwhile to practice if you’re rusty. Your team also needs to solder pins onto a Teensy today and make sure the soldering job worked.\n\nReview a helpful video on how to solder, found here.\nFind a practice solder board and solder a few joints.\nOne team member should check out a Teensy from an instructor. Note that Teensys are in limited supply, so practice soldering before checking this out.\nOne team member should solder header pins to the Teensy. Use the reference images below as a guide, and make sure your pins are oriented as indicated in the references before you solder.\n\nRemember to:\n\nNever leave your soldering iron unattended.\nTurn the iron off any time it isn’t used for more than 30 seconds. A good rule of thumb is “The iron is off unless you are holding it right now.”\nUse recently soaked sponge. Use a spray bottle to moisten. Never use the sink or water fountain.\nUse fume extractor: fumes from rosin in solder is a respiratory irritant.\nWash hands after handling solder – solder is 40% lead. Skin contact is harmless, but ingestion can occur with unwashed hands when eating, drinking, or smoking.\nAlways tin the tip of your iron before turning it off.\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Unsoldered Teensy and strip of header pins.\n\n\n\n\n\n\n\n\n\n\n\n(b) Soldered Teensy 4.0.\n\n\n\n\n\n\n\nFigure 2: Reference diagrams for Teensy assembly."
  },
  {
    "objectID": "labs/lab0/index.html#github-desktop-and-arduino-ide-setup",
    "href": "labs/lab0/index.html#github-desktop-and-arduino-ide-setup",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Github Desktop and Arduino IDE Setup",
    "text": "Github Desktop and Arduino IDE Setup\nRobot behavior is specified in software, so we need to set up two tools for working with software on your machine. First, we need the Arduino integrated development environment (IDE). An integrated development environment (IDE) is a program that makes writing software easier, and we’ll use the Arduino IDE to program our Teensys. Second, we need version control software so we can keep your code up to date. Git is a distributed version control system that allows you to download a local copy of all the E80 software. It also allows you to easily track the changes that you make to your code. While we won’t be using all the features of git in E80, we will introduce you to the main features that will enable you to interact with the code base for your robot.\nFollow the setup instructions at bottom of the E80 Github page. After completing these instructions you should have a folder on your computer with all the E80 starter source code for the semester and have the Arduino IDE set up to easily access and load the provided sketchbooks."
  },
  {
    "objectID": "labs/lab0/index.html#arduino-practice",
    "href": "labs/lab0/index.html#arduino-practice",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Arduino Practice",
    "text": "Arduino Practice\nOnce you have the Arduino IDE installed, Github Desktop set up, and pins soldered on your Teensy, share the Teensy among your teammates to run through a few more Arduino tutorials:\nTest your connection to the Teensy by compiling and uploading the RGB LED example in the Arduino IDE. Then ensure you can compile and uplaod the E80 code.\n\nPlug your Teensy into your laptop\nOpen the RGB LED example by navigating to File -&gt; Examples -&gt; 0.1 Basics -&gt; Blink.\nFollow the instructions here to compile and upload to the Teensy\nChange the Arduino IDE Sketchbook location to the E80 Gitlab folder, which you downloaded earlier in the section, by using File-&gt;Preferences.\nOpen E80_Lab_01.ino.\nConfirm that you can compile and upload the starter code to your Teensy. Since your Teensy is not plugged into your motherboard here, this code will do little. It is fully tested in Lab 1.\n\n\n\n\n\n\n\nNote\n\n\n\nYou must use a micro USB cable (see image here) to connect the Teensy to your computer before you can upload sketches.\n\n\n\n\n\n\n\n\nWarning\n\n\n\nWhen connecting and disconnecting the USB cable from your Teensy be sure to only apply force horizontally and not vertically. Failing to follow this may result in accidentally pulling the USB connector off your Teensy board, thus destroying it.\n\n\n\n\n\n\n\n\nNote\n\n\n\nYou will not have a Teensy for pre-labs, but downloading the necessary software and trying to modify and compile your lab code in the IDE is great Prelab practice.\n\n\nThen try these tutorials if you have time.\n\nBlinking lights on the Arduino board:\n\nHooking up an external LED"
  },
  {
    "objectID": "labs/lab0/index.html#sd-card-reading",
    "href": "labs/lab0/index.html#sd-card-reading",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "SD Card Reading",
    "text": "SD Card Reading\nFind a micro-SD card. Make sure your computer can read it."
  },
  {
    "objectID": "labs/lab0/index.html#matlab-access",
    "href": "labs/lab0/index.html#matlab-access",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "MATLAB Access",
    "text": "MATLAB Access\nYou will be using MATLAB to help analyze and interact with data throughout this course, so you need to install MATLAB. You will first need to Visit the MATLAB Portal and log in using your Mathworks account. If you do not have an account, create one using your username@hmc.edu credentials.\nThen, do the following to install MATLAB on your computer:\n\nVisit the MATLAB Portal.\nChoose to download the installer and select your operating system.\nRun the installer and log into your Mathworks account again.\nSelect “Individual” license and complete the installation process.\n\nIt is also possible to use an online copy of MATLAB here, but we discourage doing so in this course."
  },
  {
    "objectID": "labs/lab0/index.html#matlab-on-ramp",
    "href": "labs/lab0/index.html#matlab-on-ramp",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "MATLAB On-ramp",
    "text": "MATLAB On-ramp\nIf you have extra time during Lab 0 you may work on the MATLAB on-ramp tutorial. You can find the assignment here."
  },
  {
    "objectID": "labs/lab2/index.html",
    "href": "labs/lab2/index.html",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "",
    "text": "Team size: 2\nSubmission Sheet: html Word\nPrelab Help Sheet: html\nWriting Assignment: html\nWriting Template: html Word"
  },
  {
    "objectID": "labs/lab2/index.html#introduction",
    "href": "labs/lab2/index.html#introduction",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "1 Introduction",
    "text": "1 Introduction\nIn this lab you review the use of electrical test equipment, calculate the uncertainty in a measurement based on its components, and apply equivalent circuit models to understand instrument loading and op-amp buffers. Electrical instruments and op-amps are used in every lab in this course, so we are doing this lab to build your toolkit for making experimental measurements. Another goal of the lab is for you to practice error analysis and propagation.\nAfter successful completion of this lab, you will be able to…\n\nUse a multimeter, function generator, power supply, and oscilloscope.\nDescribe what “instrument loading” means and explain why it happens.\nBuild operational amplifier buffers to reduce instrument loading.\nExplain how to relate RMS voltages and amplitudes of sinusoidal voltage signals.\nApply error propagation techniques to resistive voltage dividers to make uncertainty predictions in voltage measurements.\n\nThis lab will be completed in sub-teams of two students. Before the lab you must decide how you will split your team. Two other labs (labs 3 and 4) will also be completed as sub-teams, and you must use a different sub-team for each of these labs. Each sub-team will be responsible for its own submission sheet. Pre-lab work may still be carried out with your whole team, but be sure each sub-team is ready to tackle the in-lab work independently. Even though your team will be split into two sub-teams, you will only have access to one motherboard/Teensy assembly. Plan your work carefully so that you share it equitably. You will let us know about your sub-team choices using a Canvas feature called “self-selected teams,” so give yourself a little extra time to turn in your submission sheet and sort that feature out."
  },
  {
    "objectID": "labs/lab2/index.html#sec-teensy-analog",
    "href": "labs/lab2/index.html#sec-teensy-analog",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "2 Logging Analog Data with the Teensy",
    "text": "2 Logging Analog Data with the Teensy\nThe Teensy contains an analog to digital converter which can measure analog signals on many of its pins. In this section you will take your first analog measurement with the Teensy. You will use two different pieces of software to log data from the Teensy in this section: A program on your Teensy (written in Arduino code) will sample data, and a MATLAB program will interpret serial data sent by your Teensy. These programs sample the voltage on input A0, which is identified on the silk screen on the back of your motherboard.\n\n\n\n\n\n\nWarning\n\n\n\nAlways connect to your Teensy pins through the E80 motherboard, which has protection circuits designed to prevent damage to the Teensy.\n\n\nSet up the analog meaurement,\n\nAttach a wire to the empty A0 hole on your motherboard. Wire-wrapping solid core wire works well, a male-male jumper wire works OK. DO NOT SOLDER IT. We will solder a header there later, and desoldering a wire will make that more difficult.\nFind a way to make a connection between your motherboard ground to your signal generator ground.\n\nMeasure a first set of data\n\nConnect a 200 Hz, 1 Vpp, +0.4 V offset sinussoidal wave from a signal generator to the analog pin A0 and run the following sketch on your Teensy: matlab_logging.ino.\nWhile matlab_logging.ino is running and the Teensy is connected by USB, use matlablogging.m to receive a vector of data from the Teensy.\n\n\n\n\n\n\n\nSerial communication debugging\n\n\n\n\n\n\nYou may need to modify the matlablogging.m so that it points at the COM port which is correct for your Teensy.\nmatlablogging.m can’t access your COM port if the Arduino serial monitor is open, so be sure that it is closed.\nSometimes COM ports get stuck in unusual states and MATLAB can’t access them. Closing all of your programs will usually fix this problem.\n\n\n\n\n\n\n\n\n\n\nFor Apple Computers\n\n\n\n\n\n\nThe serial port (COM) can be found by going to Tools -&gt; Ports in the Arduino IDE or by calling ls /dev/ in the terminal and looking for a file of the form: /dev/tty.XYZABCDEF\nIn the matlab_logging.ino file, if you don’t see any output on the serial port, you may need to comment out the following two lines and re-upload the program to the Teensy\n\nwhile(!Serial.available()) {\nSerial.println(\"Waiting...\"); } \n\n\n\nAnswer the following questions about your first set of data,\n\nWhat is the sample rate achieved by matlab_logging.ino?\nWhat is the relation between the values recorded by matlab_logging.ino and the voltage applied to the pin? (i.e.: how many Volts is one “Teensy Unit”?)\n\nWhat happens to the value recorded by the Teensy when the Voltage on the Teensy pin is less than zero Volts?\n\nMeasure a second set of data,\n\nChange your input signal such that you are measuring a 175 kHz, 1 Vpp, +0.6 V offset signal.\nRecord data using matlab_logging.ino and maltablogging.m\n\nFinally, answer these questions about your second set of data\n\nWhat signal does your Teensy observe?\nWhy? (Hint: you may need to think back to some parts of E79 to figure this one out.)"
  },
  {
    "objectID": "labs/lab2/index.html#sec-dividers",
    "href": "labs/lab2/index.html#sec-dividers",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "3 Resistor Dividers and Instrument Loading",
    "text": "3 Resistor Dividers and Instrument Loading\nThis section is designed to give you practice on two skills: accounting for instrument loading (i.e.: source and load impedance), and calculating uncertainties using error propagation. You will do this by predicting and measuring the Voltage at the output of a series of resistor dividers specified by Figure 1 and Table 1:\n\n\n\n\n\n\nFigure 1: A voltage divider\n\n\n\n\n\n\nTable 1: Impedance values and measurement instruments for experiment\n\n\n\n\n\nZ1\nZ2\nMeasure With\n\n\n\n\nwire\nopen\nMultimeter\n\n\nwire\nopen\n1x Scope Probe\n\n\nwire\nopen\n10x Scope Probe\n\n\nwire\nopen\nTeensy\n\n\n10 \\(\\Omega\\)\n20 \\(\\Omega\\)\nMultimeter\n\n\n10 \\(\\Omega\\)\n20 \\(\\Omega\\)\nTeensy\n\n\n1 k\\(\\Omega\\)\n2 k\\(\\Omega\\)\nMultimeter\n\n\n1 k\\(\\Omega\\)\n2 k\\(\\Omega\\)\nTeensy\n\n\n100 k\\(\\Omega\\)\n200 k\\(\\Omega\\)\nMultimeter\n\n\n100 k\\(\\Omega\\)\n200 k\\(\\Omega\\)\n1x Scope Probe\n\n\n100 k\\(\\Omega\\)\n200 k\\(\\Omega\\)\nTeensy\n\n\n10 M\\(\\Omega\\)\n20 M\\(\\Omega\\)\nMultimeter\n\n\n10 M\\(\\Omega\\)\n20 M\\(\\Omega\\)\n1x Scope Probe\n\n\n10 M\\(\\Omega\\)\n20 M\\(\\Omega\\)\n10x Scope Probe\n\n\n10 M\\(\\Omega\\)\n20 M\\(\\Omega\\)\nTeensy\n\n\n\n\n\n\nYou will be asked to measure the output Voltage with the devices in the “Measure With” column, but some of the devices in the “Measure With” column may be unfamiliar to you. The devices are described below, and datasheet links are provided for each of them. To finish this section, you will need to read these datasheets to find the input impedance and the measurement uncertainty of each device.\n\n“Multimeter” refers to the multimeter chained to your desk. Our multimeters are the Greenlee DM-210A Digital Multimeter. Since the \\(V_{out}\\) node will very with time, you should be sure to measure it with your multimeter set to AC mode. The uncertainty listings for multimeters can use unusual units (e.g.: dgt and rdg), so don’t forget about this document on multimeter specifications that we also link on the lectures page.\n“1x scope probe” refers to using a BNC cable with hooks directly connected to an oscilloscope input. BNC cables don’t have datasheets worth reading for this lab because they’re just wires, so they have a low series impedance. However, the oscilloscope itself (an Agilent 2024A, which has this datasheet) has an input impedance and accuracy that you will need to look up. You can also create a 1x probe by using an oscilloscope probe with a switch set to 1x mode, and it will behave the same way as a BNC cable. When you are using a 1x probe, you must change the channel setting of the oscilloscope to be 1x. Note that some scopes call the channel setting 1:1 instead of 1x.\n“10x scope probe” refers to connecting a standard oscilloscope probe (set to 10x mode if there’s a switch) to an oscilloscope input. The gray scope probes in the lab are Keysight N2842A probes, and the black scope probes in 10x mode have a similar input impedance. Note that the input impedance of a scope probe is added in series with that of the oscilloscope itself, so the datasheet may report a total “terminated impedance” that includes the input impedance of the oscilloscope. When you are using a 10x probe, you must change the channel setting of the oscilloscope to be 10x. Note that some scopes call the channel setting 10:1 instead of 10x.\n“Teensy” refers to making an analog measurement with your Teensy. You made similar to the measurements in Section 2. You made some calculations of the uncertainty of the Teensy, whcih arises from the size of the Teensy unit, in Section 2, and you can find infomation about Teensy input impedance in the videos.\nThough this is not in the “Measure With” column, you will also need to find the output impedance and amplitude undertainty of your signal generator. If you are using the scope-integrated WaveGen output, then you can infer the output impedance and find the uncertainty in the oscilloscope manual. If you are, unusually, using a stand-alone function generators (an HP33120A), you can find these values in the datasheet.\n\nDo the following\n\nFor the circuit shown in Figure 1, and for each of the values of Z1 and Z2 and the measuring instruments in Table 1, calculate the expected output voltages with confidence intervals accounting for uncertainty in both components and instruments. Assume the resistors are 5% resistors. Be sure to include the effects of instrument loading in your calculations. Note that these analytical calculations can be made during prelab.\n\nBuild several copies of the circuit in Figure 1, one for each pair of Z1/Z2 values in Table 1. These can all be built simultaneously on the same breadboard if you lay it out carefully. Please trim your resistor leads so that they lie flat on the breadboard.\nMeasure and record the value of each component used in your construction, then recalculate the output voltages using your measured component values.\nDrive the circuits using a signal generator and measure the output voltage with each of the instruments in the table.\nCheck whether or not the measured voltages lie within the predicted confidence intervals. Recall that you have two sets of predicted voltages, one based on nominal component values and one based on measured component values, so there are two sets of confidence intervals to check against. Also look at the percent error between the predictions and the measurements.\n\n\n\n\n\n\n\nNote\n\n\n\nIf you are having difficulty with the 10 M\\(\\Omega\\) / 20 M\\(\\Omega\\) experiments, try pulling the resistors out of the breadboard and twisting them together in the air. Leakage currents in the breadboard can cause issues with that measurement.\n\n\n\n\n\n\n\n\nHere are some common mistakes with lab equipment\n\n\n\n\n\n\nWhen you are using a multimeter, think carefully about whether it should be set to measure an AC voltage or a DC voltage.\nBe sure to set the oscilloscope channel to match your probe. The scope channel should be 1x with a 1x probe and 10x with a 10x probe.\nFunction generators have a confusing setting called “OUT TERM”. Be sure it is set to “Hi-Z”, especially if you are seeing a factor-of-2 error in your measurements. (See the videos for an explanation of what this setting does.)\nMake sure all your equipment and circuits under test share the same ground. Be particularly careful with oscilloscope ground clips, whcih are connected to earth ground, so you can’t hook them up in the middle of a circuit. Measure differences with the scope by using two probes, not by putting the ground clip on a non-ground node."
  },
  {
    "objectID": "labs/lab2/index.html#resistor-dividers-with-op-amps",
    "href": "labs/lab2/index.html#resistor-dividers-with-op-amps",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "4 Resistor Dividers with Op Amps",
    "text": "4 Resistor Dividers with Op Amps\nBuild the circuits in Figure 2 (a) and Figure 2 (b), and measure \\(V_{out}\\) for both circuits with the multimeter. In both cases, power the op-amp with ±15 V. Compare and contrast your results with equivalent cases (same Z1 & Z2, measured with multimeter) from Section 3. What is the function of the op-amp in each of these measurements?\n\n\n\n\n\n\n\n\n\n\n\n(a) An op-amp buffer connected to a low impedance divider.\n\n\n\n\n\n\n\n\n\n\n\n(b) An op-amp buffer connected to a high impedance divider.\n\n\n\n\n\n\n\nFigure 2: Op-amp buffers for divider experiments.\n\n\n\nBecause this is your first time building op-amps (look forward to many more in lab 3!), we provide this diagram that may help with wiring up your first OP07. Each of the connections on the diagram is labeled wtih the OP07 pin number. Don’t forget that pin numbers start in the upper left of the chip and wrap around it counter-clockwise. The capacitors, called decoupling capacitors, are important to include even if their purpose may seem unclear. See the callout note below for more details.\n\n\n\n\n\n\nFigure 3: An op-amp schematic showing all connections.\n\n\n\n\n\n\n\n\n\nOp-amp breadboarding tips\n\n\n\n\n\n\nNeatly laid out protoboards work better. Seriously, they do. They’re easier to troubleshoot as well. Please take the time to do it right.\nKeep your leads short and close to the board.\nStrip off the minimum amount of insulation to let your patch wire work; Don’t have big bare areas that can touch other things and short.\nTrim your resistors and capacitors to keep the components close to the boards. Don’t leave the leads long. Get the components down by the board.\nUse the long busses for power only. Do use them for power and ground. Don’t use them for signals. Use bypass capacitors (see below) on your power busses.\nTo the extent possible use coaxial cables to get signals on and off of your board. Put the input signals onto the board as close to the circuit inputs as possible. For example, use a coaxial cable with BNC connectors from the signal generator and then put spring-loaded mini-clips on the other end. Connect the mini clips to your circuit input and ground.\nIf you are using dual supplies for your op-amps, have three power busses: V+ connected to the +20 V output on your power supply, V– connected to the –20 V output on your power supply, and GND connected to the COM output on the power supply. You can adjust your supply voltage to be anything from ±1 V to ±15 V depending on what chips you are using.\nIf you are using a single supply for your op-amps, have two power busses: V+ connected to the +20 V output on your power supply, and GND connected to the COM output on the power supply. You can adjust your supply voltage to be anything from +1 V to +15 V depending on what chips you are using.\nColor code your wiring. A common practice is to use red for V+ power, black for V– power, green for ground, and white or blue for signal lines. If you have a rat’s nest of all red wires, neither the professors nor the proctors (nor you for that matter) will be able to figure out what goes where.\n\nYou may have noticed that the circuit has many capacitors connected to its power rails. These are called decoupling or bypass capacitors and they help to stabilize (in a feedback sense) the operational amplifier. The high gain of operational amplifiers can cause op-amps to interact with long power busses to cause oscillations. This manifests as intermittent, large noise in the output of the circuit. You can almost totally eliminate this issue by placing bypass capacitors between the power supply pins and ground as close as physically possible to each op-amp.\nStandard practice recommends both a 10 µF electrolytic capacitor and a 0.1 µF standard capacitor. For E80 you can get away with just the 0.1 µF standard capacitor. If you use electrolytic capacitors, remember that they are polar and if you put them in backwards they won’t work and may explode.\nFor dual supplies the capacitors run between V+ and ground, and V– and ground. For single-sided supplies, they run between V+ and ground. The circuit below shows a unity-gain buffer amp with dual power supplies and bypass capacitors."
  },
  {
    "objectID": "labs/lab2/index.html#extra-credit-1",
    "href": "labs/lab2/index.html#extra-credit-1",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "5 Extra Credit 1",
    "text": "5 Extra Credit 1\nBuild a divider in the stles of Section 3 where Z1 is 100kΩ and Z2 is a 100kΩ thermistor, then derive a formula to calculate the temperature from Vin and Vout. Determine the error specifications for all of the components in your system. Measure Vin and Vout with the 10x Scope probe and use your results to calculate the room temperature. Propagate errors to calculate the uncertainty in your temperature measurement.\nTry to reduce your uncertainty by measuring the actual resistance of Z1 instead of using its printed value. Note that we’re only measuring Z1 because we are using the output voltage of the thermistor voltage divider to guess Z2. Repeat the measurement and calculation. How much did the uncertainty change?\nCompare your calculated temperatures with the room temperature measured by one of the digital thermometers. Do the measurements agree within the uncertainty of the measurements? Explore how the measured temperature changes with Vin as you vary from 1 Vpp to the maximum the signal generator can generate. Why does it change?"
  },
  {
    "objectID": "labs/lab2/index.html#extra-credit-2",
    "href": "labs/lab2/index.html#extra-credit-2",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "6 Extra Credit 2",
    "text": "6 Extra Credit 2\nHow do the accuracies of the Teensy and Elenco vary as you adjust the input frequency to 100 Hz, 200 Hz, 500 Hz, 1000 Hz, 2000 Hz, 5000 Hz,10,000 Hz, 20,000 Hz, 50,000 Hz, and 100,000 Hz? Be sure you select appropriate input signals as you conduct this experiment. In particular, reflect on the Teensy’s behavior in Section 2 and Section 3 when selecting the signal.\nThe definition of “accuracy” can be slippery here, so you should think carefully about it as you compose your answer. This is particularly true for the Teensy, which will return a sample to you that consists of many numbers. Will you consider the accuracy of a single data point (compared to what)? Of a single cycle? Or of some kind of aggregation of cycles that includes uncertainty? Consider carefully."
  },
  {
    "objectID": "labs/lab2/index.html#extra-credit-3",
    "href": "labs/lab2/index.html#extra-credit-3",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "7 Extra Credit 3",
    "text": "7 Extra Credit 3\n\n\n\nTable 2: Table of RC divider measurements\n\n\n\n\n\n\n\n\n\n\nZ1\nZ2\nTest Frequencies\n\n\n\n\n10 k\\(\\Omega\\)\n0.47 \\(\\mu\\)F\n1 Hz, 10 Hz, 100 Hz, 1 kHz, 10 kHz, 100 kHz\n\n\n0.47 \\(\\mu\\)F\n10 k\\(\\Omega\\)\n1 Hz, 10 Hz, 100 Hz, 1 kHz, 10 kHz, 100 kHz\n\n\n220 \\(\\Omega\\)\n1 \\(\\mu\\)F\n1 Hz, 10 Hz, 100 Hz, 1 kHz, 10 kHz, 100 kHz\n\n\n10 M\\(\\Omega\\)\n1000 pF\n1 Hz, 10 Hz, 100 Hz, 1 kHz, 10 kHz, 100 kHz\n\n\n\n\n\n\nBuild the circuits in table Table 2 in the same manner as the dividers in Section 3, then repeat the predictions and measurements as in Section 3. Vary the input frequency to each of the values listed in the “Test Frequencies” column as you perform these measurements. Use an input amplitude of 5Vpp and, if using the Teensy, be sure to offset the signal. Note that the multimeter can measure capacitance. Measure the output voltages with any appropriate equipment (justify your choice). Measure the phase difference between the input and output Voltages where possible. Explain the results of your measurements and possible function for each circuit. Consider carefully in what (graphical) format(s) you want to present your results."
  },
  {
    "objectID": "labs/lab2/lab2-writing.html",
    "href": "labs/lab2/lab2-writing.html",
    "title": "Lab 2 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will learn to make high quality tables that follow the conventions of scientific writing In addition, you will write text to describe how you collected the data presented in the tables, describe the equations used to interpret the data, and make an argument based on the data presented in the table."
  },
  {
    "objectID": "labs/lab2/lab2-writing.html#writing-assignment",
    "href": "labs/lab2/lab2-writing.html#writing-assignment",
    "title": "Lab 2 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will learn to make high quality tables that follow the conventions of scientific writing In addition, you will write text to describe how you collected the data presented in the tables, describe the equations used to interpret the data, and make an argument based on the data presented in the table."
  },
  {
    "objectID": "labs/lab2/lab2-writing.html#statement-of-work",
    "href": "labs/lab2/lab2-writing.html#statement-of-work",
    "title": "Lab 2 Writing Assignment",
    "section": "Statement of Work",
    "text": "Statement of Work\nPrepare an example methods and results section of a technical memo.\nThe methods section describes how you collected the data presented in the results section and should include any diagrams or figures needed to explain the data collection process. For this lab, the figures must include an electrical schematic of the voltage divider circuit and clearly show where the measurement was made. The figure should have a descriptive caption and follow the best practices outlined in the Lab 1 writing assignment. Your figure should include 150-250 word section of text describing the schematic and explaining how the measurement was made.\nThe results section should present the data you collected. For this lab, the results section will be tables presenting the measured and predicted output voltage values. You should present one table which demonstrates the impact of measuring different resistance values with the same instrument (e.g., the multimeter). Another table should contains data to demonstrate the influence of different measurement devices used on the same circuit (e.g., comparing data from a set value of Z1 and Z2 across the multimeter, both oscilloscope probes, and Teensy) The predicted values should be calculated using the appropriate model for the electrical measurement tools you used and the appropriate error bounds (i.e., your model should include the internal resistance of any measurement tool and the resultant loading effects.) A 100-150 word section of text should be included beneath each table describing the results and what they mean, along with noting any particular notable features or discrepancies (e.g., if the measured value is outside of the 95% confidence interval).\nAs usual in E80 writing assignments, these sections are going to be presented without an introduction, and therefore you need to exercise some caution in topic sentences to provide the barest introduction to the material. For example, don’t lead by writing “The robot navigated the course”. Instead, write “This data describes a robot navigating an obstacle course in an underwater test tank.”"
  },
  {
    "objectID": "labs/lab2/lab2-writing.html#learning-objectives",
    "href": "labs/lab2/lab2-writing.html#learning-objectives",
    "title": "Lab 2 Writing Assignment",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nBy the end of this writing assignment you will…\n\nLearn how to create a high quality table which presents collected data\nUnderstand the information that should be included in a methods section\nWrite equations in methods section to explain the data collection procedure\nCreated clear circuit schematics for the methods section\nWrite text to describe how the data presented in the table was collected\nWrite text to explain what the data presented in the table means"
  },
  {
    "objectID": "labs/lab2/lab2-writing.html#required-resources",
    "href": "labs/lab2/lab2-writing.html#required-resources",
    "title": "Lab 2 Writing Assignment",
    "section": "Required Resources",
    "text": "Required Resources\n\nTables of measurement data from Lab 2\nSource file for the schematics of measurement circuits used in lab 2. This should be a diagrammatic format, not a breadboard layout."
  },
  {
    "objectID": "labs/lab2/lab2-writing.html#specifications",
    "href": "labs/lab2/lab2-writing.html#specifications",
    "title": "Lab 2 Writing Assignment",
    "section": "Specifications",
    "text": "Specifications\n\nEffort\n\nA schematic of the measurement circuit is included.\nThe schematic has a caption.\nA table with measured data is presented and completed.\nText is present to explain the contents of each table and figure.\n\n\n\nCompletion\n\nMethods\n\nDocuments the experimental setup with schematics\nEach schematic labeled as a figure with a figure number and caption\nFigures properly referenced in the text (e.g., “Fig. 1 demonstrates…”)\n\n\n\nTables\n\nColumn headers and/or row headers are properly labeled.\nColumn headers have correct units.\nAppropriate fonts and font sizes (e.g., 11 or 12 point, professional font like Times New Roman, Arial, Calibri, or Cambria)\nElements in table neatly aligned\nAll the entries, including the headers, fit comfortably in the width or height of the columns or rows\n\n\n\nResults\n\nStates the main conclusion of the experiment which we expect to how error bounds related to measure quantities and the influence of instrument loading.\nStates any shortcomings or outlier data for future exploration along with suggested mechanisms.\n\n\n\nSupporting Text\n\nRefers to each table.\nExplains the contents of the table.\nEvery sentence is clear about what it refers to.\nNo factually incorrect or vague statements.\nCorrect sentence mechanics like cohesion and coherence between sentences and no run-ons.\nCorrect paragraph mechanics like topic sentences and placement at breaks between ideas.\nLanguage is not stilted and jargon is kept to a reasonable minimum.\nIncludes explanations of units of measurements representative of the data type, duration of the experiment, etc.\nWritten text is within the specified word count."
  },
  {
    "objectID": "labs/lab2/lab2-writing-template.html",
    "href": "labs/lab2/lab2-writing-template.html",
    "title": "Lab 2 Writing Template",
    "section": "",
    "text": "Name:"
  },
  {
    "objectID": "labs/lab2/lab2-writing-template.html#methods",
    "href": "labs/lab2/lab2-writing-template.html#methods",
    "title": "Lab 2 Writing Template",
    "section": "Methods",
    "text": "Methods\n::: {#fig-measurement-schematic} \nInsert the schematic used to make your measurements here. Note that your schematic should include any additional components needed to represent any output impedances of sources or input impedances of measurement devices.\nInsert table here containing measurements across different resistance values with the same instrument.\nText to explain what the table above means. The text should address and highlight:\n\nTrends in the data\nUnexpected results\nConclusions to be drawn\n\nInsert table here containing measurements across different instruments with the same resistance values.\nText to explain what the table above means. The text should address and highlight:\n\nTrends in the data\nUnexpected results\nConclusions to be drawn\nHow instrument loading influences the"
  },
  {
    "objectID": "labs/lab4/index.html",
    "href": "labs/lab4/index.html",
    "title": "Lab 4: Temperature Sensors",
    "section": "",
    "text": "UNDER CONSTRUCTION, DO NOT USE FOR PRELAB\nTeam size: 2"
  },
  {
    "objectID": "labs/lab4/index.html#learning-objectives",
    "href": "labs/lab4/index.html#learning-objectives",
    "title": "Lab 4: Temperature Sensors",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter successful completion of this lab, you will be able to…\n\nBuild a system to measure temperature with several different types of temperature sensors\nExplain the tradeoffs (e.g., response time, dynamic range, ease of analysis) between different temperature sensor architectures."
  },
  {
    "objectID": "labs/lab4/index.html#introduction",
    "href": "labs/lab4/index.html#introduction",
    "title": "Lab 4: Temperature Sensors",
    "section": "0. Introduction",
    "text": "0. Introduction\nIT IS YOUR TEAM’S RESPONSIBILITY TO BRING ICE TO LAB . THIS IS PART OF YOUR PRELAB! \nThis lab will be completed in sub-teams of two students. Before the lab you must decide how you will split your team. Each sub-team will be responsible for its own version of the lab’s deliverables. Pre-lab work and a vision of the experiments that you will be conducting will be essential to the successful completion of this lab. As usual, this subteam may not be the same as any other subteam you’ve participated in during the course.\nThere are two extra credit sections. They would make the lab too long for most teams of two to complete. However, in the unlikely event that you complete the required sections, you may attempt either or both and include the results as addenda in your report and submission sheet (see details in the extra credit sections). They are the same experiments as extra credit for Lab 3. You may submit a given extra credit only once, so if you’ve already submitted one or the other, you may not resubmit it for Lab 4.\nThe instructions for this lab are not as detailed as for some of the earlier labs. You are expected to plan out your experiments and fill in the blanks.\nYou will be provided with:\n\nTemperature sensors\nDigital thermometer\nHot water\nA constant-temperature (25°C) water bath\nInsulated containers\nGlass beakers\nBreadboard\nKeysight Infinivision oscilloscope (click here for manual)\nKeysight E3630A power supply (click here for manual)\nElenco multimeter (click here for manual)\nAn AD623ANZ-ND Instrumentation Amplifier (click here for data sheet)\nAccess to resistors and capacitors in the stockroom and E80 lab.\n\nIMPORTANT SAFETY TIP: When using the calibration baths remember that water is an electrical conductor and putting an electronic component that is not waterproofed into water carries some risk. Use appropriate precautions. Waterproofing your sensors using electrical tape,heat-shrink tubing, hot glue or parafilm is essential!\nIMPORTANT SAFETY TIP: Water above 50 °C can cause scalds. Determine safety protocols for working with hot water to avoid spilling it or inadvertently touching it.\nIMPORTANT NOTE: The only constant-temperature bath in the lab is the 25 °C bath in the E80 lab (B171). Use your digital thermometer to monitor the temperatures of any other baths in the lab!\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here."
  },
  {
    "objectID": "labs/lab4/index.html#side-by-side-comparison-of-the-thermistor-and-solid-state-sensor",
    "href": "labs/lab4/index.html#side-by-side-comparison-of-the-thermistor-and-solid-state-sensor",
    "title": "Lab 4: Temperature Sensors",
    "section": "1. Side-by-Side Comparison of the Thermistor and Solid-State Sensor",
    "text": "1. Side-by-Side Comparison of the Thermistor and Solid-State Sensor\nYou have used thermistors and integrated solid-state temperature sensors before in E79. In this section you will revisit those sensors and compare them.\nYou will be given a 3-Pin TO-92 MCP9701A Low-Power Linear Active Thermistor Integrated Circuit. What is the voltage-temperature conversion given in the datasheet and what uncertainty does it have? (A tip for using the MCP701A: Solder wires onto each of the leads, but don’t bend the sensor leads when soldering: bent leads are difficult to heat shrink.)\nYou will be given a Murata NXFT15WB473FA2B150 thermistor. The equation for converting for temperature using the B parameter provided on the thermistor datasheet can be found on the Thermistor wikipedia page here.\nHow does the temperature conversion expression in the thermistor datasheet compare to the Steinhart-Hart equation, a power series which is used to describe thermistor Resistance vs. Temperature behavior? Why do you think the thermistor designers chose their conversion equation?\nA critical property of a temperature-measurement device is how quickly it responds to a change in external temperature. For most temperature-measurement devices, characterizing them as first-order systems is adequate for evaluating their suitability for a given application.\n\nUsing the oscilloscope and resources that you have been provided, obtain the first-order temperature responses of the thermistor and the solid-state sensor SIMULTANEOUSLY. Determine the time constants of both temperature sensors. Note that the first-order response corresponds to the behavior of the sensors when the surrounding temperature changes suddenly.\nIn a single plot, show Time-Temperature curves for both the thermistor and the temperature sensor. Specify the temperatures that were tested. Report appropriate measures of error in this plot.\nDescribe the circuitry you used to measure the thermistor resistance with your oscilloscope."
  },
  {
    "objectID": "labs/lab4/index.html#thermocouples",
    "href": "labs/lab4/index.html#thermocouples",
    "title": "Lab 4: Temperature Sensors",
    "section": "2. Thermocouples",
    "text": "2. Thermocouples\nOur available thermocouples are Type-E (Omega FF-E-24-SLE-200). The NIST website with information on thermocouples is here. The direct link to the NIST Type-E table is here. The direct link to the NIST Type-E table is here. The NIST page for polynomial coefficients that were used to generate the table (voltage from temperature) is here. The NIST page for the inverse coefficients (temperature from voltage) is here. The Omega website is here. (Warning, Omega website is often very slow). The Omega version of the NIST table is here. The Omega info on thermocouples is here.\nThermocouples generate very small voltages, which must normally be amplified to be read by an oscilloscope, although the DMM does have sufficient range. The easiest way to do the amplification is with an instrumentation amplifier. The one we have available is the Analog Devices AD623ANZ (data sheet here). Pay special attention to the voltage supply range. It can operate with a supply voltage range of ±2.5 V (or 0-to-5 V single sided) to ±6 V (or 0-to-12 V single sided). If you exceed the voltage supply range, you will destroy the chip. The op-amp standard of ±15 V will destroy it immediately. Don’t be tempted. Figure 79 in the data sheet shows the basic circuit for connecting a thermocouple. Note that in Figure 79, the amplifier is powered with a bipolar, not a single-sided supply. It looks like an op-amp, but it is not. You should use a single sided power supply because your AUV will be powered by a battery. In this configuration you must offset your thermocouple to the average of your power supply (e.g., if you supply with 0-to-5 V, your thermocouple should be offset to 2.5 V). This circuit is given to you for reference. Note that the offset utilizes a unity-gain, non-inverting Op-amp configuration to provide a low output impedance for the offset voltage.\nThe simplest way to construct a thermocouple is to use one of the recycled ones. Otherwise, take a 1-foot length of thermocouple wire, strip the wires at one end and twist them firmly together so they make electrical contact. DO NOT USE SOLDER. It will not stick to the wires.\n\nUse the multimeter to measure the output voltage of the thermocouple by itself. Determine the output voltage of the thermocouple at several temperatures and create a Temperature-Voltage curve. Make sure to record the ambient temperature (specifically the temperature at the thermocouple-multimeter junction) and place this information in the figure caption.\n\nDesign and build a circuit to read a thermocouple using the ice bath method discussed in lecture (see Figure 6 of this link, or Figure 2 of this link, or click herefor lecture slides). DO NOT USE SOLDER. USE A GLASS BEAKER FOR YOUR ICE BATH. To get practice for your future data logger, design the circuit to have a gain of 200 and output voltages in the 0-to-5V range. Provide a detailed diagram of your circuit.\n\nTest your circuit at several different temperatures and create a Temperature-Voltage curve.\nHow do your results compare to the Temperature-Voltage curve of the solid-state sensor and the thermistor? (As a reminder, you looked up the data necessary to find these two curves in Section 1. You don’t need to measure temperature-voltage curves for the thermistor or solid-state sensor.)\n\nThe AD623 is expensive ($7/chip), so return undamaged chips to stock."
  },
  {
    "objectID": "labs/lab4/index.html#side-by-side-comparison-of-the-thermistor-and-thermocouple-with-cjc",
    "href": "labs/lab4/index.html#side-by-side-comparison-of-the-thermistor-and-thermocouple-with-cjc",
    "title": "Lab 4: Temperature Sensors",
    "section": "3. Side-by-Side Comparison of the Thermistor and Thermocouple with CJC",
    "text": "3. Side-by-Side Comparison of the Thermistor and Thermocouple with CJC\nYou will not be using the ice bath method in this section! A complete thermocouple-based temperature measurement system requires cold junction compensation (CJC). You basically need a temperature sensor to measure the temperature of the junction where the thermocouple meets the instrumentation amplifier (the Cold Junction). In this lab, you will use the solid-state temperature sensor for CJC. To use CJC, measure the temperature of the cold junction with the MCP7901A (the Cold Junction sensor). Use the thermocouple table or polynomial to calculate the equivalent thermocouple voltage at that temperature. Then add your measured thermocouple voltage and your calculated voltage (the CJC voltage) together, and then convert the voltage sum to a temperature using the thermocouple table or polynomial.\n\nUse the solid-state sensor for CJC. Test your circuit by immersing the thermocouple in several different-temperature baths and create a Temperature-Voltage curve. How do your results compare with the curve from section 2?\nUsing the oscilloscope and resources that you have been provided, obtain the first-order responses of the thermistor (the Murata part) and the thermocouple-with-CJC SIMULTANEOUSLY. How will you power and record data for three temperature sensors? Determine and compare the time constants of both temperature sensor systems.\nIn a single plot, show time-temperature step-response curves for the thermistor, the thermocouple with CJC, and the solid-state sensor (the MCP7901A). You may reuse data you took earlier, and you need not try to capture all three signals simultaneously, but you should time shift them so that the step responses all start at t = 0. Be sure that the temperature and time axes are properly labeled with units. Thought Question: If you had to choose among these three systems to put on a submersible and record the data with a Teensy, which one(s) would you use?"
  },
  {
    "objectID": "labs/lab4/index.html#deliverables",
    "href": "labs/lab4/index.html#deliverables",
    "title": "Lab 4: Temperature Sensors",
    "section": "4. Deliverables",
    "text": "4. Deliverables\nAll labs require two submissions per group. The first submission is a submission sheet in which specific data must be shown. The submission sheet is due at the end of the 4-hour lab period and must be uploaded before the end of your lab session at 5:15 pm. Note that only ONE member of each team should access and submit the submission sheet. It is the responsibility of that team member to add the rest of the team’s names to the submission sheet.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here.\nThe second submission is a writing assignment, usually around 1 page in length. Each writing assignment will be based on a prompt, and must be completed by each student individually; no collaboration is allowed on the text or figures in these assignments, though you may speak among yourselves about concepts in keeping with the collaboration rules of the course. A first draft of the writing assignment must be uploaded by noon on Friday, and you need to bring a printed copy of your draft to the writing and reflection section on Friday at 1:15 p.m. During the first hour of the writing and reflection, you will engage in a peer editing exercise. The second hour of the Writing and Reflection section is reserved for you to edit your draft to produce a final draft of the writing assignment. This final draft must be uploaded before the end of the Writing and Reflection section on Friday at 3:15 p.m. Since multiple submissions are permitted, and only the last one is graded, you may want to submit a draft at 3 p.m. as insurance. The writing assignment is based on this prompt.\nThis is the peer feedback worksheet.\nNote that you should include relevant calculations to explain the ideal analytical curves on your calibration plots on your submission sheet.\nNote that the rubric is included in the prompt.\nRecall that no late work is accepted, we will grade whatever is submitted at the deadlines.\nAfter the writing and reflection section at the end of each week every person (not just one person per team) must submit a team dynamics check-in survey. These are part of your participation grade. The survey link can be found on the home page."
  },
  {
    "objectID": "labs/lab4/index.html#extra-credit-1.-salinity-measurement",
    "href": "labs/lab4/index.html#extra-credit-1.-salinity-measurement",
    "title": "Lab 4: Temperature Sensors",
    "section": "Extra Credit 1. Salinity Measurement",
    "text": "Extra Credit 1. Salinity Measurement\nThis extra credit is the same as for Lab 3. If you already submitted this extra credit for Lab 3, do not resubmit it as part of Lab 4.\nSalinity is a measure of the total dissolved salt content of water. It is an extremely important and common measurement in oceanographic studies. Salinity measurements are used to track the flow of water and map the hydrological cycle, calibrate acoustic communication links, and understand biological phenomena like algal blooms. In this section you will build a sensor to measure salinity using an inverting operational amplifier. You will prove that it works by calibrating it against saline solutions with different salinity.\nTo design your sensor, you need to know reasonable values for what you’re trying to measure. Your sensor will measure conductivity and the measured value will be used to extract salinity. Find the salinity and conductivity of the ocean using any resource you choose. Note that the equivalent circuit model of a saline solution whose value depends on the separation of the probe electrodes and the salt concentration (why?) is a resistor in parallel with a capacitor. We will ignore the capacitor for this extra credit section, but it is critically important in a design for the final project. You may want to read this reference for further information.\nDesign an inverting operational amplifier circuit using one or more TL081 op-amps which has an output voltage that is linear with the conductivity of your solution. Be sure to consider source and load impedances when designing your circuit. Ensure that the output voltage of this circuit will vary over a wide voltage range for the range of saline solutions that you plan to use for calibrating your circuit. This design depends on some of your experimental parameters including the separation of electrodes and the conductivities of the solutions you intend to measure.\nOne thing to be careful of when measuring salinity is that salt, water and electrons will undergo chemical reactions which can deposit metal salts on your electrodes. These salts can form non-conductive films which stop your conductivity measurements. What kind of waveform should you apply to your circuit in order to make a measurement stable over time? This chemistry can also cause your circuit to fail if the electrode area is too small or the voltage applied to the solution is too low.\nPrepare an experimental setup that will allow you to measure the conductivity of salt water. You have access to beakers, wire, electrical tape and digital thermometers. Prepare a set of saline solutions to be used with this setup which are sufficient to prove the sensor is linear. Graduated cylinders would usually be used to measure the volume of water in these solutions. Those are not available to you, so instead you will need to use the digital scales and the well-known relationship between the mass and volume of water. What is that relationship?\nRecord a calibration curve for your sensor which plots the voltage output of your sensor against the concentration of your salt solution in units of grams per liter on logarithmic X and Y axes. Find a line of best fit including appropriate uncertainty measurements. Then use your sensor and your calibration curve to measure the salinity of the mystery salinity solution on the central table.\nNote: You may use this resource to convert from a measured conductivity to salinity and this resource to convert from salinity to conductivity.\nWriteups for this extra credit section are not counted against the page limit of your report. You may submit this as an additional document labeled “Lab 4 salinity extra credit addendum.”"
  },
  {
    "objectID": "labs/lab4/index.html#extra-credit-2.-pressure-measurement",
    "href": "labs/lab4/index.html#extra-credit-2.-pressure-measurement",
    "title": "Lab 4: Temperature Sensors",
    "section": "Extra Credit 2. Pressure Measurement",
    "text": "Extra Credit 2. Pressure Measurement\nThis extra credit is the same as for Lab 3. If you already submitted this extra credit for Lab 3, do not resubmit it as part of Lab 4.\nIn this section you will replicate the pressure circuit on your E79 board to understand its operation. After that you will modify the sensing circuit to optimize the range of the output voltage for the graduated cylinder test that we have used to test pressure sensor operation.\nAnalyze this circuit and select values of R1, R2 and R3 such that output voltage will swing from 1V to 4V when you apply a pressure varying from atmospheric to 50cm below water. Implement the circuit using the MPX5700 pressure sensor and the MCP601 op-amp, which are the devices used on the E79 board. Use Vdd=5V. Why is the pressure sensor attached to the positive input of the amplifier?\nCreate an experimental setup to vary the pressure on the sensor using a large graduated cylinder, water and plastic tubing. Create a calibration curve relating your measured voltage to the applied pressure, and include appropriate measures of uncertainty.\nReturn the pressure sensor to stock when you are done with it under pain of a grade penalty, and be careful not to damage the pins while using it in your breadboard.\nWriteups for this extra credit section are not counted against the page limit of your report. You may submit this as an additional document labeled “Lab 4 pressure extra credit addendum.”"
  },
  {
    "objectID": "labs/lab4/lab4-writing.html",
    "href": "labs/lab4/lab4-writing.html",
    "title": "Lab 4 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will learn to write an introduction to a technical memo or lab report. Introductions serve several purposes:\n\nState relevant background information about the completed work to put it in context. Prior work must be properly referenced and cited.\nBriefly communicate the remaining content of the report."
  },
  {
    "objectID": "labs/lab4/lab4-writing.html#writing-assignment",
    "href": "labs/lab4/lab4-writing.html#writing-assignment",
    "title": "Lab 4 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will learn to write an introduction to a technical memo or lab report. Introductions serve several purposes:\n\nState relevant background information about the completed work to put it in context. Prior work must be properly referenced and cited.\nBriefly communicate the remaining content of the report."
  },
  {
    "objectID": "labs/lab4/lab4-writing.html#learning-objectives",
    "href": "labs/lab4/lab4-writing.html#learning-objectives",
    "title": "Lab 4 Writing Assignment",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nBy the end of this writing assignment you will…\n\nWrite a 2-3 paragraph introduction to provide the context for your experiment\nCreate a bibliography with properly formatted references."
  },
  {
    "objectID": "labs/lab4/lab4-writing.html#specifications",
    "href": "labs/lab4/lab4-writing.html#specifications",
    "title": "Lab 4 Writing Assignment",
    "section": "Specifications",
    "text": "Specifications\n\nLab Report Introduction\n\nProvides pertinent information about the scientific concept (theory, model, principle, procedure) that motivates your experiments.\nPresents the purpose of your experiment and discusses why it is important to E80 students.\nExplains why you selected the specific models to compare against your experiments.\nStates a hypothesis for each experiment and explains the scientific reasoning that leads to the hypothesis.\nDescribes the forthcoming sections of the lab report, which demonstrates a well-planned report organization.\n\n\n\nReferences\n\nRefer to appropriate sources, primarily peer reviewed articles and texts that are related to the lab.\nUses the standard IEEE article format for citations and references.\nReferences are used appropriately: often enough to support every contentious point, but not so often as to be pedantic.\n\n\n\nText\n\nCorrect sentence mechanics like cohesion and coherence between sentences and no run-ons\nCorrect paragraph mechanics like topic sentences and placement at breaks between ideas\nLanguage is not stilted and jargon is kept to a reasonable minimum.\n\n\n\nTechnical Inferences in Text\n\nDifferent temperature measurement techniques have very different speeds.\nDifferent temperature measurements have different degrees of decoding complexity.\nBoth of the above are backed up with appropriate references."
  },
  {
    "objectID": "labs/lab3/index.html",
    "href": "labs/lab3/index.html",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "",
    "text": "Team Size: 2\nSubmission Sheet: html docx\nPrelab Help Sheet: html"
  },
  {
    "objectID": "labs/lab3/index.html#introduction",
    "href": "labs/lab3/index.html#introduction",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "1 Introduction",
    "text": "1 Introduction\nIn this lab you will use operational amplifiers to build a turbidity meter, a sensor that measures the relative clarity of water. Turbidity is an interesting and useful measurement in oceanography, so this turbidity meter could be a stepping stone towards your final project. Further, the op-amp techniques that you use to construct this turbidity meter will be useful in any final project you select; the ability to buffer, shift and scale Voltages and currents is essential to many instruments. Extra credit sections offer the opportunity to explore other interesting marine sensors, and those sensors are also excellent candidates for final project sensors.\nAfter successful completion of this lab, you will be able to\n\nDesign and build an offset amplifier using an operational amplifier\nDesign and build a transimpedance amplifier using an operational amplifier\nDesign and build an oscillator using a 555 timer\nUnderstand the basic use of LEDs and photodiodes\nExplain clipping behavior in op-amps\nExplain how modulating a signal can help separate it from background signals\nExplain the basic theory of turbidity and turbidity measurements\nBuild and test a complex design by thoughtfully testing and assembling individual parts\nUse linear regression to extract slope, offset, and appropriate error measures from data\n\nThis lab will be carried out as sub-teams of two. Policies for sub-teams are discussed in lab 2\nThis lab asks you to prepare solutions and handle chemicals. Though we aren’t working with anything hazardous (or which can’t be flushed down the drain), be sure to observe good chemical hygiene practices and use gloves and goggles when handling chemicals or sensitive equipment. Always use gloves when handling any glassware that will go into the turbidity meter.\nThere are a few resources used in this lab which must be shared. Please respect others and don’t abuse these resources. All the teams in lab are going to have to share a single turbidity meter and beaker of mystery solution. There will be three digital scales available. For Extra Credit 1, we have a limited supply of buffer solutions which must last for all our labs, so don’t pour out more than you need to cover your pH probes and be sure to use the smaller set of beakers."
  },
  {
    "objectID": "labs/lab3/index.html#op-amp-familiarity-and-offset-amplifier",
    "href": "labs/lab3/index.html#op-amp-familiarity-and-offset-amplifier",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "2 Op-Amp Familiarity and Offset Amplifier",
    "text": "2 Op-Amp Familiarity and Offset Amplifier\nIn this section, we are going to demonstrate an op-amp failing to work properly, then we will correct that failure by modifying the op-amp circuit. The modified circuit will be an offset amplifier, which is one of the most common circuits in the final project.\nDo the following:\n\nUse an MCP601 to build a single-rail, non-inverting amplifier with a gain of two. Pay attention to the maximum allowed supply Voltage. Use a 5 V supply Voltage.\nApply a 100 mV amplitude sine wave with a 1 V offset to the amplifier input and observe the output. This output should match simple theoretical calculations well.\nApply a 100 mV amplitude sine wave with a 0 V offset to the amplifier input and observe the output. This output should have severe non-idealities related to the amplifier behavior. Identify the non-idealities, and explain why they are present in the output.\nDesign, build and test an offset amplifier that can take a 100mV amplitude sine wave with 0 V offset and produce an output with none of the non-idealities in step 3. Use a 5 V supply Voltage and aim for a gain of negative two (an inverting gain) and an appropriate offset.\n\n\n\n\n\n\n\nWhy the MCP601?\n\n\n\n\n\nWe are using the MCP601, MCP6002 and MCP6004 in this lab because they are single rail op-amps that are easy to power from a battery. That makes them particularly useful in the final project. You used a few dual rail op-amps in lab 2, and some final projects might demand dual rail op-amps for exacting measurements. For instance, extra credit 1 demands a TL081 for good reason. Talk to an instructor if you want to learn more about the difference between op-amps, which largely have to do with input impedances, output voltage ranges, and some properties that can affect uncertainty."
  },
  {
    "objectID": "labs/lab3/index.html#sec-led",
    "href": "labs/lab3/index.html#sec-led",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "3 555 Timer LED Driver",
    "text": "3 555 Timer LED Driver\nTurbidity is a measurement that depends on illuminating a water sample, then measuring the ratio of transmitted and 90° scattered light. We are going to use an infrared light-emitting diode (IR LED) called the IR1503 to illuminate our sample, and we are going to blink it on and off using a circuit called a 555 timer. Because IR radiation is invisible to the human eye, we need a sensor to tell if our system is working, and the OP950 IR photodiode serves that job well.\n\nBuild an astable 555 timer oscillator that has a frequency between 500 Hz and 1 kHz and a duty cycle of approximately 60%. If you use reference designs from the datasheet, omit RL from any circuit you build.\nVerify that your oscillator is working by measuring the oscillator output Voltage and the capacitor Voltage.\nAttach a series combination of a resistor and an IR1503 the output of the 555 timer. Select the resistor value and diode orientation such that you will drive 20-40 mA through the diode when the output is high. Selecting this resistor will require approximating the diode’s forward voltage (VF) at your desired current level, and information in the datasheet can help you figure out an appropriate VF.\nMeasure the Voltage across the resistor in the resistor-IR1503 combination while the 555 timer is operating. Check that this Voltage waveform implies that the correct current waveform is passing through the IR1503.\nBuild the switching time test circuit in the OP950 datasheet and use it to check that IR light is coming out of your IR1503. It’s easy to get the OP950 backwards or to pick an unsuitable resistor value, so play around a bit with flipping your OP950 polarity or trying a few different VR and RL values.\n\n\n\n\n\n\n\nWhy Series Resistors on LEDs?\n\n\n\n\n\nLEDs, like all diodes, have an exponential relationship between the voltage applied across them and the current that passes through them. That means applying voltage carelessly can easily blow them up. We prevent such explosions by installing a resistor in series with our IR1503 when we use them. Note that you don’t have to calculate the exponential behavior of the diode because graphs and tables in the datasheet have all the information you need.\nThe OP950 has similar behavior, so hook it up in series with resistors when you’re testing it on its own. However, we usually use OP950s in transimpedance amplifiers (see Section 4), which protects them from careless overvoltage conditions.\nThis reference provides background information on LEDs and photodiodes."
  },
  {
    "objectID": "labs/lab3/index.html#sec-transimpedance",
    "href": "labs/lab3/index.html#sec-transimpedance",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "4 Transimpedance Amplifiers",
    "text": "4 Transimpedance Amplifiers\nWe will need to measure the amount of light that passes through a solution (either by transmission or 90° scattering) in our turbidity meter. The current through a photodiode is linear in irradiance (see the Light Current vs. Irradiance figure in the OP950 datasheet), so measuring the current passing through a photodiode is equivalent to making a linear measure of incident optical power. That’s great for us, but we don’t know how to measure currents yet. Fortunately, op-amps can help with this, but only if we build a new kind of circuit, called a transmipedance amplifier, which is pictured in Figure 1.\n\n\n\n\n\n\nFigure 1: Schematic for a transimpedance amplifier\n\n\n\n\nAnalyze the transimpedance amplifier circuit to determine a formula that relates the diode current, ID, the feedback resistance, RF, and the output voltage, VOUT. Note that the diode acts like a current source pointing away from the op-amp when the photodiode is illuminated.\nBuild a transimpedance amplifier using the MCP6004 and an OP950. Configure unused op-amps as unity gain buffers with their inputs and outputs grounded.\nUse your LED light source from Section 3 to test the transimpedance amplifier. If you are seeing no signal, try flipping your OP950 around. Adjust the feedback resistor so you are seeing a large output signal.\nBuild and test a second copy of this op-amp circuit for use in your turbidity meter.\n\n\n\n\n\n\n\nTransimpedance Deep Cuts\n\n\n\n\n\nNote: Transimpedance amplifiers can be designed in many ways. The design we are recommending that you use is not the highest-speed design. High-speed designs will reverse bias the diode to reduce its junction capacitance (a type of parasitic capacitance found in all diodes) and add a capacitor in parallel with the feedback resistor to filter out noise. However, applying the reverse bias makes current flow the other direction, which would require that the op-amp be dual rail or have an offset to ensure correct operation. This design is the simplest for a single-rail system, and it doesn’t lose performance when measuring large, slow signals like ours."
  },
  {
    "objectID": "labs/lab3/index.html#turbidity-measurements",
    "href": "labs/lab3/index.html#turbidity-measurements",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "5 Turbidity Measurements",
    "text": "5 Turbidity Measurements\nNow it is time to assemble and use the turbidity meter. You will prepare solutions of known turbidity using the TU-2016 calibrated laboratory turbidity meter, illuminate them with the LED from Section 3, then measure the transmitted and 90° scattered light using the transimpedance amplifiers from Section 4. Arranging all of these elements – the sample cuvette holding your solutions, the LEDs and the photodiodes – requires a little bit of mechanical finesse, so we provide a 3D printed fixture (instructions, Solidworks for base, Solidworks for cover) for holding the cuvette, LED and photodiodes.\n\n\n\n\n\n\nYou can Damage the Turbidity Meter\n\n\n\n\nDO NOT EVER OPEN THE CALIBRATION STANDARDS\nNever touch the glass of the turbidity testing containers with your bare fingers. Handling them with clean gloves is OK.\nBe sure to read the TU-2016 instruction manual to familiarize yourself with the operation of the meter before using it.\n\n\n\n\nPrepare a set of solutions of different turbidities using milk and water. Use cuvettes to hold your solutions. You should not need to fill the cuvettes more than 1/2 full. Eyedroppers or beakers may help you to add more precise volumes of milk to your solution.\nCheck the turbidities of your solutions using the TU-2016.\nAssemble your turbidity measurement setup. Note that you can connect your circuits to the measurement fixture in two ways: (1) solder long wires to the OP950s and IR1503 then connect those to a breadboard, or (2) place your measurement fixture directly on top of the breadboard and put the diode feet directly into breadboard rows.\nMeasure your solutions with your own turbidity measurement setup and record the peak-peak Voltages of your 90° and transmission transimpedance amplifier outputs.\nPlot the ratio of the 90° Vpp to the transmission Vpp against the calibrated turbidity of your solutions.\nAdd a line of best fit and appropriate uncertainty measurements.\nExamine the effect of ambient light on your measurements by shadowing your experimental setup while watching a transimpedance amplifier Voltage. Use your observation to justify why we switch our LED on and off with the 555 timer and why we care about peak-peak voltages instead of absolute voltages.\n\n\n\n\n\n\n\nTurbidity and Nephelometry Background\n\n\n\n\n\nTurbidity is an optical measurement that is related to the total undissolved solids in the water. Turbidity is an important environmental monitor since undissolved solids can be indicative of eroded runoff, disturbance of the sea floor or other sources of particles.\nModern electronic measurements of turbidity are measured by shining light through a sample and measuring transmission — how much light passes directly through — and 90° scattering — how much light bounces off the particles to a sensor located at 90° relative to the light source.\nDevices which measure only 90° scattering are called nephelometers, and devices which measure the ratio of the 90° signal to the transmitted signal are called turbidity meters or turbidimeters. The relative effectiveness of the two devices depends on exactly how many solids are in the water.\nThis link has some additional information about turbidity, including a picture of some suspensions of different turbidity for visual reference."
  },
  {
    "objectID": "labs/lab3/index.html#extra-credit-1.-ph-measurement",
    "href": "labs/lab3/index.html#extra-credit-1.-ph-measurement",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "6 Extra Credit 1. pH Measurement",
    "text": "6 Extra Credit 1. pH Measurement\npH needs no introduction, but in oceanography it can be an important indicator of acidic runoff from the surface. The pH of the water also has a strong impact on the health of various plant and animal species, notably coral. You will build a circuit to interact with a pH sensor and calibrate it against buffer solutions.\nYou will be using buffer solutions in this portion of the lab and they are relatively expensive chemicals. Use the smaller 50mL beakers to hold buffer solutions at your station and take pains not to spill any buffer solution when pouring it from the main supply. Buffer solutions may be rinsed down the sink when you are done with them.\nFind a Pasco pH electrode. These electrodes are generally used with interface boxes provided by Pasco (the Pasport system), but we are going to be hooking circuits directly to the BNC connector of the pH probe. The pH probes are delicate instruments, so be sure to always re-cap them in a bath of pH 7 buffer solution and never leave them sitting exposed to air. Rinse them in a bath of deionized water and shake off any excess droplets before returning them to buffer solution.\nThe probes need special care to make repeatable and accurate measurements, so a few experimental tips will help you to get consistent results: stir the probes gently when you first immerse them in a bath, be sure to wait for the probe voltage to stabilize when taking a measurement because their time constants are long, and keep your hands away from the probes during measurement because the unshielded connections are sensitive to noise that can couple in through your body.\nMeasure the output voltage on the BNC connector in pH 4, 7 and 10 buffer solutions with a multimeter. What values do you observe?\nYou are going to attempt to improve the voltage swing achieved with these measurements by using a circuit. Your choice of circuit depends on the output impedance of the pH probe, consult this application note to get a ballpark estimate for the output impedance and report it. Also, read this reference, a handy guide to the operation of pH sensors, and then describe the physical mechanism which explains the value of the output impedance for this sensor.\nUse a TL081 to interface with the pH sensor to achieve a voltage swing of at least 1V between pH 4 and pH 10. What circuit topology did you use and why? Describe your interface circuit.\nMeasure the voltage your interface circuit produces when the pH sensor is immersed in pH 4, 7 and 10 buffer solutions. Use these measurements to make a calibration plot and add a line of best fit with appropriate quantification of uncertainty. Use your sensor and the line of best fit to determine the pH with confidence limits of the mystery solution in the middle of the room. There is only one small flask of mystery solution that should last for all teams in all sections. DO NOT pour the contents of the flask into another beaker! Rinse off your probe in distilled water. Uncap the mystery solution. Test the pH in situ. Remove the electrode and recap the solution. Rinse off your electrode and store it properly."
  },
  {
    "objectID": "labs/lab3/index.html#extra-credit-2.-salinity-measurement",
    "href": "labs/lab3/index.html#extra-credit-2.-salinity-measurement",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "7 Extra Credit 2. Salinity Measurement",
    "text": "7 Extra Credit 2. Salinity Measurement\nSalinity is a measure of the total dissolved salt content of water. It is an extremely important and common measurement in oceanographic studies. Salinity measurements are used to track the flow of water and map the hydrological cycle, calibrate acoustic communication links, and understand biological phenomena like algal blooms. In this section you will build a sensor to measure salinity using an inverting operational amplifier. You will prove that it works by calibrating it against saline solutions with different salinity.\nIn order to design your sensor, you need to know reasonable values for what you’re trying to measure. Your sensor will measure conductivity and the measured value will be used to extract salinity. Find the salinity and conductivity of the ocean using any resource you choose. Note that the equivalent circuit model of a saline solution whose value depends on the separation of the probe electrodes and the salt concentration (why?) is a resistor in parallel with a capacitor. We will ignore the capacitor for this extra credit section, but it is critically important in a design for the final project. You may want to read this reference for further information.\nDesign an inverting operational amplifier circuit using one or more TL081 op-amps which has an output voltage that is linear with the conductivity of your solution. Be sure to consider source and load impedances when designing your circuit. Ensure that the output voltage of this circuit will vary over a wide voltage range for the range of saline solutions that you plan to use for calibrating your circuit. This design depends on some of your experimental parameters including the separation of electrodes and the conductivities of the solutions you intend to measure.\nOne thing to be careful of when measuring salinity is that salt, water and electrons will undergo chemical reactions which can deposit metal salts on your electrodes. These salts can form non-conductive films which stop your conductivity measurements. What kind of waveform should you apply to your circuit in order to make a measurement stable over time? This chemistry can also cause your circuit to fail if the electrode area is too small or the voltage applied to the solution is too low.\nPrepare an experimental setup that will allow you to measure the conductivity of salt water. You have access to beakers, wire, electrical tape and digital thermometers. Prepare a set of saline solutions to be used with this setup which are sufficient to prove the sensor is linear. Graduated cylinders would usually be used to measure the volume of water in these solutions. Those are not available to you, so instead you will need to use the digital scales and the well-known relationship between the mass and volume of water. What is that relationship?\nRecord a calibration curve for your sensor which plots the voltage output of your sensor against the concentration of your salt solution in units of grams per liter on logarithmic X and Y axes. Find a line of best fit including appropriate uncertainty measurements. Then use your sensor and your calibration curve to measure the salinity of the mystery salinity solution on the central table.\nNote: You may use this resource to convert from a measured conductivity to salinity and this resource to convert from salinity to conductivity."
  },
  {
    "objectID": "labs/lab3/index.html#extra-credit-3.-pressure-measurement",
    "href": "labs/lab3/index.html#extra-credit-3.-pressure-measurement",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "8 Extra Credit 3. Pressure Measurement",
    "text": "8 Extra Credit 3. Pressure Measurement\nIn this section you will replicate the pressure circuit on your E79 board to understand its operation. After that you will modify the sensing circuit to optimize the range of the output voltage for the graduated cylinder test that we have used to test pressure sensor operation.\nDesign an offset amplifier using an MCP601 with a 5V power supply to convert voltage from the MPX5700 pressure sensor to the 0 V-3.3 V output range over a depth of 0-4 m.\nCreate an experimental setup to vary the pressure on the sensor using a large graduated cylinder, water and plastic tubing. Create a calibration curve relating your measured voltage to the applied pressure, and include appropriate measures of uncertainty.\nReturn the pressure sensor to stock when you are done with it and be careful not to damage the pins while using it in your breadboard."
  },
  {
    "objectID": "labs/lab3/prelab.html",
    "href": "labs/lab3/prelab.html",
    "title": "Lab 3 Prelab Help Sheet",
    "section": "",
    "text": "This help sheet is not going to be as comprehensive as the prelab help sheet for lab 1, and next week will be even less thorough. Part of the goal of this class is for you to be able to devise prelab activities on your own. So if you’re running out of ideas for things to do, please review last week’s help sheet.\nThink carefully about which group members you want to complete each section. Many of the topics here are interconnected, so it often helps to make sure everyone does them (or, at minimum, that you meet and share out what you learned during prelab.) We especially encourage everyone to do the reading and watch the videos."
  },
  {
    "objectID": "labs/lab3/prelab.html#reading-and-reference",
    "href": "labs/lab3/prelab.html#reading-and-reference",
    "title": "Lab 3 Prelab Help Sheet",
    "section": "Reading and Reference",
    "text": "Reading and Reference\n\nWatch lecture videos.\nWatch op-amp videos 1 & 2.\nRead the lab.\nFlag parts of the lab that didn’t make sense for discussion with your team or a prof.\nRead the submission sheet and notice:\n\nWhat are the deliverables?\nWhat are the specifications on those deliverables?\n\nRead the reference document about diodes\nRead the reference document about turbidity, and make note of the visual reference of what different turbidities look like.\nRead the turbidity meter instruction manual\nRead all linked datasheets"
  },
  {
    "objectID": "labs/lab3/prelab.html#circuit-design",
    "href": "labs/lab3/prelab.html#circuit-design",
    "title": "Lab 3 Prelab Help Sheet",
    "section": "Circuit Design",
    "text": "Circuit Design\n\nDesign all the circuits in advance and analyze them on paper. Analysis should include predicted output Voltages and component selection calculations.\nTest out your designs using a simulator program like Falstad or ltSpice\nPlan how your circuits will fit on your breadboard ahead of time using a breadboard simulator like fritzing or Tinkercad\nWhat formula describes a non-inverting amplifier’s output?\nWhat formula describes an offset amplifier’s output?\nWhat formula describes a transimpedance amplifier’s output?\nWhat formula describes a 555 timer’s frequency when it is configured as an oscillator?\nWhat formula describes a 555 timer’s duty cycle when it is configured as an oscillator?\nWhat formula describes current through a series resistor-diode?\nWhat is the maximum current allowed in our IR LEDs?\nWhat’s a rough guess at the resistances you’ll need in your photodiode test circuit and your transimpedance amplifiers."
  },
  {
    "objectID": "labs/lab3/prelab.html#schematics",
    "href": "labs/lab3/prelab.html#schematics",
    "title": "Lab 3 Prelab Help Sheet",
    "section": "Schematics",
    "text": "Schematics\n\nTry drawing a schematic using schematic drawing software like draw.io, ltSpice, or Powerpoint.\nDraw all the schematics for the circuits you have designed, paste copies in appropriate places in the submission sheet, and distribute schematic source files to both subteams.\nHave a professor review your schematics for style considerations in office hours.\nCan you quickly modify your schematic if you find that you need to change a component value in the lab?\nWhat does connect-by-name mean in the context of electrical schematics?"
  },
  {
    "objectID": "labs/lab3/prelab.html#mechanical",
    "href": "labs/lab3/prelab.html#mechanical",
    "title": "Lab 3 Prelab Help Sheet",
    "section": "Mechanical",
    "text": "Mechanical\n\nWhat’s a cuvette?\nView the Solidworks designs for the turbidity meter fixture\nMake a sketch of how your breadboard, circuits and turbidity meter fixture will fit together"
  },
  {
    "objectID": "labs/lab3/prelab.html#statistics",
    "href": "labs/lab3/prelab.html#statistics",
    "title": "Lab 3 Prelab Help Sheet",
    "section": "Statistics",
    "text": "Statistics\n\nHow do you calculate a line of best fit and appropriate uncertainty measures? How do you report the uncertainty?\nWrite code or make a spreadsheet that can calculate a line of best fit and appropriate statistics from a set of x,y points.\nWrite code or make a spreadsheet that can plot a set of x,y points, a line of best fit, and appropriate uncertainty indicators."
  },
  {
    "objectID": "labs/lab7/index.html",
    "href": "labs/lab7/index.html",
    "title": "Lab 7: Autonomous Navigation",
    "section": "",
    "text": "UNDER CONSTRUCTION, DO NOT USE FOR PRELAB\nTeam size: 4\nIn order to give everyone access to the tank, we will be running the lab as follows:\nUntil every team has completed the required portion of the lab, tank access for extra credit sections will be at the discretion of the Professor in charge."
  },
  {
    "objectID": "labs/lab7/index.html#learning-objectives",
    "href": "labs/lab7/index.html#learning-objectives",
    "title": "Lab 7: Autonomous Navigation",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter successful completion of this lab, you will be able to…\n\nUse your robot to log GPS signals.\nImplement a proportional control algorithm for depth control.\nCalibrate the magnetometer on in the inertial measurement unit."
  },
  {
    "objectID": "labs/lab7/index.html#introduction",
    "href": "labs/lab7/index.html#introduction",
    "title": "Lab 7: Autonomous Navigation",
    "section": "0. Introduction",
    "text": "0. Introduction\nThe objective of this lab is to equip your robot with the ability to autonomously navigate between depth or X, Y waypoints. By doing so, you will learn how your robot’s software fits together and about various navigation sensors.\nThis lab will be done in teams of 4 students. The lab will take place in multiple locations: students will start work in the E80 lab room, but some experiments will be conducted in the Parsons parking lot (where your GPS can receive signals) and in the tank room. Don’t forget that you need to check out GPS’s and other expensive equipment from professors or proctors. You will also need to fill out hardware failure reports if you need replacements for these pieces of equipment.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here."
  },
  {
    "objectID": "labs/lab7/index.html#familiarize-yourself-with-the-software",
    "href": "labs/lab7/index.html#familiarize-yourself-with-the-software",
    "title": "Lab 7: Autonomous Navigation",
    "section": "1. Familiarize Yourself With the Software",
    "text": "1. Familiarize Yourself With the Software\nOpen E80_Lab_07.ino in the Arduino IDE. This sketch will be used as starter code for lab 7. Also make sure you have the up to date E80 libraries by performing a git fetch and checking that it’s set as your current sketchbook. Confirm that you can compile and upload the starter code to your Teensy.\nIn lab 1 you modified your main .ino file using the Arduino IDE. In this lab you will be modifying library files which are written in C++ (and thus have file extension .cpp). These files need to be opened in a text or code editor like Notepad or Sublime, not a Word Processor like Microsoft Word. The most popular source code editor these days is Visual Studio (VS) Code which is cross platform. Both support syntax coloring. The changed files will be compiled to your robot when you compile the E80_Lab_07.ino file from the Arduino IDE. You will also be asked to refer to header files (with the file extension .h) which are used to set up constants, initialize variables and do other house cleaning for the .cpp files of the same name.\nThe libraries are included in E80_Lab_07.ino using #include statements at the top of the file. Then commands from the libraries are used to create special variables, which we call objects, to represent your sensors like the GPS and the IMU. Finally, those objects are used to interact with the sensors. Read the E80_Lab_07.ino file and make note of where the libraries are included and used. Figure out how often your sensors are sampled by reading E80_Lab_07.ino and the TimingOffsets.h header file located in libraries/main and record your answer on your submission sheet."
  },
  {
    "objectID": "labs/lab7/index.html#position-measurements-via-imu",
    "href": "labs/lab7/index.html#position-measurements-via-imu",
    "title": "Lab 7: Autonomous Navigation",
    "section": "2. Position Measurements via IMU",
    "text": "2. Position Measurements via IMU\nSet up your PCB board stack that includes a teensy/dataloggerIMU/E80 PCB with a battery. Confirm you can successfully log IMU data. Refer to lab 1 instructions if you need help. Information about the IMU can be found here.\nWith the data logger running, move your board stack along a linear path in the horizontal x-y plane, keeping the orientation fixed. That is, create your own global Cartesian coordinate frame on a table, and set the position of the board stack to be (0,0,0), and set the orientation of the board stack to be (0,0,0). Then, move the board stack through the following positions: (0,0,0), (0.5,0,0), (0,0,0). Assume coordinates are in units of meters. Don’t move too fast. It may help to wait 5 seconds at the (0.5,0,0) way point.\nUsing MATLAB, load the IMU data and calculate the position of the board stack as a function of time. Plot the x,y coordinates of the board stack. Does the plotted path resemble the straight 0.5 meter path? If not, why? Think about how errors are accrued with double integration of IMU measurements. You can review the Integrals and Derivatives videos from the Data Analysis lectures if you need a refresher."
  },
  {
    "objectID": "labs/lab7/index.html#magnetometer-calibration",
    "href": "labs/lab7/index.html#magnetometer-calibration",
    "title": "Lab 7: Autonomous Navigation",
    "section": "3. Magnetometer Calibration",
    "text": "3. Magnetometer Calibration\nA magnetometer measures the earth’s magnetic field, so it can be used as a compass to sense your robot’s heading. Read this article describing how it works. We have a magnetometer integrated into our IMU.\nEvery magnetometer has errors in its measurement, which can be byproducts of manufacturing or of local magnetic disturbances (eg: the magnetic declination is -10.52 degrees at Mudd). You need to calibrate those errors out before you can trust your magnetometer results. This article on magnetometer calibration is a good summary of the process.\nTake your robot outside, far from buildings, and log your magnetometer data while your robot is held upright and you slowly (over ~10s) rotate 360 degrees while standing in place. Log your data. Next, program your Teensy with our magnetic calibration software – Mag_Calibration.ino – and use Mag_Calibration.m to extract the hard and soft iron correction coefficients. You will need MATLAB version 2018b or later to run this code. Save the figure generated by Mag_Calibration.m to your submission sheet. Update SensorIMU.h, which is included in the IMU reading library SensorIMU.cpp, with these coefficients. Turn in a circle again outside and save your magnetometer readings again. Generate the following two plots: a scatter plot of mx vs. my where your calibrated and uncalibrated data are superimposed (what units are the axes?), and a plot of heading vs. time for both your calibrated and uncalibrated data.\nIn this class we are using east-north-up local tangent plane coordinates. This means that you need to convert the heading from the IMU, which should have 0 degrees due North and positive angle in the CW direction, to yaw angles where 0 degrees points in the positive X direction (due East), and positive angles are in the CCW direction. If 0 degrees doesn’t face perfectly East, (which is location dependent due to abnormalities in the Earth’s magnetic field), you can add an offset angle to ensure it does. Put code to make this conversion in XYStateEstimator.cpp. Include the code you use to convert from heading to yaw in your submission sheet.\n\nNote: the most common programming mistakes that we see are messing up units (is this angle in degrees or radians?) and failing to re-map angles between -\\(\\pi\\) and \\(\\pi\\) after they are calculated (3\\(\\pi\\)/2 will crash a lot of your code unless you’re very careful)."
  },
  {
    "objectID": "labs/lab7/index.html#position-measurements-via-gps",
    "href": "labs/lab7/index.html#position-measurements-via-gps",
    "title": "Lab 7: Autonomous Navigation",
    "section": "4. Position Measurements via GPS",
    "text": "4. Position Measurements via GPS\nIntegrate the Adafruit Ultimate GPS into the board stack so that the Teensy has access to GPS measurements: First, solder a 9x1 female header pin row onto the motherboard at the position labelled GPS (see Lab 1 for details). Second, solder male header pins to the BOTTOM of the GPS breakout board. Be sure to get the orientation correct, (see image here). Note that screws, nuts, and standoffs may help secure the GPS breakout board to the motherboard.\nTest your GPS Sensor integration by opening the serial monitor while E80_Lab_07.ino is running. Make sure your battery is plugged into the stack (your GPS is powered off the battery and not off the same USB connection that powers your Teensy), and that you are outside the building so that you can get GPS lock and measurements.\nModify the library file named XYStateEstimator.cpp so that it calculates the x,y position (in meters) of the board stack with respect to a Cartesian coordinate frame whose origin is at ( 34.106465°, -117.712488°). Consult the XYStateEstimator.h file to see what variables you have available. Design your coordinate frame so the X axis points due East and the Y axis points due North. The code to make this transformation should be placed in the function named XYStateEstimator::updateState(), which is already in the file. Note, the x,y positions will be stored in the variables state.x and state.y\nIt may help to first make sure you are aware of how longitude and latitude work. This link is helpful and has a nice image to help visualize the coordinate system. There are several algorithms that have been used to convert longitude-latitude coordinates to x-y coordinates. There is the Vincenty formula, the Haversine equation, and linear transformations that simply scale the coordinates. The first two methods incorporate the curvature of the earth which is important when the vehicle is traveling many kilometers. Scaling methods are easier, but can only be used if distances are short. A good reference can be found here.\nWe will use a modified version of the Forward Equirectangular Projection, where we multiply by the radius of curvature R_earth. We note that the conversion of latitude to y is easier and if we assume the earth is a sphere (which it is to within ±0.25%), so we can use the relationship between the distance along an arc’s edge, the radius of the arc, and the angle, (e.g. state.y = R_earthlatitudeChange). To calculate x, note that it is a function of latitude, (e.g. state.x=R_earthlongituteChange*cos(latitude at origin)\nTo test that your sketch is functioning well, log the x,y positions (they are logged by default in the sample code) as you walk from the coordinate system origin to Foothill Blvd. Walk along the sidewalk East towards Shanahan. Then walk South between Shanahan and Parsons. Cut West back to Parson’s building and end at the origin. The path is illustrated here. It takes time (sometimes a few minutes) before the GPS receiver gets a lock on the signals from the satellites. The GPS lock LED can help you identify if your board has achieved lock. You may want to have the serial monitor open (and print x,y to the screen) when walking the course: this will inform you if your conversion makes sense. Using MATLAB, plot the logged x,y positions from the path. Only plot the x,y points for which the GPS has a lock on satellites.\n\nNote: See above note on common programming errors. They really crop up here."
  },
  {
    "objectID": "labs/lab7/index.html#p-control-on-depth",
    "href": "labs/lab7/index.html#p-control-on-depth",
    "title": "Lab 7: Autonomous Navigation",
    "section": "5. P Control on Depth",
    "text": "5. P Control on Depth\nIn order to implement closed loop depth control with your AUV, it first needs to be able to sense its current depth. To measure depth, you will be using a pressure sensor adapter PCB (picture, schematic, layout, KiCAD) to connect a pressure sensor to pin A0 of your Teensy. This adapter can be found on the central table.\nIn the library file named ZStateEstimator.cpp, in the function called ZStateEstimator::updateState(), you can see that the z position (depth) of the robot is calculated using the function’s input pressure_signal. The main loop() of the Arduino code is where z_state_estimator.updateState() is called. By reviewing this loop(), you can see that this pressure_signal input is receiving the output of analogRead(PRESSURE_PIN). analogRead() is an Arduino function that reads the value of a specified pin, and PRESSURE_PIN is a variable set in Pinouts.h, currently set to pin A0 (pin 14) of the Teensy. The pressure_signal input provides the pressure sensor signal in Teensy units. The ZStateEstimator::updateState() function then converts from Teensy units to Volts, then finally converts from Volts to depth [m] using the variables depthCal_slope and depthCal_intercept. This depth measurement is stored in state.z.\nThe depthCal_slope and depthCal_intercept are not calibrated to your pressure sensor, so you will have to update them. Find where these variables are defined in the library file called ZStateEstimator.h (which is included in ZStateEstimator.cpp), and write down the default values and line numbers for these variables. After finding the calibration slope and intercept for your pressure sensor, this is where you will update them.\n\nNote: Navigating the code like this is helpful in understanding the interaction between the .h files, the .cpp files, and the Arduino sketch. The .h files are the interfaces, they hold information on variables that are used in other files and the functions of the .cpp files of the same name; the .cpp files are the implementations of these functions where the variables held in .h files are used; and the sketch is the top level instructions where some of these functions and variables are used to implement the desired behavior of the robot.\n\nTo calibrate your pressure sensor, get a pressure sensor adapter PCB and a pressure sensor, a graduated cylinder and a meter stick with pressure tubing. Edit ZStateEstmiator::updateState() by uncommenting the two lines of code below the calculation of the z position that initialize a string and print a string with the function printer.printMessage(). The pressure sensor voltage should now appear in the serial monitor, and you will use that display to calibrate your pressure sensor.\nAttach the pressure tube to the pressure sensor and attach the adapter PCB to the motherboard, then plug the pressure sensor into the adapter. Open the serial monitor while E80_Lab_07.ino is running and record both depth and voltage readings. Measure at least seven evenly spaced depths (measured in meters) between the water level and the bottom of the cylinder. Plot the data in order to make a calibration curve and determine the equation of the line of best fit, then update the calibration slope and intercept in ZStateEstimator.h.\nAdd a Proportional depth control system to your robot by modifying the DepthControl.cpp file. Add the following steps:\n\nSet the variable depth_des to the desired depth, which can be found in the wayPoints array at the index currentWayPoint (i.e. wayPoints[currentWayPoint]).\nCalculate the current depth depth using the state.z variable, which was calculated in ZStateEstimator::updateState().\nCalculate the error e as the difference between depth_des and depth. Pay attention to the order you subtract these (How will this affect the control effort?).\nSet the vertical motor control effort uV to be the product of the control gain Kp and the error e. The default value of Kp is 80, but you can change it if your motor is too weak or too strong.\nBound the vertical control effort between -200 and 200. These are empirical values that work well for most situations. Depending on your motor, you may need to go beyond these limits. You can go up to a maximum of +/- 250.\n\nTest your depth P control using the meter stick with tubing and the graduated cylinder. Attach the pressure tubing to your pressure sensor (careful not to bend the pressure sensor - it’ll be easier if you take the pressure sensor out of the adapter, attach the tubing, then plug it back in). Then, while E80_Lab_07.ino is running with the serial monitor open, insert the meter stick into the cylinder, keeping an eye on the DepthControl:, Depth_Des:, Depth:, and uV: values printed to the serial monitor. Make sure that the Depth is reporting a similar value to the current depth of the meter stick to confirm that your calibration works. Then watch the control effort uV change as the difference between Depth and Depth_Des changes, making sure it behaves as expected for proportional control.\nFinally, get an E79 umbilical (found in the lab room) and attach it to your robot. Put the motor in the vertical position, and use a ziptie to secure the tube to the frame. Connect the tubing to your pressure sensor and the motor wires to the Motor C port on your motherboard. Test if the umbilical works by running E80_Lab_07.ino while the serial monitor is open. The motor should start spinning to get to the first waypoint at 0.5 meters. Check if it’s rotating in the correct direction; if not, switch the wires on your motherboard (or change the order you subtracted the depth and depth_des to get the error in DepthControl.cpp, or change the sign of Kp). Blow in the pressure tubing and confirm that the depth changes, and that the motor responds to the change in depth.\nOnce everything is tested and working, bring your robot to the tank room. Put it into the tank, run the sketch, and let the robot go to the two depth waypoints at 0.5m and 1m. Keep an eye on the values and messages printed to the serial monitor. Be sure to log your data, then plot the logged uV, depth and depth_des as a function of time.\n\nNote: Be careful with the umbilical, it may not have enough slack for the robot to go down to 1 meter; if that’s the case, you can change the depth waypoints in the setup() function of E80_Lab_07.ino. If your robot’s motor is too strong or too weak, you may need to change your Kp in DepthControl.h.\n\n\n\nNote: You can instruct the robot to stay at each depth waypoint for a specified amount of time by changing the diveDelay variable defined in the setup() function of E80_Lab_07.ino. e.g.: diveDelay = 3000 will tell the robot to wait at each depth waypoint for 3 seconds before continuing."
  },
  {
    "objectID": "labs/lab7/index.html#clean-up",
    "href": "labs/lab7/index.html#clean-up",
    "title": "Lab 7: Autonomous Navigation",
    "section": "6. Clean up",
    "text": "6. Clean up\nBe sure to dry and return your robot and board stack to your designated Tupperware container in the cupboard. Because this is the last lab of the semester, your team may keep the battery and GPS used for this lab. Make sure the battery is not stored fully charged."
  },
  {
    "objectID": "labs/lab7/index.html#deliverables",
    "href": "labs/lab7/index.html#deliverables",
    "title": "Lab 7: Autonomous Navigation",
    "section": "7. Deliverables",
    "text": "7. Deliverables\nAll labs require two submissions per group. The first submission is a submission sheet in which specific data must be shown. The submission sheet is due at the end of the 4 hour lab period. The submission sheet must be uploaded before the end of your lab session at 5:15 pm. Note that only ONE member of each team should access and submit the submission sheet. It is the responsibility of that team member to add the rest of the team’s names to the submission sheet.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here.\nThe second submission is a writing assignment. In a deviation from normal patterns, we will do the whole writing assignment in class, and it will be due after the first 30 minutes of the writing and reflection section. The rest of the 3/10/2023 Friday section will be our Project Kickoff meeting."
  },
  {
    "objectID": "labs/lab7/index.html#extra-credit-1.-go-autonomous",
    "href": "labs/lab7/index.html#extra-credit-1.-go-autonomous",
    "title": "Lab 7: Autonomous Navigation",
    "section": "Extra Credit 1. Go Autonomous",
    "text": "Extra Credit 1. Go Autonomous\nIn this section you will once again have your robot dive in the tank room using Proportional depth control, but this time you will use your waterproof box to hold your battery, motherboard and pressure sensor on your robot instead of using the umbilical, going completely autonomous.\nYou will need to use a pressure tube penetrator bolt (found in the lab room) so that the pressure sensor inside the box will be able to read the pressure outside the box. You will also need to drill another hole for this pressure penetrator bolt into your waterproof box. Be sure to use a 1/2” step drill bit (which we have in our cupboards) to drill out the hole. Standard drill bits will result in ragged holes that are not watertight. Make sure that the placement of your hole isn’t too close to any protrusions on the surface of the box; You want the rubber washer to be completely flat against the surface.\nNext, you will want to test if your box is waterproofed with the new hole, then add ballast to your robot in order to make it close to neutrally buoyant. Refer to the section on AUV Assembly in Lab 1 for directions on doing this.\nWhen your robot is ready, bring it to the tank room. Upload the sketch, make sure you’re logging your data, close your box and place your AUV in the water. Let your robot dive to the two depth waypoints (0.5) and (1), then include a plot of the uV, depth and depth_des as a function of time in the submission sheet (it should look similar to the submission for section 3). Then change the waypoints and the diveDelay, keeping the values within reason. Run the updated sketch and let your robot dive to the new waypoints, confirming that it’s waiting at each waypoint. Include a plot of the uV, depth and depth_des as a function of time for this run, which should show the depth staying still at each waypoint and the depth_des changing only after the delay is over."
  },
  {
    "objectID": "labs/lab7/index.html#extra-credit-2-proportional-surface-control",
    "href": "labs/lab7/index.html#extra-credit-2-proportional-surface-control",
    "title": "Lab 7: Autonomous Navigation",
    "section": "Extra Credit 2: Proportional Surface Control",
    "text": "Extra Credit 2: Proportional Surface Control\nIn this section you will implement a Proportional surface control system with your AUV using the GPS on your motherboard. Use E80_Lab_07_EC2.ino as the starter code for this portion. You will also interact with two new library files: SurfaceControl.cpp and SurfaceControl.h. Confirm that you can compile and upload the starter code to your Teensy.\nAdd a Proportional surface control system to your robot by modifying the SurfaceControl.cpp file. Add the following steps:\n\nCalculate the desired yaw angle using the atan2 function, i.e. yaw_des = atan2(y_des - y, x_des - x). In this case, (x_des, y_des) is the desired position of the robot.\nCalculate the error e as the difference between yaw_des and the yaw you calculated in section 4.\nSet the control effort u to be a product of the control gain Kp and the error e.\nSet the right and left motor thruster values (uR and uL) to be the avgPower + u and avgPower - u respectively. Start by setting avgPower to be 50. This can be modified later if you want your robot to have faster or slower forward motion.\nMultiply uR and uL by Kr and Kl respectively, (e.g. uR = uR*Kr;). The default values for Kr and Kl are 1.0, but you can change them later if your motors don’t run at the same speed when given the same PWM signal. Bound the control values to be between 0 and 127.\n\nTest your P control by walking the campus in the direction your P control guides you when the path is defined in the code to be the three x,y coordinates (125,-40), (150,-40), (125,-40). This should walk you 25 meters along the centerline of campus (see picture here). Walk at a slow speed , turning in response to the u_R and u_L values printed to the Serial monitor. E.g. if the the values are u_R=45 and u_L = 55, then veer right. Be sure to log your data. Plot the logged path of x, y points, (bonus points if plotted on top of an image of campus). Also plot the angle error and control effort u as a function of time.\nFinally, attach motors to the Motor A and Motor B port and repeat the above experiment, this time obeying your observations of the motor’s rotation rates rather than printed u_R and u_L values. Modify Kr and Kl if necessary to balance your motors. Pay special attention to how motors affect your yaw measurement: they have powerful magnetic fields that are likely to disrupt your experiment if you don’t handle them with care. Include plots of your x,y points, angle and control error."
  },
  {
    "objectID": "labs/lab1/index.html",
    "href": "labs/lab1/index.html",
    "title": "Lab 1: Go Autonomous",
    "section": "",
    "text": "Team size: 4\nSubmission Sheet: html docx\nPrelab Help Sheet: html\nWriting Assignment: html"
  },
  {
    "objectID": "labs/lab1/index.html#introduction",
    "href": "labs/lab1/index.html#introduction",
    "title": "Lab 1: Go Autonomous",
    "section": "1 Introduction",
    "text": "1 Introduction\nIn this lab you will transform the ROV (remotely operated vehicle) used in E79 into an AUV (autonomous underwater vehicle). An ROV is controlled from the surface through long cables, but an AUV carries an autonomous controller on board. While the AUVs you build in Lab 1 will all look the same, you will have a chance to modify these vehicles during the project. By end of semester, each robot will be configured and equipped for unique ocean-sampling experiments.\nAfter successful completion of this lab, you will be able to…\n\nPerform some steps of modifying an E79 robot to build an E80 robot.\nProgram your robot to traverse basic trajectories.\nExtract data from your robot, import it into Matlab, and plot it.\nUse statistical measures to analyze data gathered from your robot.\nExplain the limitations and challenges of open loop control.\nRelate your robot’s behavior to governing equations from E79.\n\nLab 1 is completed in teams of 4.\nBe sure to read the Lab Overview to learn about safety requirements, expensive equipment handling and other rules. You must review all SAFETY QUESTION boxes below as part of prelab. If you ever reach a safety question box and either can’t answer it or feel unsure, grab an instructor.\nAt the end of the lab, you need to submit a completed submission sheet (see links above) on Canvas. Specifications for each part of the lab are included on the submission sheet.Recall that no late work is accepted, we will grade whatever is submitted before the deadlines. Since multiple submissions are allowed, you may want to submit a less-than-perfect draft early as insurance against missing the deadline."
  },
  {
    "objectID": "labs/lab1/index.html#motherboard-assembly",
    "href": "labs/lab1/index.html#motherboard-assembly",
    "title": "Lab 1: Go Autonomous",
    "section": "2 Motherboard Assembly",
    "text": "2 Motherboard Assembly\nA motherboard has been designed to interface the major electrical components of your AUV. Familiarize yourself with the components on the motherboard by reading the Introduction to the E80 Motherboard document. You will add some necessary components to a partially constructed mother board in Lab 1. Use this motherboard assembly document as a guide and add the components. For reference, the schematic for the motherboard is here , the layout is here , and KiCAD design files are here.\nThere are two ways that you can damage your motherboard irreparably during this process, and you should take precautions against each of them. One is soldering components in the wrong position or orientation (e.g., screw terminals facing inward or header on the back side of the board), which is very difficult to rework. Double check that you are using the correct header and try fitting all the pieces together before soldering. The other is flipping power and ground by attaching your battery or power supply leads backwards or soldering the red and black wires to the incorrect terminals on the motherboard. Have an instructor or proctor check your battery connector, and make sure to heed the warnings in the assembly guide.\n\n\n\n\n\n\nSAFETY QUESTION: What are the two ways I can damage my board in this section?\n\n\n\n\n\nSoldering components in the wrong position or orientation, and attaching battery or power supply leads backwards.\n\n\n\n\nFind the parts you need for your motherboard in the parts rack on the supply table. There is set of parts racks in both B171 and B181.\nLabel your board: Before you begin assembly, write your section number, team number and board version on your board. This will be version 1 for all of you, you will increment your version if, for example, your board blows up and you have to make a new one.\nTake precautions to keep everything working before soldering\n\nDouble check that you are using the correct header and try fitting all the pieces together before soldering.\nHave an instructor or proctor check your battery connector and power supply connector polarity.\n\nFollow the instructions in the Motherboard Assembly Document to build your Motherboard.\nCover the back of your motherboard with insulating foam sheet using these instructions to prevent inadvertent short circuits when you set it down.\nFind a sharpie and color the GND side of your P.S. screw black, so that you don’t forget the polarity of the connector."
  },
  {
    "objectID": "labs/lab1/index.html#motherboard-validation-imu-calibration-and-imu-error-measurement",
    "href": "labs/lab1/index.html#motherboard-validation-imu-calibration-and-imu-error-measurement",
    "title": "Lab 1: Go Autonomous",
    "section": "3 Motherboard Validation, IMU Calibration, and IMU Error Measurement",
    "text": "3 Motherboard Validation, IMU Calibration, and IMU Error Measurement\nYour motherboard has a circuit on it called an inertial measurement unit (IMU), specifically an LSM303AGRTR , which allows you to measure acceleration and magnetic fields. This is a useful sensor that we will explore more later in the course. We are just getting started with the sensor in this section by calibrating the output and measuring its noise statistics. This sensor is also useful because you can only measure its output if your motherboard is working correctly. The tests in this section will ensure that your Teensy can listen to the IMU, write to the SD card, and drive the motors.\nFirst, test your motherboard:\n\nSign out an SD card from an instructor.\nPut your Teensy and your SD card into your motherboard and program the Teensy with E80_Lab_01.ino from the E80 codebase from Github. This sketch will turn on one motor for four seconds if it is working properly, so be sure your motors are clear of any obstructions (especially your hands!) when you run the code.\nProvide power to the Teensy using either your battery or the power supply terminals (be careful with the polarity!). You can use the power supply terminals if your battery is still charging. Several lights should turn on, including PWR LED, the IMU LED, the SD LED, and a small blinking LED on top of the Teensy.\nYou have the option of plugging in your USB cable so you can use the serial monitor to watch the Teensy’s serial output as it runs.\nRemove power from your board (you do not need to remove the USB cable if it’s plugged in).\nTake out the SD card and put it into your computer.\nTake the INF and BIN files off of the SD card and read them according to the following instructions.\n\nThe Teensy creates two files to save data every time it runs: an INF file which contains text and a BIN file which contains your measured data in a binary format.\nSpecial programs are required to decode the binary data, and those programs also depend on having a matching INF file. We provide a MATLAB script for reading SD card data: logreader.m.\nThese links provide sample INF and sample BIN files so you can test the MATLAB scripts during prelab. The sample file is very noisy, so it can’t be used to find answers to the questions later in this Section.\n\nVerify that you are saving the following data to your SD card: acceleration values from your accelerometer, magnetic field strengths from your magnetometer, roll, pitch and yaw angles calculated from your IMU measurements, and motor PWM values.\nVerify that your motherboard can drive motors by attaching motors to motor ports A, B and C, then modifying and running E80_Lab_01.ino (which you set up in lab 0) to drive each of them. If your motors are not ready, you can measure the voltages at screw terminals A, B and C to observe whether they are being correctly applied by your software.\n\n\n\n\n\n\n\nWarning\n\n\n\nPlease be very careful when connecting or disconnecting the micro USB cable to the Teensy!! Pull or push laterally while holding down the connector with your other hand. They are fragile and can be pulled off the board easily.\n\n\n\n\n\n\n\n\nNote\n\n\n\nYou can put your Teensy into programmer mode manually by pressing the button on top of the Teensy. This button won’t restart a program currently running on the Teensy. Instead, it deletes all the code on the Teensy so it can be reprogrammed. If you just want to rerun your current program, remove power from the Teensy (maybe using the black power rocker switch) and then restore power.\n\n\nSecond, analyze the data from your accelerometer:\n\nLay your board flat on its standoffs, then take ten seconds of accelerometer data. Determine the mean, the standard deviation, the standard error, and the 95% confidence bounds for a static acceleration measurement in the z direction.\nFigure out the value the accelerometer reports when it is experiencing zero acceleration on each axis. You may need to run your program a few times while holding the board in different orientations to make each axis zero.\nUse the acceleration due to gravity to figure out the size of one ‘accelerometer unit’ in your saved data: i.e.: if your accelerometer reports a value of 1, how many m/s^2 of acceleration is the accelerometer experiencing? Note that accelerometers usually report an unusual unit called “milli-g”, thousandths of acceleration due to gravity, so you should expect one accelerometer unit to be some number of milli-g, which in turn you can represent as m/s^2. (Milli-g is abbreviated mg, confusingly.)\nUse the Student’s T Test to determine if the zero values on each of your axes are statistically different from one another."
  },
  {
    "objectID": "labs/lab1/index.html#penetrator-and-motor-assembly",
    "href": "labs/lab1/index.html#penetrator-and-motor-assembly",
    "title": "Lab 1: Go Autonomous",
    "section": "4 Penetrator and Motor Assembly",
    "text": "4 Penetrator and Motor Assembly\nIn E80 we use special bolts to make waterproof electrical connections across a robot (Figure 1 (a)), and we refer to them as penetrators. Penetrators are combined with a nut and gasket (Figure 1 (b)) to make waterproof seals on project boxes (Figure 1 (c)). This figure shows two important details about using penetrator bolts: the threads must point INTO the box and the washer must be OUTSIDE the box.\n\n\n\n\n\n\n\n\n\n\n\n(a) Penetrator bolt.\n\n\n\n\n\n\n\n\n\n\n\n(b) Penetrator nut and gasket.\n\n\n\n\n\n\n\n\n\n\n\n(c) Project box with penetrator bolt assembly.\n\n\n\n\n\n\n\nFigure 1: Project box and penetrator bolt details\n\n\n\nThese penetrators have six wires passing through them because your AUV will use three motors, which you must prepare.\n\nYou will need a total of 3 motors. If necessary, you can prep new motors as you did in E79, but your time will be very limited if you must build motors. Instructions can be found here.\nIf you have not done so during Lab 0, test your motors using a power supply to make sure they work by supplying 6VDC:\n\nIf the current draw during this test is more than 500 mA, then the friction in your motor is likely to severely limit your top speed; consider debugging it.\n\nSelecting motors that have similar current draws may simplify your software because the motors will exert similar thrusts at the same level of applied PWM.\nMake sure your motors still work when they are submerged in water.\n\nSolder the leads of your three motors. Your motors will be OUTSIDE of the box, so your solder joints will need to be waterproofed with heat shrink tuing. After putting heat shrink on your wires, solder the motor leads to the twisted pair on the non-threaded side of your penetrator bolt. Finish Waterproofing your solder joints with heat shrink tubing.\nTest that all three motors work when the waterproofed solder joints are underwater."
  },
  {
    "objectID": "labs/lab1/index.html#auv-assembly",
    "href": "labs/lab1/index.html#auv-assembly",
    "title": "Lab 1: Go Autonomous",
    "section": "5 AUV Assembly",
    "text": "5 AUV Assembly\nFirst, assemble your project box:\n\nFind your waterproof box and remove the protective paper tape on the rubber seal.\nDrill out your penetrator holes using a step drill bit. DO NOT USE A NORMAL DRILL BIT. Pictures of a step drill bit and the drilling process are in Figure 2 (a) and Figure 2 (b) . The inner diameter of your hole should be 0.5 inches.\nAttach your penetrator and motor assembly to the box (remember threads are in and washer is on the outside). This is pictured in Figure 2 (c)\nHold your box and penetrator combination underwater to check for leaks. DON’T perform this test with any electronics or batteries in the box.\nIf you find leaks, fix them before proceeding. Ask for help if you’re stuck.\n\n\n\n\n\n\n\n\n\n\n\n\n(a) A step drill bit.\n\n\n\n\n\n\n\n\n\n\n\n(b) How to use a step drill bit to drill a hole.\n\n\n\n\n\n\n\n\n\n\n\n(c) An example penetrator installed in a project box.\n\n\n\n\n\n\n\nFigure 2: Information on drilling and assembling your project box.\n\n\n\nSecond, assemble your robot:\n\nDry your box and place your battery, motherboard and Teensy into the box. See Figure 3 (a).\nUse Velcro to attach the box to a PVC robot frame. Make sure to attach a plastic cargo mesh on the bottom of your frame for carrying payloads. See Figure 3 (b).\nUse zip ties to secure the cargo mesh to the robot frame.\n\n\n\n\n\n\n\n\n\n\n\n\n(a) A board and battery wired into a project box.\n\n\n\n\n\n\n\n\n\n\n\n(b) A box velcroed to a frame with a cargo mesh.\n\n\n\n\n\n\n\nFigure 3: Pictures of your board and robot assembly.\n\n\n\nThird, ballast your robot so that it is close to neutrally buoyant.\n\nDetermine how much mass to add. To do this, it helps to know the mass of your robot, and that the robot (including motors and two 1.25’’ foam blocks, but not including the watertight box) has a buoyancy force measured to be approximately 10 N. You can do this approximately in prelab with a guess at your robot’s mass.\nSelect weights for ballasting. Pictures of some of the weights we have available are in Figure 4 (a). Be mindful that their distribution inside of your payload box could affect the resting pitch, yaw or roll of the robot. It may be useful to adjust the resting buoyancy, pitch, yaw, and roll of your robot with the waterproof box before attempting the obstacle course in section 7.\nProtect against metal shorts. Many of the weights we use are metal, so they can short the back of your motherboard. Make sure the back of your motherboard is covered with insulating foam or electrical tape before setting it on top of your ballast. We also recommend wrapping your ballast in plastic wrap as shown in Figure 4 (b).\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Loose ballast in the corner of the lab.\n\n\n\n\n\n\n\n\n\n\n\n(b) Ballast wrapped in insulating plastic.\n\n\n\n\n\n\n\nFigure 4: Reference images for finding and using ballast."
  },
  {
    "objectID": "labs/lab1/index.html#sec-experiment",
    "href": "labs/lab1/index.html#sec-experiment",
    "title": "Lab 1: Go Autonomous",
    "section": "6 Open Loop Control Navigation",
    "text": "6 Open Loop Control Navigation\nA simple obstacle course will be set up in the test tank. The obstacle course is pictures in Figure 5 and Figure 6. You must navigate your robot through the 3 hoops, starting at the surface in one hoop, diving through the second and surfacing in the third.\n\n\n\n\n\n\nFigure 5: Diagram of obstacle course.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Over water view of obstacle course.\n\n\n\n\n\n\n\n\n\n\n\n(b) Underwater view of obstacle course.\n\n\n\n\n\n\n\nFigure 6: Project box and penetrator bolt details\n\n\n\n\nModify E80_Lab_01.ino to direct your robot to traverse the course so that it ends within the red hoop (3). You can assume your AUV can start in the middle of the yellow hoop (1). Make sure your code accounts for the time you will need to seal up the waterproof box, attach it to the robot frame, and position it in the water.\nBe sure to test your code with your robot ahead of time, in air and in a dunk tank, before you visit the test tank room. It is important to know how to control each motor, including which direction each motor turns. It is also important to verify that you are correctly logging data.\nGet your robot checked by an instructor, go to the tank room, and deploy your robot. You will only have 5 attempts in the test tank room.\n\n\n\n\n\n\n\nNote\n\n\n\nPart of the goal of this lab is to convince you that open loop control does not work very well. Robots navigating open loop can go off course because of motor behaviors, currents in the tank, misplacement in the launch area, or many other reasons. Closed loop control can address some of these issues. Don’t worry if your robot doesn’t complete the obstacle course."
  },
  {
    "objectID": "labs/lab1/index.html#acceleration-and-orientation-data",
    "href": "labs/lab1/index.html#acceleration-and-orientation-data",
    "title": "Lab 1: Go Autonomous",
    "section": "7 Acceleration and Orientation Data",
    "text": "7 Acceleration and Orientation Data\nPlot the AUV acceleration data from the experiment in Section 6 as a function of sample number. Confirm that positive acceleration is in the correct direction. Confirm qualitatively whether the measured acceleration data matches your expectations, and retake data if needed.\nFinally, consider the E79 robot model in Equation 1 and the E79 motor thrust curve in Figure 7. Use the model and the thrust curve to make predictions of your peak acceleration when your motors first turn on from rest. Compare that prediction to your measured data.\n\\[ m\\ddot{x} = F_{thrust} - b\\dot{x} \\tag{1}\\]\n\n\n\n\n\n\nFigure 7: Thrust curve for E79 motor.\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis comparison is a good example of how E79 can be applied and a good example of how to compare experimental data to theory. The comparison also can be affected by differences between your motors compared and this motor curve, and that variability makes another case for using closed loop control.\n\n\n\n\n\n\n\n\nWarning\n\n\n\nIMPORTANT CLEANUP: Please return the battery charger to the center table. These will be shared among the different lab sections. Also, put your ballast weights, board, Teensy, penetrator bolt (with motors), battery and robot frame in your labelled Tupperware container in the cupboard. Please return SD card and SD card reader to the proctor or Lynn."
  },
  {
    "objectID": "labs/lab1/prelab.html",
    "href": "labs/lab1/prelab.html",
    "title": "Lab 1 Prelab Help Sheet",
    "section": "",
    "text": "Here are some ideas of useful prelab activities. There are a lot, so it makes sense to apportion them among your team. However, some activities (watching lecture videos, reading) should be completed by everyone. Be careful not to break up work too strictly, because many of the topics covered by the lab stretch across these prelab divisions; it makes sense to read carefully and try to identify linked problems and work before breaking up the tasks, and it makes sense to share individual findings thoroughly with the group."
  },
  {
    "objectID": "labs/lab1/prelab.html#reading-and-reference",
    "href": "labs/lab1/prelab.html#reading-and-reference",
    "title": "Lab 1 Prelab Help Sheet",
    "section": "1 Reading and Reference",
    "text": "1 Reading and Reference\n\nWatch lecture videos.\nRead the lab.\nFlag parts of the lab that didn’t make sense for discussion with your team or a prof.\nRead the submission sheet and notice:\n\nWhat are the deliverables?\nWhat are the specifications on those deliverables?\n\nRead the motherboard manual.\nRead the motherboard assembly guide.\nRead and answer all of the safety questions.\nRead the lab overview and note safety procedures and appropriate attire."
  },
  {
    "objectID": "labs/lab1/prelab.html#software",
    "href": "labs/lab1/prelab.html#software",
    "title": "Lab 1 Prelab Help Sheet",
    "section": "2 Software",
    "text": "2 Software\n\nDouble check that the E80 Git repo is available and working.\nTest compile E80_Lab_01.ino.\nWrite a version of E80_Lab_01.ino for testing motors and test compile it.\nWrite a version of E80_lab_01.ino for running the obstacle course and test compile it.\nImport the sample INF and BIN file data using logreader.m.\nWrite software that will generate acceleation plots in Matlab based on the logreader.m sample data."
  },
  {
    "objectID": "labs/lab1/prelab.html#statistics",
    "href": "labs/lab1/prelab.html#statistics",
    "title": "Lab 1 Prelab Help Sheet",
    "section": "3 Statistics",
    "text": "3 Statistics\n\nWrite code to find the mean of a dataset in Matlab.\nWrite code to find the standard deviation of a dataset in Matlab.\nWrite code to conduct a T-test for two datasets in Matlab.\nMake sure you understand the math behind means and standard deviations.\nMake sure you understand the math behind T tests (which isn’t in the videos so you may have to dig through old notes or the internet)."
  },
  {
    "objectID": "labs/lab1/prelab.html#mechanical",
    "href": "labs/lab1/prelab.html#mechanical",
    "title": "Lab 1 Prelab Help Sheet",
    "section": "4 Mechanical",
    "text": "4 Mechanical\n\nRead all the robot assembly instructions. Verify that you understand:\n\nBox modifications\nDrill hole locations\nDrilling procedures\nPenetrator assembly (are you clear on the parts of the bolt, the gasket?)\nMounting the box on the frame\n\nMake some sketches of how you expect the robot to look during various parts of the assembly process (and how it is changing relative to E79) to test your understanding.\nWhat do you expect the buoyant force of your robot to be?\nWhat ballast mass will make your robot neutrally buoyant?\nHow many ballast plates do you think that will take?\nWhat tools do I have to measure masses in lab anyway?"
  },
  {
    "objectID": "labs/lab1/prelab.html#results-and-e79-theory",
    "href": "labs/lab1/prelab.html#results-and-e79-theory",
    "title": "Lab 1 Prelab Help Sheet",
    "section": "5 Results and E79 Theory",
    "text": "5 Results and E79 Theory\n\nMake a plan for how your team will split its time in lab.\nHow are you going to find the size of one accelerometer unit? Can you write software (or a spreadsheet) to do that?\nManipulate the E79 equation so it predicts peak acceleration from rest.\nWhat shape do you expect for an acceleration curve produced by the E79 governing equation after a step in thrust? How might it get messed up in the real world?\nWrite up the math parts of your submission sheet so that you can just paste in results in lab."
  },
  {
    "objectID": "labs/lab5/index.html",
    "href": "labs/lab5/index.html",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "",
    "text": "UNDER CONSTRUCTION, DO NOT USE FOR PRELAB\nTeam size: 4"
  },
  {
    "objectID": "labs/lab5/index.html#learning-objectives",
    "href": "labs/lab5/index.html#learning-objectives",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter successful completion of this lab, you will be able to…\n\nUse the oscilloscope to perform Fourier analysis of a measured signal.\nExplain the impact of parameters such as sampling frequency and sample number on the resolution and frequency range of a Fast Fourier Transform."
  },
  {
    "objectID": "labs/lab5/index.html#introduction",
    "href": "labs/lab5/index.html#introduction",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "0. Introduction",
    "text": "0. Introduction\nIn this lab you will work as a team of four with underwater speakers to perform position measurements relative to your robot and relative to fixed beacons. The beacon measurements are most easily interpreted in the frequency domain, so you will be using Fourier analysis to understand the behavior of the signals. The purpose of this lab is to demonstrate the power of underwater acoustic measurements and to force you to wrangle early and often with Fourier analysis.\nFor the required portion of the Lab, beacons will be broadcasting sine waves at 9 kHz, 11 kHz, 13 kHz.\nFor the extra credit sections, each team is assigned an acoustic channel, and the team will need to filter out other teams’ measurements in addition to the ambient beacon signals in order to extract useful information. If you attempt these extra credit sections, you will be free to transmit up to 5 W at 14 kHz +1 kHz *(team number)+/- 300 Hz. If you emit at other frequencies while your peers are taking data then you may damage their experiments, so be diligent in controlling the frequency at which you broadcast.\nThese channels are in the audio range, so try to keep your experiments underwater and short lest your peers shout at you scornfully about the high-pitched whine you’re producing. Be aware that your receiver could be overloaded by broadcasters in other channels, so keep an eye on your time domain signal to be sure that it is not clipping.\nWe are using both benchtop electronics and water in this lab, and the two don’t mix, so BE EXTREMELY CAREFUL when putting anything in the water, removing anything from the water or mounting anything near the water. Instructors will stop your experiments if they think they pose a water hazard to equipment.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here."
  },
  {
    "objectID": "labs/lab5/index.html#introduction-to-the-fft",
    "href": "labs/lab5/index.html#introduction-to-the-fft",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "1. Introduction to the FFT",
    "text": "1. Introduction to the FFT\nEven if not every student can have hands on the oscilloscope (as a reminder, the Agilent/Keysight 2024A which has this spec sheet) during this part of the experiment, we would like every student to, at minimum, watch the proceedings. Please carry out this section as a whole group. Also note that much of this section can be predicted and analyzed very accurately in prelab with sample data generated in MATLAB.\nConnect a function generator to an input channel of the oscilloscope. Double check that your oscilloscope channel is DC coupled. Drive an 11 kHz sine wave with an amplitude of 1.5 V and an offset of 0 V into the oscilloscope. Set the time scale of the oscilloscope so that 50 cycles of the signal fit on the screen. Use the math function of the oscilloscope to display the FFT of the signal. Set the span of the FFT to 100 kHz, the center to 50 kHz and the window to rectangular. Look at the FFT produced by the math menu. Is it what you expect?\nDescribe what happens to the FFT when you do each of the following:\n\nIncrease the drive signal’s frequency by 1 kHz.\nChange the drive signal into a square wave. Back up your assertions that this makes sense with a rigorous analytical analysis.\nChange the window from rectangular to Hanning. Back up your assertions that this makes sense with a graphical analysis.\nChange the time scale of the oscilloscope. Explain your results in terms of the sample rate, the number of samples and the total amount of time over which samples have been recorded. What is your oscilloscope’s sample rate? You can find it displayed on the oscilloscope or figure it out from the scope’s datasheet. Note that the sample rate may vary with your time scale: if you are taking a long acquisition, it is set by the size of the oscilloscopes memory – i.e.: your total number of samples is fixed – and if you are taking a short acquisition it is limited by the speed of the sampling circuitry in the oscilloscope.\n\nDrive the square wave signal from item 3 into the oscilloscope, export your data (make sure that the max length option is turned on in your save settings) and then use MATLAB to take the FFT of your data. First take the FFT with no windowing and then use a Hanning window. Does the FFT in MATLAB match the oscilloscope and your analysis?"
  },
  {
    "objectID": "labs/lab5/index.html#circuit-interfaces-to-microphones",
    "href": "labs/lab5/index.html#circuit-interfaces-to-microphones",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "2. Circuit Interfaces to Microphones",
    "text": "2. Circuit Interfaces to Microphones\nYou will need to use microphones to pick up sounds in the tank. We will be using a waterproof electret microphone called the CME-1538-100LB. Build the reference circuit for your electret microphone. The reference circuit’s output is AC coupled – which means a capacitor is attached in series with the output – and your oscilloscope probe looks like a large impedance attached to ground. What effects do the coupling capacitor and the probe resistance have when both are in place? Drawing a full circuit model may help to answer that question. Be sure that you consider the effects of the AC coupling circuit at both low and high frequencies. Verify that you can receive signals with your electret microphone by clapping near it. What frequencies in your hand clap signal contain the most energy?\nYou will need to amplify the signal that you receive in the tank to make it visible on your oscilloscope. Build an amplifier with a gain of 100 by cascading two stages that each have a gain of 10. You need to spread your gain over two stages because of an op-amp parameter called the gain-bandwidth product (often abbreviated GBW or GBP). How do you calculate your bandwidth once you know your amplifier’s gain and the GBW? Use a dual-rail op-amp to build these amplifier stages (why?). Record your amplifier schematic in the submission sheet.\nIf your first amplifier stage is a non-inverting amplifier, then add a large resistor (~100k) between the positive amplifier input and ground. You don’t need this resistor if your first stage is an inverting amplifier. This resistor is necessary to prevent the input leakage current in your op-amp from changing your results.\nYou may need to solder leads to this electret microphone to plug it into your breadboard. You should consider twisting the leads together to form twisted pair wire. These wires do not need to be very long. In the tankroom, you will be provided with water-proofed microphones with long leads so that you can dip the microphones into the tank from the work tables."
  },
  {
    "objectID": "labs/lab5/index.html#distance-measurement-based-on-amplitude-decay-from-continuous-wave-beacons",
    "href": "labs/lab5/index.html#distance-measurement-based-on-amplitude-decay-from-continuous-wave-beacons",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "3. Distance Measurement Based On Amplitude Decay from Continuous Wave Beacons",
    "text": "3. Distance Measurement Based On Amplitude Decay from Continuous Wave Beacons\nOne way to locate your robot in the water is to listen to three beacons and calculate your distance to each of them based on the beacon power received at your robot. In this section we are going to create calibration curves which could allow you to trilaterate your robot based on a set of beacons. You will need to put your microphone into the tank, which will require long microphone wires as discussed in the last section.\nThree beacons are installed in the test tank and will be constantly emitting sine waves of approximately 9 kHz, 11 kHz and 13 kHz. Figure out which beacon corresponds to which frequency by taking acoustic measurements in the water. Which beacon corresponds to which frequency? What are their exact frequencies?\nOur goal is to see if we can infer the position of our microphone by measuring the power emitted by the beacons. We have an analytical expectation of how much power we should receive at a given distance from a speaker (what is it?), and you are going to compare that ideal analytical expression to measurements in the noise-limited, high-multipath environment of the tank. You need to be sure that your measurements capture evidence of multipath in the tank, so how closely will you need to space your measurements? (Hint: think about the wavelength of your waves and the size of the tank to predict multipath interference – which is kind of “spatial frequency” – to figure this out. Also, don’t be afraid to look this up on external resources.)\nMove your microphone around in the tank and measure the power to create received voltage vs. distance calibration curves for each beacon. Be sure to test how the orientation of your measurement system affects your received power and take that information into account when recording measurements. The FFT will be important to separate out the contribution of each speaker. Be sure to save and report some examples of the underlying FFT data which confirms that you have taken these measurements.\nMake an analytical calculation of how much voltage you expect to observe. Note that you don’t need to have the transmit power of the beacon or the pressure-to-voltage constant of your microphone (which is linear) to make this model. You can fit an appropriate voltage vs distance function to your data even without knowing these constants. How many parameters will you use to fit your function?\nCompare your measurements against your ideal analytical model by overlaying them on the same plot. Comment on the suitability of amplitude measurements for range finding. Your comment should not conclude that your hardware is not working: your equipment needs to be working well enough to tease out interesting environmental effects.\nAlways connect to your Teensy pins through the E80 motherboard, which has protection circuits designed to prevent damage to the Teensy."
  },
  {
    "objectID": "labs/lab5/index.html#sampling-audio-with-a-teensy",
    "href": "labs/lab5/index.html#sampling-audio-with-a-teensy",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "4. Sampling Audio with a Teensy",
    "text": "4. Sampling Audio with a Teensy\nThis section requires that you use the Teensy sampling rigs that have been set up in the tank room. It is an amplifier with an offset, and an E80 MTB is used to digitize your data. While tempting to connect your single analog signal directly to a Teensy, an E80 MTB with protection circuits should be used to prevent damage to the Teensy. Connect your microphone to a Teensy sampling rig, connect the rig to your computer with a micro USB cable and then run E80_Lab05_Teensy_Rig.m in order to retrieve information from the rig. This software uses the Teensy’s analog to digital converter to measure signals received from the microphone attached to the setup. The sample rate on the Teensy is programmable in this software. (The Teensy should already be running E80_Lab05_Teensy_Rig.ino)\n\nUse the software to measure vectors of sample data with sample rates of 10kHz and 100 kHz.\nPlot the magnitude of FFTs of the 10 kHz and 100 kHz sampled data. Describe any differences between the resulting graphs and explain what causes the differences.\nPlot the first 100 points of the time data for the 10 kHz and 100 kHz signals. Pay attention to the x axis of the signals. Describe any differences in the measured data and explain why they are there.\nWhat is the minimum sampling rate you should use to measure signals in the tank? Prove it by sampling data at the frequency and presenting an FFT of that data."
  },
  {
    "objectID": "labs/lab5/index.html#deliverables",
    "href": "labs/lab5/index.html#deliverables",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "5. Deliverables",
    "text": "5. Deliverables\nAll labs require two submissions per group. The first submission is a submission sheet in which specific data must be shown. The submission sheet is due at the end of the 4-hour lab period and must be uploaded before the end of your lab session at 5:15 pm. Note that only ONE member of each team should access and submit the submission sheet. It is the responsibility of that team member to add the rest of the team’s names to the submission sheet.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here.\nThe second submission is a writing assignment, usually around 1 page in length. Each writing assignment will be based on a prompt, and must be completed by each student individually; no collaboration is allowed on the text or figures in these assignments, though you may speak among yourselves about concepts in keeping with the collaboration rules of the course. A first draft of the writing assignment must be uploaded by noon on Friday, and you need to bring a printed copy of your draft to the writing and reflection section on Friday at 1:15 p.m. During the first hour of the writing and reflection, you will engage in a peer editing exercise. The second hour of the Writing and Reflection section is reserved for you to edit your draft to produce a final draft of the writing assignment. This final draft must be uploaded before the end of the Writing and Reflection section on Friday at 3:15 p.m. Since multiple submissions are permitted, and only the last one is graded, you may want to submit a draft at 3 p.m. as insurance. The writing assignment is based on this prompt. This is the peer feedback worksheet. Note that you should include relevant calculations to explain the ideal analytical curves on your calibration plots on your submission sheet.\nNote that the rubric is included in the prompt.\nRecall that no late work is accepted, we will grade whatever is submitted at the deadlines.\nAfter the writing and reflection section at the end of each week every person (not just one person per team) must submit a team dynamics check-in survey. These are part of your participation grade. The survey link can be found on the home page."
  },
  {
    "objectID": "labs/lab5/index.html#cleanup",
    "href": "labs/lab5/index.html#cleanup",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "6. Cleanup",
    "text": "6. Cleanup\nReturn your PVC to the stock in the E80 lab. Be sure to return electret microphones, power amplifier boards and speakers to the electronics table."
  },
  {
    "objectID": "labs/lab5/index.html#extra-credit-distance-measurement-based-on-time-of-flight-measurements",
    "href": "labs/lab5/index.html#extra-credit-distance-measurement-based-on-time-of-flight-measurements",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "Extra Credit: Distance Measurement Based on Time-of-Flight Measurements",
    "text": "Extra Credit: Distance Measurement Based on Time-of-Flight Measurements\nAnother common acoustic measurement is time-of-flight (ToF) range finding. ToF measurement relies on sending out a specially designed acoustic pulse from a speaker and measuring how long it takes for it to reach a microphone. Often the microphone is measuring reflections of your initial speaker pulse (eg. on a sounding vessel), but we’ll get started by just sending our speaker pulse straight to our microphone.\nYou need to be able to carefully control the signals being sent from your speaker in order to stay in your audio channel while creating a short pulse. Specifically, you will send a burst of sine waves: a small number of sine wave cycles. We can accomplish this by using internally triggered burst modulation, an advanced feature of the old signal generators (the HP/Agilent 33120A). This function is not available on the function generators in your oscilloscope. You can control burst mode by pressing the series of keys shown below. Read the manual for clarification on how these key presses work.\n\nTurn burst modulation mode on: Shift + the ramp/burst button / The text ‘burst’ will be highlighted at the top of the screen.\nTurn burst modulation mode off: Shift + the ramp/burst button / The text ‘burst’ will no longer be highlighted at the top of the screen.\nTurn manual triggering on and internal triggering off: Shift + the TRIG button / The text ‘trig’ will be highlighted at the top of the screen\nTurn manual triggering off and internal triggering on: Shift + the TRIG button / The text ‘trig’ will no longer be highlighted at the top of the screen\nChange the number of cycles sent out in each burst or the burst repetition rate:\nShift + Enter / Screen says “A: Mod Menu,”\nv / Screen says “AM Shape,”\n\n / Screen says \"AM Source,\"\n\n\n / Screen says \"FM Shape,\"\n\n\n / Screen says \"Burst CNT, \"\n\nv / Screen says some number.” OR &gt; / “Burst Rate,” and then V / “some number.”\nEdit the number you see and press enter to save the setting.\n\nYou will be using Dayton DAEX25W-8 Audio Exciters as speakers to convert voltage signals into acoustic signals. These speakers, like most speakers, have very low input impedance. What is their impedance? Calculate the maximum power you could drive into them using one of the old HP/Agilent 33120A signal generators. You need to account for the output impedance of the signal generator in this calculation. Audio amplifiers, like the LM384, help us to bypass this problem. They are designed to drive large amounts of power through speakers. What is the maximum average power an LM384 can drive into a DAEX25W-8?\nWe have created a power amplifier board containing an LM384 to allow you to drive your speakers. Follow these instructions to use the driver board. You only have access to one power supply in the tank room, so you’ll need to power your microphone amplifier off the same rails as the LM384 amplifier board. Be careful not to provide too much voltage to the microphone amplifier.\nYou are measuring in a noisy environment (beacons, other teams, etc), so measuring your received signal will also depend on carefully timing the snapshot that your oscilloscope takes. By gathering data that is synchronized with the signal you are sending and averaging over many samples, you can cancel out signals that are not at the same frequency as the burst repetition rate of your signal. This is called coherent averaging. Set this up using the following steps:\n\nUse a second oscilloscope channel to probe the output of your function generator (or attach the trigger output of your function generator to your scope’s trigger input)\nTrigger your oscilloscope on the channel attached to the output of the function generator (or on the trigger input)\nSet your oscilloscope to normal mode acquisition (so that it will only capture a new screen of data when it receives a trigger) and adjust the horizontal position of your oscilloscope trigger so that you don’t waste samples recording data before you send out a burst.\n\nTurn on averaging on your oscilloscope using the Acquisition/Mode button.\n\nAffix your speaker to the wall and move your microphone to different distances away from it. Measure the time of flight to your receiver to create a calibration curve of distance vs. measured time of flight. Include an ideal analytical calculation of time-of-flight vs. distance on your calibration curve and compare it to your data. How long should a sound wave take to propagate from your speaker to the other side of the pool? How long for a round trip? A schematic of the test tank can be found here. If you’re feeling particularly bold, you can try putting your speaker next to your microphone to measure a reflection off of something.\nYou may refer to this picture of an example range finding setup. As mentioned in the introduction, it is extremely important that your electronics and the tank water are not mixed. Use tape to hold electronics down so they can’t fall into the tank, and keep bench top equipment as far from the tank edge as possible. Always dry your test apparatus with a towel as you remove it from the water and be mindful of nearby electrical setups. This is an opportunity for some careful mechanical design: a little PVC can go a long way towards making your setup work well. Include one to three pictures of your experimental setup on the table and pool edge in your submission sheet. These pictures will be graded on safety and quality of construction."
  },
  {
    "objectID": "labs/lab5/index.html#extra-credit-velocity-detection-from-doppler-shift",
    "href": "labs/lab5/index.html#extra-credit-velocity-detection-from-doppler-shift",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "Extra Credit: Velocity Detection from Doppler Shift",
    "text": "Extra Credit: Velocity Detection from Doppler Shift\nIt is possible to use more complex modulation of the signal that your speaker emits to learn more about your robot. In this section you will use a frequency modulated sine wave to measure the velocity of your robot by leveraging the Doppler effect. This type of measurement is called a frequency modulated continuous wave (FMCW) measurement because, unlike your time of flight experiment, you are not sending out bursts of signal.\nUse the signal generator to generate a triangle frequency modulated FMCW signal to drive into your speaker. Instructions to do so can be found in the manual. Set the frequency deviation to fill your channel, the modulation frequency to 10 Hz, and the modulation shape to be a triangle.\nYou will need a “true” measurement of velocity to compare against your Doppler measured velocity. We will record video of your robot and analyze it with frame tracking software. VLC works well as capture software, and we recommend tracker for tracking software (though some students have used video-physics). Attach one of the USB web cameras to your computer and build a PVC frame so that it has a top-down view of your robot. Make sure a length reference like a meter stick is visible in the image that you capture. Attach a brightly colored piece of pool noodle to your robot so that it is visible above the water. This will enable you to use auto tracking features in the video analysis software. Test your image capture / velocity measurement system before deploying your robot to be sure that it is working.\nUse a claw hand or a piece of PVC to move your receiver through the water while driving the transmitter with your FMCW wave and recording the received audio. Also record video of the test using your image tracking system. It’s easiest to carry out your recordings by taking a very long acquisition on the oscilloscope which you start manually by pressing the force trigger button.\nUse the instructions in this document to process your received audio and extract the velocity as a function of time from your received FMCW. Bear in mind that you need to isolate your velocity signal before doing any signal processing, so don’t be afraid to take an FFT and filter out other channels before processing your data. Also extract velocity from your recorded video. Generate a plot comparing your Doppler velocity against the velocity measured using your image capture system.\nWriteups for this extra credit section are not counted against the page limit of your report. You may submit this as an additional document labeled “lab 5 doppler extra credit addendum.”"
  },
  {
    "objectID": "labs/lab5/index.html#extra-credit-self-powered-velocity-measurements",
    "href": "labs/lab5/index.html#extra-credit-self-powered-velocity-measurements",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "Extra Credit: Self-Powered Velocity Measurements",
    "text": "Extra Credit: Self-Powered Velocity Measurements\nAffix your speaker and microphone to your AUV and take velocity measurements while it is driving under its own power as in lab 1. Compare logged accelerometer data, image capture system data and Doppler data."
  },
  {
    "objectID": "labs/lab5/index.html#a-note-for-the-project",
    "href": "labs/lab5/index.html#a-note-for-the-project",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "A Note for the Project:",
    "text": "A Note for the Project:\nYou won’t be able to use our audio amplifier boards during the final project, but it’s pretty easy to whip up your own LM384 on your protoboard. You can find the reference design for a typical 5 W amplifier in the LM384 datasheet. This reference design involves using a potentiometer for volume control, which you can probably replace with a fixed divider or omit depending on your design. Place an extra 4.7 µF bypass capacitor on the supply rails (not the bypass pin) in addition to your normal bypassing. Your amplifier will be unstable without this extra capacitor, so it may be educational to remove the capacitor and observe the amplifier output to understand exactly what bypassing does for you.\nNotice this design has a capacitor in series with the speaker. This is done for two reasons: speakers can be damaged by DC current, and the audio response of the speaker is linked to relatively high frequency oscillations. The capacitor lets high frequencies through and stops DC. This technique of driving an output through a series capacitor is called AC coupling. You’ll probably drive the input from a Teensy, but this input likes to have zero centered input signals, so we recommend AC coupling the input too."
  },
  {
    "objectID": "labs/lab5/lab5-writing.html",
    "href": "labs/lab5/lab5-writing.html",
    "title": "Lab 5 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will learn to write a rigorous mathematical derivation. You will present an FFT calculated using MATLAB of the square wave captured in lab and provide a derivation of the square wave FFT to justify the frequency components and power levels present in the signal."
  },
  {
    "objectID": "labs/lab5/lab5-writing.html#writing-assignment",
    "href": "labs/lab5/lab5-writing.html#writing-assignment",
    "title": "Lab 5 Writing Assignment",
    "section": "",
    "text": "In this writing assignment you will learn to write a rigorous mathematical derivation. You will present an FFT calculated using MATLAB of the square wave captured in lab and provide a derivation of the square wave FFT to justify the frequency components and power levels present in the signal."
  },
  {
    "objectID": "labs/lab5/lab5-writing.html#learning-objectives",
    "href": "labs/lab5/lab5-writing.html#learning-objectives",
    "title": "Lab 5 Writing Assignment",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nBy the end of this writing assignment you will…\n\nFormat and present equations in text\nWrite text to support your derivation"
  },
  {
    "objectID": "labs/lab5/lab5-writing.html#required-resources",
    "href": "labs/lab5/lab5-writing.html#required-resources",
    "title": "Lab 5 Writing Assignment",
    "section": "Required Resources",
    "text": "Required Resources\n\nFigure of an FFT of a square wave using data from the oscilloscope. You may not use the FFT calculated by the oscilloscope. Your FFT should be calculated in MATLAB from the time-domain trace of the square wave."
  },
  {
    "objectID": "labs/lab5/lab5-writing.html#specifications",
    "href": "labs/lab5/lab5-writing.html#specifications",
    "title": "Lab 5 Writing Assignment",
    "section": "Specifications",
    "text": "Specifications\n\nMathematical Derivations\n\nContain a label that numbers each equation in the derivation\nEach equation is referenced in the text\nVariables of the derivations are described in the text\nDerivations are written out explicitly to show a sequence of steps\nSteps in the derivation proceed logically from one another in an appropriate level of detail for the audience\nRefer to appropriate theorems covered in class where appropriate, don’t reinvent every wheel\n\n\n\nFigures\n\nInclude FFTs from your measurements for comparison to your theoretical analysis.\nProper Axis Labels & Tick Size, Readable: appropriate fonts, line weights and data markers and not overly cluttered, follows other figure conventions from previous weeks.\nCorrect Units on both X and Y Axis.\nShows interesting features of frequency spectrum of the tested signal.\n\n\n\nText\n\nRefers to each derivation/figure.\nCorrect sentence mechanics like cohesion and coherence between sentences and no run-ons.\nCorrect paragraph mechanics like topic sentences and placement at breaks between ideas.\nLanguage is not stilted and jargon is kept to a reasonable minimum.\n\n\n\nTechnical Inferences in Text\n\nVerify the correctness of your theoretical results by referring to FFT Figure, which includes justifying both the power levels and frequency components of your measurement.\nUse continuous and discrete Fourier transforms and notation where appropriate to discuss the derivation of your transform and your MATLAB plot.\nMathematically correct and insightful analysis of your input signal explains the output."
  },
  {
    "objectID": "presentation/kickoff/team-contract-specs.html",
    "href": "presentation/kickoff/team-contract-specs.html",
    "title": "E80 Team Contract Specs",
    "section": "",
    "text": "Mission statement present.\nLogistics includes communication medium and agreed upon norms.\nGroup data storage system created (e.g., shared Drive or shared folder on Google Drive).\nDOCX version of team contract uploaded into shared drive for group editing.\nObjectives present for team.\n\n\n\n\n\nTeam mission is clear and concise.\nLogistics and organization section clearly outlines communication and collaboration methods and expectations.\nStrengths and weaknesses are included for each team member.\nTeam objectives are clear, specific, and include metrics to assess how the team is performing.\nTeam norms explain what they will do to create a high-functioning team, how they will know when things are going\nAll team members have signed the form.\n\n\n\n\nAdd specific notes here about the assignment and what is yet to be completed."
  },
  {
    "objectID": "presentation/kickoff/team-contract-specs.html#team-contract-specifications",
    "href": "presentation/kickoff/team-contract-specs.html#team-contract-specifications",
    "title": "E80 Team Contract Specs",
    "section": "",
    "text": "Mission statement present.\nLogistics includes communication medium and agreed upon norms.\nGroup data storage system created (e.g., shared Drive or shared folder on Google Drive).\nDOCX version of team contract uploaded into shared drive for group editing.\nObjectives present for team.\n\n\n\n\n\nTeam mission is clear and concise.\nLogistics and organization section clearly outlines communication and collaboration methods and expectations.\nStrengths and weaknesses are included for each team member.\nTeam objectives are clear, specific, and include metrics to assess how the team is performing.\nTeam norms explain what they will do to create a high-functioning team, how they will know when things are going\nAll team members have signed the form.\n\n\n\n\nAdd specific notes here about the assignment and what is yet to be completed."
  },
  {
    "objectID": "presentation/kickoff/team-contract-guidelines.html",
    "href": "presentation/kickoff/team-contract-guidelines.html",
    "title": "E80 Team Contract",
    "section": "",
    "text": "View or download the team contract template.\n\n\n\nView or download the team contract specifications."
  },
  {
    "objectID": "presentation/kickoff/team-contract-guidelines.html#team-contract-template",
    "href": "presentation/kickoff/team-contract-guidelines.html#team-contract-template",
    "title": "E80 Team Contract",
    "section": "",
    "text": "View or download the team contract template.\n\n\n\nView or download the team contract specifications."
  },
  {
    "objectID": "presentation/kickoff/team-contract-guidelines.html#guidelines-for-writing-a-team-contract",
    "href": "presentation/kickoff/team-contract-guidelines.html#guidelines-for-writing-a-team-contract",
    "title": "E80 Team Contract",
    "section": "Guidelines for Writing a Team Contract",
    "text": "Guidelines for Writing a Team Contract\nE80 is a team-based class and you will work with other students to complete a collaborative project. To accelerate your team’s development, you will create and sign a team contract as a result of having an engaged conversation in which ALL team members contribute.\nPlease notice that your team contract is a living document which should be re-visited often and updated as necessary.\n\nStages of Team Development\nAccording to concepts from Organizational Behavior, there are five stages of team development:\n\nForming\nStorming\nNorming\nPerforming\nAdjourning\n\nDuring the forming stage, teams tend to communicate in indirect polite ways rather than more directly. The storming stage, characterized by conflict, can be productive, but may consume excessive amounts of time and energy. In this stage it is important to listen well for differing expectations. Next, during the norming stage, teams formulate roles and standards, increasing trust and communication. This norming stage is characterized by agreement on procedures, reduction in role ambiguity, and increased “we-ness” or unity.\nThese developments generally are precursors to the performing stage, during which teams achieve their goals, are highly task oriented, and focus on performance and production. When the task has been completed, the team enters the adjourning phase.\n\n\nTeam Contract Purpose\nTo accelerate a team’s development, a team contract is generated in order to move the team more quickly into the performing stage. This process of generating a team contract can actually help jump-start a group’s collaborative efforts by immediately focusing the team members on a definite task. The group members must communicate and negotiate in order to identify the quality of work they all wish to achieve, and the level of group participation and individual accountability they all feel comfortable with.\nSuccessful team performance depends on personal individual accountability. Conflicts can arise when individualistic motives or behaviors disrupt team-oriented goals. For example, conflict can stem from an unequal division of resources. When team members believe they are receiving too little for what they are giving, they sometimes reduce their effort and turn in work of lower quality. Such “free riding” occurs most frequently when individual contributions are combined into a single product or performance, and individual effort is perceived as unequal. At this point, some individual team members may take on extra responsibilities while other team members may reduce their own efforts or withdraw from the team completely. These behaviors may engender anger, frustration, or isolation—resulting in a dysfunctional team and poor quality of work. However, with a well-formulated team contract, such obstacles can usually be avoided.\nOnce your team contract has been developed, your team is ready to begin work on collaborative assignments. However, you may soon find that your team is not working as well as you had hoped. This is normal but needs to be attended to immediately. Perhaps your team is simply not following the established rules and agreements as strictly as you should be, or perhaps you need to change parts of your contract. Call a team meeting immediately to discuss and resolve the challenges your team is facing; do not delay. Seek guidance from your instructor to resolve any conflicts so that you will have the most positive team experience possible."
  },
  {
    "objectID": "lectures/index.html",
    "href": "lectures/index.html",
    "title": "Lectures",
    "section": "",
    "text": "Lecture content is delivered by videos. Each week you will be expected to watch a set of videos and then take a multiple-choice quiz on the material. Links to the videos and supplemental material are provided below. All quizzes can be found on Canvas. The slides for the two whole-class meetings are also provided.\nNote that in weeks 6 and 7, the order of Lectures/quiz/Lab are not the same for everyone. Odd numbered teams are in Group A and Even numbered teams are in Group B. Please make sure prelab is done for the correct lab.\nQuizzes are due at noon (12 p.m.) on Mondays on Canvas during the first half of the semester. See Canvas for the exact dates.\n\nWeek 1: E80 Kickoff meeting\n\nKickoff Slides\nTeam Contract Guidelines\nTeam Contract Template\n\n\n\nWeek 2: Statistics for Experiments\n\nBasic Statistics for Experiments Videos\nBasic Statistics for Experiments Slides\nBasics Statistics Example Spreadsheet\nBasics Statistics Example MATLAB\nAll Statistics Summary Document\nStudent’s t Values Table\n\n\n\nWeek 3: Basics of Electrical Measurements\n\nBasics of Electrical Measurements Videos\nBasics of Electrical Measurements Slides\nError Propagation Video\nError Propagation Slides\nAdditional Information on Calculating Error in Multimeter Measurements\nAuntie Spark’s Guide to breadboards\nWe also recommend watching videos 1 & 2 of next week’s op-amp videos.\n\n\n\nWeek 4: Operational Amplifiers\n\nOperational Amplifiers Videos\nOperational Amplifiers Slides\nLinear Regression Videos\nLinear Regression Slides\nLinear Regression Example Spreadsheet\nLinear Regression Example MATLAB\nAdditional Information on Op Amp impedance\n\n\n\nWeek 5: Temperature Measurements\n\nTemperature Measurements Videos\nTemperature Measurements Slides\nNonlinear Regresssion Video\nSteinhart-hart-fitting.m\n\n\n\nWeek 6: Underwater Acoustics (Group A) & Fluid Mechanics (Group B)\n\n\n\nGroup A\nGroup B\n\n\n\n\nUnderwater Acoustics\nFluid Mechanics\n\n\nSlides\nSlides\n\n\n\n\n\nWeek 7: Fluid Mechanics (Group A) & Underwater Acoustics (Group B)\n\n\n\nGroup A\nGroup B\n\n\n\n\nFluid Mechanics\nUnderwater Acoustics\n\n\nSlides\nSlides\n\n\n\n\n\nProject Kickoff Meeting\n\nSlides\nProposal Template\nProposal Specifications\n\n\n\nProject Jump Start: Autonomous Navigation\n\nAutonomous Navigation\nAutonomous Navigation Slides\nStatistics of Integrals and Derivatives Video 1\nStatistics of Integrals and Derivatives Video 2\nStatistics of Integrals and Derivatives Slides\nStatistics of Integrals and Derivatives Accelerometer MATLAB Example\nStatistics of Integrals and Derivatives Numerical Derivation Statistics MATLAB Demo.\n\n\n\nSupplementary Information\nWe have also included slides from topics covered in previous versions of E80 for additional reading if you are interested:\n\nFourier Series\nDFTs and FFTs\nSampling, Aliasing, Folding\nDynamic Modeling, [Wang Thesis], [LabVIEW Model]\nIntroduction to E80 Robot Software\nElectrical and Mechanical Modifications for the Project\n\nYou may notice that a lot of these previous topics are focused on Fourier Series and Transforms, those are important concepts that we expect you to pick up in E72. If you’d like to brush up on them you can take a look at these videos:\n\nKhan Academy on Fourier Series (this is a sin/cos formulation rather than complex exponential, but it’s a good introduction. The visualization video is particularly helpful.)\nDavid Dorran on the Discrete Fourier Transform (a quick introduction to thinking about this for sampled data with a link to a longer video at the end)\nWe have some prototype Fourier Videos (there are more topics we’d like to cover, but these are an OK place to start)"
  },
  {
    "objectID": "project/index.html",
    "href": "project/index.html",
    "title": "Project",
    "section": "",
    "text": "The final project for this class is deploying your AUV in open water in order to complete an experiment of your design. This project offers many opportunities for creativity: there are a wide variety of interesting things in the ocean that can be measured. For example, environmental or scientific quantities (e.g., water quality, distribution of temperature, salinity, turbidity) and observation of marine life are good options, as are engineering properties such as sensor accuracy, battery life, sensor or craft mechanical durability, velocity vs. power, controller accuracy, or measuring the structural strains that large motors apply to the robots. Get creative! We look forward to seeing what you come up with.\nThe minimum requirements of the project are as follows:\n\nYour robot must be autonomously deployed to take measurements without human intervention.\nThe deployment must last at least one minute and the robot must actively control its position during this minute.\nThis deployment must end at a place where the robot can be recovered.\nYour sensor package must be deployed on or from your AUV, either in the water or in the air.\nYour sensor package must use at least three sensors with at least two unique electrical interfaces.\nThe IMU, GPS, and motor current sensors that are already installed on the robot do not count towards this requirement, but they may be used as part of your data collection and analysis.\nAny sensors, including the ones you’ve installed or used as part of any of the labs, are fair game for this project. The extra-credit sections of labs are a good source for sensors.\n\nThis project is structured as a set of cumulative deliverables which will help you gather data in time to complete the project. These deliverables are summarized below. Each deliverable requires that each team be checked off by two faculty members during your usual lab section. The details of what documentation or hardware demonstrations are required for the checkoff each week are included in the sections below. The team needs to check off with their section professor and a second professor. The second professors will be available for some portion of every afternoon and on Friday (Teams from sections 1 and 3 may check off with your 2 section professors). Be prepared for a rigorous design review at each checkoff.\nIn addition to the extra credit sections in the labs, there is a set of reference designs for sensors and equipment. Feel free to use them as the basis for your own sensors and equipment. There are also many Arduino tutorials and an Elegoo User Guide to help you get started with your hardware.\nSensor deployments are intended to take place during weeks 4 and 5 of the project: Week 4 deployment will be at the Bernard Field Station’s pHake Lake during your regular section time and week 5 deployment will be at the Dana Point Baby Beach on Saturday 4/22/2023.\nAfter the deployments, students are responsible for a set of final deliverables: A rough draft of your final report is due at 11:59 PM on 4/28/23. The final draft is due at 11:59 PM on 5/3/2023 (submission will be accepted on Sakai) and a final presentation on 5/3/2023. The requirements for the final deliverables are discussed below.\n\n\n\nDuring the first lab section of your project you will need to produce a project proposal. The project proposal is made up of four parts: a budget indicating what you intend to buy for the project, a one-page maximum written description of your experiment, a detailed schematic showing how you will install your new sensors, and a mechanical drawing showing how you plan to mount or ruggedize the sensors for water submersion. Take a look at this example proposal to see what we’re looking for.\nYou will need to price the sensors and mechanical parts (easiest online) in order to make an accurate budget. You are expected to have selected parts for your experiment before submitting the budget. Selecting these parts will depend on your experimental design: does your motor have enough torque to overcome the surf? Does your pressure sensor have the maximum ratings necessary to achieve the depth you desire? Common vendors include Digikey, McMaster-Carr, JameCo, SparkFun, AdaFruit and many others. The faculty will not approve any budgets greater than $50 (including taxes and shipping). Supplies in the E80 lab don’t count towards your budget limit (and remember that there are some links to get you started on the final set of lecture slides and the section above). Some of the supplies, notably speakers and microphones, are available for temporary checkout for prototyping but not for permanent installation. These supplies are cheap enough that we expect you to buy your own for permanent installation.\nThe one-page description of your project should lay out your scientific and/or engineering goals and describe how your sensor system will help you meet those goals. There are a few specific points that it should address:\n\nIt should answer the question, “Why would anyone do this project?” or “Why should I care about your results?”\nIt should outline your hypothesis and what you’re comparing it to: what is the x of your experiment, what is the y and what two x-y curves are you comparing? If you need to cite literature to establish your scientific relationship, then don’t forget you can access papers through Mudd’s network.\nIt should state the sensors you are using and describe how they relate to your scientific goals. Will they require any exceptional mechanical, electrical or software design?\nIt should convince the reader that you considered a number of design alternatives when you picked your project. The minimum bar for doing this is including five two-line project descriptions for projects that you considered but did not pursue.\nIt should outline requests for specific launch times or locations for your robot. There are two locations we can launch in Dana Point: the public beach and the Ocean Institute pier. We have a limited number of launch slots on the pier: two teams can launch in each half hour slot from 8:30 a.m. to 2:30 p.m. If your scientific goals would benefit from a particular launch time slot or slots on the pier, then you should request those slots in this project description. If some time slots are oversubscribed, we will award them randomly. We will prioritize giving every team that wants one a deployment off the pier over giving one team multiple deployments.\n\nYour schematic should be detailed and thorough and show every wire, resistor, capacitor (don’t forget bypass capacitors) and power source that you intend to connect in order to get your sensor signals onto your MTB. You should consider the voltage swing each component will provide and carefully design your analog front end and power supply so that these voltages are appropriate for the Teensy. Annotating voltage swings on your schematic is a good way to keep track of these design choices. You will be asked about every component on your schematic, so be prepared to back up your decisions with calculations or reference designs from the datasheets.\nYou may find the design files for the PCBs you will use helpful while coming up with your schematic, so they are linked below. The CAD files for each board are viewable usingKiCAD. Also, consider re-reading the Introduction to the E80 Motherboard document from lab 1.\n\nMotherboard (schematic, layout, CAD files)\nProtoboard (schematic, layout, CAD files)\n\nYou used the motherboard in labs 1, 2 and 7, so you should be familiar with it. All of your new electronics will be assembled on a new board called the protoboard, which has been designed to resemble a breadboard. Note that there are special areas on the protoboard layout for voltage regulators; you have battery power available to your protoboard but no regulated voltage supplies, so you will need to use these areas to add voltage regulators. The screw holes on all of the boards are grounded. Connections from the motherboard to protoboard will be made with a ribbon cable as shown here and here.\nYour mechanical drawings should indicate sensor locations and be sufficient to convince a skeptical professor that your intended mechanical modifications are physically possible. Include approximate calculations - mass, center of gravity, buoyancy, or torque for motors - where appropriate to justify that these modifications serve your experimental goals. Especially include calculations if you think a professor will challenge you on the feasibility of your modification. (“e.g.: Can you really submerge an air filled tank with THAT motor?”) Be sure to look up datasheets for motors if necessary.\nRemember, you have $50 per team to spend towards your project. A few important notes on spending:\n\nAll purchases must be approved by your section instructor, who will initial your purchase requests on the google spreadsheet.\nYou must make all purchases to be shipped to the Engineering Department.\nOnce your section instructor has approved your purchase, the designated purchaser may use the online department form New Purchase Order Request Form to make the purchase request.\nOn the purchase request form, be sure to include your team number and section number.\nPlan for a relatively long lead time, around a week.\nOn the purchase request form, put Professor Brake as the professor to approve the purchase request.\nDO NOT FORGET TAXES AND SHIPPING COSTS WHEN CONSIDERING YOUR BUDGET.\n\nFaculty use this checklist when checking students off for this week, so feel free to review your proposal against that list.\nThis is the list of parts available to you.\n\n\n\nAt the end of the second week of the project you must demonstrate a prototype of your sensors in communication with the Teensy on the motherboard (MTB). Attach the sensors to your MTB (possibly using a breadboard), write software to measure them and design a set of experiments which will allow a professor to observe your sensor’s outputs for known values. Be mindful of your construction techniques: if you do a good job building your circuits this week then you will be ready for your deployments. If you do a bad job, then you will need to do confusing rebuilds. The more sensors you get working this week, the smoother next week will go.\nDuring your checkoff you will be expected to show your professor (preferably) a live demonstration or (if necessary) a set of slides which show your measured data.\nHere is a PDF of the Week 2 check-off list that we will use to evaluate your circuits.\n\n\n\nAfter you have tested all of your sensors (possibly breadboarded) and demonstrated that they work, you need to transfer them to the hardware that will go in your AUV. As discussed in Section 1 above, the available protoboards are PC boards that are laid out like two halves of a breadboard side by side to which you can solder parts. They connect to the motherboard through the multipin connectors and ribbon cable. They are usually the easiest way to ruggedly mount your components for use in your AUV. Consider carefully the proper ways to mount and waterproof so that your sensors function as desired. You do not need to complete your waterproofing and final assembly, but everything should be ruggedly mounted and you want to come as close to the final configuration as possible.\nSome helpful guidelines:\n\nParts like the bypass capacitors and assorted resistors should be soldered directly to the PCB. For more complex parts, such as 16-pin DIP op-amps, it may be wise to solder a socket in place and mount the part in the socket to facilitate replacing them if something goes wrong.\nGood wiring technique and tight layout will make your robot much more reliable and easier to debug.\nYou should use stranded wire whenever the wire will be subject to flexure or bending during use, disassembly or reassembly. It is much less likely to break under strain than solid core wire. As a general rule, when connecting two points on the protoboard use solid wire, when connecting to anything off board, use stranded wire.\nYou may need to make penetrator bolts for this project stage. A method for applying marine epoxy to bolts that have been drilled out can be found here. Remember that marine epoxy needs to dry overnight, so making these bolts requires two days because epoxy is applied twice. Be sure epoxy always dries in a fume hood: staff can show you an appropriate hood to use. We use 1/4” holes for our penetrator bolts and we hold the undrilled bolts in vises while drilling out the central hole. We find that six wires is about the maximum that we can fit into one bolt before the epoxy starts failing. You will also need to drill holes for these penetrator bolts in your project box. Be sure to use 1/2” step drill bits (which we have in our cupboards) to drill out the holes. Standard drill bits will result in ragged holes that are not watertight.\nDefault_Robot.ino, is a good starting point for integrating your sensors with the Teensy. It adds some implements a couple features: logging of the analog pins, an updated diagnostic display, improved GPS resolution, and a few header files that help keep things organized. Be sure to read the README because it contains a lot of information about the features and adjustable knobs in each file. The adjustments described in the README file are sufficient to cover most standard student projects.\n\nDuring your checkoff, you will be expected to explain to your professor how everything is intended to work, and (preferably) give your professor a live demonstration of data collection and display or (if necessary) display a set of slides which shows your measured data. The difference from Week 2 is that everything should be mounted, and not just breadboarded. You should be able to mount your electronics assembly in your box, power it from battery power, mount the box in your robot and demonstrate the ability to log data when it is in this configuration. Any mechanical modifications to the robot should be complete before the checkoff so that the instructors are verifying that your electronics assembly can be mounted inside of the final version of your robot.\nHere is a PDF of the Week 3 check-off list that we will use to evaluate your protoboards.\n\n\n\nDuring the fourth week you need to demonstrate that your AUV is watertight and capable of autonomous operation by measuring field data with it. Because GPS reception in the tank room is poor we’ll accept faked control loops or open loop control during tank room deployments. You are expected to test and (hopefully) launch your AUV at the pHake Lake at the Bernard Field Station during your regular section time. The main goal of these tests is to ensure that your sensors work in the field. The secondary goal is to evaluate your experimental data so you can make changes to ensure that you will be able to meet your experimental goals. Do not forget that seawater and lake water have very different salinities, conductivities, and densities. A neutrally buoyant AUV in pHake Lake will bob like a cork in the ocean.\nRemember that field deployments are often easier if you have a deployment checklist, so write one. Here is an example deployment checklist. The intent is that this checklist will prevent mistakes during your deployment; you’ll be thinking about enough things out in the field that you are very likely to forget about the details of the care and feeding of your sensor suite without a list to check against.\nYou will also submit an experimental plan. The plan must include the number of deployments you intend to do and the times and locations of those deployments. You should list the expected range of signals you expect to observe (based on theory or preliminary measurements) during the deployments. The document should show the planned robot trajectory for each deployment and discuss how the robot will be recovered (kayak, it comes back and we grab it, pool hook, etc.).\nThe main E80 Lab (Parsons B171) will be open from 12:30 pm - 1:00 pm this week so that you may retrieve your equipment. You must be at the side gate of Bernard Field Station by 1:15 pm; an instructor will meet the group at the gate at the start of your section. The teaching team will be out at BFS. This is one of the two chances that you’ll have to collect data in the field, and field data is required for your final report and presentation.\nTools and facilities will be available at BFS. A generator will be running power supplies, oscilloscopes, soldering irons, and other electronics. Multimeters and common hand tools will be available. Common supplies will be available too: heat shrink, glue, hot air guns, etc. A set of work tables will be set up beneath shaded tents. Sunscreen and water will be available during this deployment, but be sure you’ve eaten before you arrive. Faculty will announce a cancellation of the launch in the case of severe rain. Be sure to walk to the BFS gate in pairs and only cross at crosswalks.\nYou should show slides containing analyzed data at your checkoff. Be sure to overlay data sets that should be compared against one another and include analytical models to compare against on your plots.\nNOTE: It is possible to increase the logging time of your robot by increasing the FILE_BLOCK_COUNT value in Logger.h. This can help you to log data during long deployments.\n\n\n\nThe fifth week is your final chance to test and verify your deployment checklist and fix any flaws that were discovered at pHake Lake. You will have your regular section time to rebuild, retest, and modify your system to get more meaningful data by adjusting such things as amplifier gains and offsets, sampling rate, sensor location on the AUV, and deployment times of your sensor. You will not have access to pHake Lake, but you will have access to the water tank during the week.\nThe final field deployment is on Saturday, 4/22/2023. We will take buses from Foothill Blvd just north of Parsons to Dana Point, leaving at 6:30 am sharp. If you miss the bus, you will have to find your own way to Dana Point.\nYou must have your robot and any supplies that your group plans to bring with you in order to be ready to load the bus. Attendance will be taken to ensure that the bus doesn’t leave anyone behind at the end of the day, so make sure you are counted in the morning and you tell us if you are leaving separately from the bus.\nSunscreen, water and some snack/lunch food (pizza, granola bars, chips) will be provided. The same facilities as the lake deployment will be available. In addition, we will provide freshwater buckets and rice for recovering flooded robots.\nFaculty will announce a cancellation of the launch in the case of severe rain. The launch may be rescheduled for Sunday in that case.\nVideos have been recorded to give students a sense of the following environment characteristics:\n\nWater outside the harbor: Exercise great care if you want to operate a robot here. Most AUVs will be trashed. Watch this video.\nCurrents close to docks: This video shows the worst I saw. In this video, no motors are turned on.\nNormal AUV navigation in the harbor: This video shows it is possible.\nWater clarity: Get an idea of what you can see by watching this video.\n\nYour deliverables are slides with updated data from your deployment, which you will share with your instructors during your checkoffs at Dana Point. You are not allowed to do any deployments after launch day, so use this week well!\n\n\n\nThere are no deliverables during the sixth week of the project, but professors will be available to help you analyze data from your robot deployments. The experiments that you may conduct are limited, and the spirit of the restrictions is that you may only conduct small, in-lab forensic experiments to figure out problems if things went wrong.\nSpecifically:\n\nYou may not take any measurements underwater; you’re confined to “lab.”\nYou may not build or measure new sensors: if it didn’t work during a deployment then we’re not interested in measurements from it.\n\nYou should focus your efforts on analyzing your data and forensic analysis of failures in your sensors. If a small experiment would verify a forensic assumption or explain a quirk in your data, then you should feel free to carry it out. (For example, a team once needed to see how their measurements from an LED varied with angle, and they took their still functional sensor outside and waved it around to take that measurement.) When in doubt, ask an instructor.\nYour report is due at the end of this week.\n\n\n\nOn presentation day you will give a fifteen-minute, in-person presentation followed by ten minutes of questions and answers. This presentation should be aimed at a technically competent audience with diverse training backgrounds that is unfamiliar with the details of your project. (e.g.: The audience is a group of professional engineers from different disciplines.) You should imagine the presentation is being given to employers or peers at a conference, which means that you should hold yourself to high standards of professionalism: practice until the presentation is smooth and well-polished, think carefully about the story your visual aids are telling, ensure that the visual aids are readable and high quality, and dress in traditional business or business casual clothing. Every member of the team should participate in the presentation.\nHere is the rubric.\nSuccessful presentations often include discussions of:\n\nScience and/or engineering goals\nSensors and mechanical modifications to achieve those goals\nDesign process and calculations\nPre-deployment modeling and expected measurements\nData processing\nComparisons between modeling and measured data\nInterpretation of these results\nRecommendations for future work\n\nThe questions during the Q&A portion of your presentation will come from both the general technical audience and your instructors. They will range from straightforward to very detailed. Be sure to prepare by practicing fielding pointed questions and by cultivating a comprehensive understanding of your work. Preparing supplementary slides which you can deploy for common questions can help you during the Q&A.\nThe presentation schedule is available here. Please be at least ten minutes early to your presentation.\n\n\n\nEach team is responsible for submitting a report on their deployments in IEEE format. The report has a maximum length of ten pages including figures and appendices. Your purpose is to convey your experiments, your apparatus and your results. You should assume your audience is made of technical professionals of diverse backgrounds (i.e.: not all instructors of the course) who are unfamiliar with your specific project. You should write the report such that a reader could replicate your experiment and compare their results to yours. Note that this is a different audience than the video presentation. This rubric is the rubric which will be used to grade the reports.\nHere are a few tips for good report writing:\n\nThe main body is often most digestible if it is written in several sections. Which sections are included and the ordering of your will depend on the specifics of the experiment, but some common, important topics are provided in the modified rubric. If it is impossible to address every point in the modified rubric while staying inside the page limit then (1) make your writing more compact by using mathematical notation, tables or figures and (2) prioritize what is most important for your report.\nBe sure to follow the practices of scientific writing: use quantifiable descriptions instead of vague adjectives (“a 25% change” instead of a “a big change”), make sure all plots have labeled axes with units, make sure text in figures and tables is large enough to read, don’t use the first person (including cheats like “the team did X”) and minimize passive voice by making the experiment or artifact the subject of your sentences.\nMake sure to do some pre-writing to organize your text. Decide what topics you want in the report and where you want to put them before you start writing. Don’t talk about topics in the wrong sections or repeat yourself unnecessarily.\nDon’t forget that your writing style has a huge impact on how your work is received. Make a careful editing pass to be sure that each sentence says what you mean it to say. Then make a second editing pass for spelling, punctuation, common grammatical errors (especially tense mismatch, which is endemic), and gracefulness of language.\n\nHere are some examples of student reports and a well-written Tech Memo (c/o Prof. Spjut, don’t mind the non-IEEE formatting).\nA rough draft of your final report is due at XX. The final draft is due at XX."
  },
  {
    "objectID": "project/index.html#introduction",
    "href": "project/index.html#introduction",
    "title": "Project",
    "section": "",
    "text": "The final project for this class is deploying your AUV in open water in order to complete an experiment of your design. This project offers many opportunities for creativity: there are a wide variety of interesting things in the ocean that can be measured. For example, environmental or scientific quantities (e.g., water quality, distribution of temperature, salinity, turbidity) and observation of marine life are good options, as are engineering properties such as sensor accuracy, battery life, sensor or craft mechanical durability, velocity vs. power, controller accuracy, or measuring the structural strains that large motors apply to the robots. Get creative! We look forward to seeing what you come up with.\nThe minimum requirements of the project are as follows:\n\nYour robot must be autonomously deployed to take measurements without human intervention.\nThe deployment must last at least one minute and the robot must actively control its position during this minute.\nThis deployment must end at a place where the robot can be recovered.\nYour sensor package must be deployed on or from your AUV, either in the water or in the air.\nYour sensor package must use at least three sensors with at least two unique electrical interfaces.\nThe IMU, GPS, and motor current sensors that are already installed on the robot do not count towards this requirement, but they may be used as part of your data collection and analysis.\nAny sensors, including the ones you’ve installed or used as part of any of the labs, are fair game for this project. The extra-credit sections of labs are a good source for sensors.\n\nThis project is structured as a set of cumulative deliverables which will help you gather data in time to complete the project. These deliverables are summarized below. Each deliverable requires that each team be checked off by two faculty members during your usual lab section. The details of what documentation or hardware demonstrations are required for the checkoff each week are included in the sections below. The team needs to check off with their section professor and a second professor. The second professors will be available for some portion of every afternoon and on Friday (Teams from sections 1 and 3 may check off with your 2 section professors). Be prepared for a rigorous design review at each checkoff.\nIn addition to the extra credit sections in the labs, there is a set of reference designs for sensors and equipment. Feel free to use them as the basis for your own sensors and equipment. There are also many Arduino tutorials and an Elegoo User Guide to help you get started with your hardware.\nSensor deployments are intended to take place during weeks 4 and 5 of the project: Week 4 deployment will be at the Bernard Field Station’s pHake Lake during your regular section time and week 5 deployment will be at the Dana Point Baby Beach on Saturday 4/22/2023.\nAfter the deployments, students are responsible for a set of final deliverables: A rough draft of your final report is due at 11:59 PM on 4/28/23. The final draft is due at 11:59 PM on 5/3/2023 (submission will be accepted on Sakai) and a final presentation on 5/3/2023. The requirements for the final deliverables are discussed below."
  },
  {
    "objectID": "project/index.html#week-1-proposal-and-design",
    "href": "project/index.html#week-1-proposal-and-design",
    "title": "Project",
    "section": "",
    "text": "During the first lab section of your project you will need to produce a project proposal. The project proposal is made up of four parts: a budget indicating what you intend to buy for the project, a one-page maximum written description of your experiment, a detailed schematic showing how you will install your new sensors, and a mechanical drawing showing how you plan to mount or ruggedize the sensors for water submersion. Take a look at this example proposal to see what we’re looking for.\nYou will need to price the sensors and mechanical parts (easiest online) in order to make an accurate budget. You are expected to have selected parts for your experiment before submitting the budget. Selecting these parts will depend on your experimental design: does your motor have enough torque to overcome the surf? Does your pressure sensor have the maximum ratings necessary to achieve the depth you desire? Common vendors include Digikey, McMaster-Carr, JameCo, SparkFun, AdaFruit and many others. The faculty will not approve any budgets greater than $50 (including taxes and shipping). Supplies in the E80 lab don’t count towards your budget limit (and remember that there are some links to get you started on the final set of lecture slides and the section above). Some of the supplies, notably speakers and microphones, are available for temporary checkout for prototyping but not for permanent installation. These supplies are cheap enough that we expect you to buy your own for permanent installation.\nThe one-page description of your project should lay out your scientific and/or engineering goals and describe how your sensor system will help you meet those goals. There are a few specific points that it should address:\n\nIt should answer the question, “Why would anyone do this project?” or “Why should I care about your results?”\nIt should outline your hypothesis and what you’re comparing it to: what is the x of your experiment, what is the y and what two x-y curves are you comparing? If you need to cite literature to establish your scientific relationship, then don’t forget you can access papers through Mudd’s network.\nIt should state the sensors you are using and describe how they relate to your scientific goals. Will they require any exceptional mechanical, electrical or software design?\nIt should convince the reader that you considered a number of design alternatives when you picked your project. The minimum bar for doing this is including five two-line project descriptions for projects that you considered but did not pursue.\nIt should outline requests for specific launch times or locations for your robot. There are two locations we can launch in Dana Point: the public beach and the Ocean Institute pier. We have a limited number of launch slots on the pier: two teams can launch in each half hour slot from 8:30 a.m. to 2:30 p.m. If your scientific goals would benefit from a particular launch time slot or slots on the pier, then you should request those slots in this project description. If some time slots are oversubscribed, we will award them randomly. We will prioritize giving every team that wants one a deployment off the pier over giving one team multiple deployments.\n\nYour schematic should be detailed and thorough and show every wire, resistor, capacitor (don’t forget bypass capacitors) and power source that you intend to connect in order to get your sensor signals onto your MTB. You should consider the voltage swing each component will provide and carefully design your analog front end and power supply so that these voltages are appropriate for the Teensy. Annotating voltage swings on your schematic is a good way to keep track of these design choices. You will be asked about every component on your schematic, so be prepared to back up your decisions with calculations or reference designs from the datasheets.\nYou may find the design files for the PCBs you will use helpful while coming up with your schematic, so they are linked below. The CAD files for each board are viewable usingKiCAD. Also, consider re-reading the Introduction to the E80 Motherboard document from lab 1.\n\nMotherboard (schematic, layout, CAD files)\nProtoboard (schematic, layout, CAD files)\n\nYou used the motherboard in labs 1, 2 and 7, so you should be familiar with it. All of your new electronics will be assembled on a new board called the protoboard, which has been designed to resemble a breadboard. Note that there are special areas on the protoboard layout for voltage regulators; you have battery power available to your protoboard but no regulated voltage supplies, so you will need to use these areas to add voltage regulators. The screw holes on all of the boards are grounded. Connections from the motherboard to protoboard will be made with a ribbon cable as shown here and here.\nYour mechanical drawings should indicate sensor locations and be sufficient to convince a skeptical professor that your intended mechanical modifications are physically possible. Include approximate calculations - mass, center of gravity, buoyancy, or torque for motors - where appropriate to justify that these modifications serve your experimental goals. Especially include calculations if you think a professor will challenge you on the feasibility of your modification. (“e.g.: Can you really submerge an air filled tank with THAT motor?”) Be sure to look up datasheets for motors if necessary.\nRemember, you have $50 per team to spend towards your project. A few important notes on spending:\n\nAll purchases must be approved by your section instructor, who will initial your purchase requests on the google spreadsheet.\nYou must make all purchases to be shipped to the Engineering Department.\nOnce your section instructor has approved your purchase, the designated purchaser may use the online department form New Purchase Order Request Form to make the purchase request.\nOn the purchase request form, be sure to include your team number and section number.\nPlan for a relatively long lead time, around a week.\nOn the purchase request form, put Professor Brake as the professor to approve the purchase request.\nDO NOT FORGET TAXES AND SHIPPING COSTS WHEN CONSIDERING YOUR BUDGET.\n\nFaculty use this checklist when checking students off for this week, so feel free to review your proposal against that list.\nThis is the list of parts available to you."
  },
  {
    "objectID": "project/index.html#week-2-breadboard-demonstration",
    "href": "project/index.html#week-2-breadboard-demonstration",
    "title": "Project",
    "section": "",
    "text": "At the end of the second week of the project you must demonstrate a prototype of your sensors in communication with the Teensy on the motherboard (MTB). Attach the sensors to your MTB (possibly using a breadboard), write software to measure them and design a set of experiments which will allow a professor to observe your sensor’s outputs for known values. Be mindful of your construction techniques: if you do a good job building your circuits this week then you will be ready for your deployments. If you do a bad job, then you will need to do confusing rebuilds. The more sensors you get working this week, the smoother next week will go.\nDuring your checkoff you will be expected to show your professor (preferably) a live demonstration or (if necessary) a set of slides which show your measured data.\nHere is a PDF of the Week 2 check-off list that we will use to evaluate your circuits."
  },
  {
    "objectID": "project/index.html#week-3-pcb-solder-and-test",
    "href": "project/index.html#week-3-pcb-solder-and-test",
    "title": "Project",
    "section": "",
    "text": "After you have tested all of your sensors (possibly breadboarded) and demonstrated that they work, you need to transfer them to the hardware that will go in your AUV. As discussed in Section 1 above, the available protoboards are PC boards that are laid out like two halves of a breadboard side by side to which you can solder parts. They connect to the motherboard through the multipin connectors and ribbon cable. They are usually the easiest way to ruggedly mount your components for use in your AUV. Consider carefully the proper ways to mount and waterproof so that your sensors function as desired. You do not need to complete your waterproofing and final assembly, but everything should be ruggedly mounted and you want to come as close to the final configuration as possible.\nSome helpful guidelines:\n\nParts like the bypass capacitors and assorted resistors should be soldered directly to the PCB. For more complex parts, such as 16-pin DIP op-amps, it may be wise to solder a socket in place and mount the part in the socket to facilitate replacing them if something goes wrong.\nGood wiring technique and tight layout will make your robot much more reliable and easier to debug.\nYou should use stranded wire whenever the wire will be subject to flexure or bending during use, disassembly or reassembly. It is much less likely to break under strain than solid core wire. As a general rule, when connecting two points on the protoboard use solid wire, when connecting to anything off board, use stranded wire.\nYou may need to make penetrator bolts for this project stage. A method for applying marine epoxy to bolts that have been drilled out can be found here. Remember that marine epoxy needs to dry overnight, so making these bolts requires two days because epoxy is applied twice. Be sure epoxy always dries in a fume hood: staff can show you an appropriate hood to use. We use 1/4” holes for our penetrator bolts and we hold the undrilled bolts in vises while drilling out the central hole. We find that six wires is about the maximum that we can fit into one bolt before the epoxy starts failing. You will also need to drill holes for these penetrator bolts in your project box. Be sure to use 1/2” step drill bits (which we have in our cupboards) to drill out the holes. Standard drill bits will result in ragged holes that are not watertight.\nDefault_Robot.ino, is a good starting point for integrating your sensors with the Teensy. It adds some implements a couple features: logging of the analog pins, an updated diagnostic display, improved GPS resolution, and a few header files that help keep things organized. Be sure to read the README because it contains a lot of information about the features and adjustable knobs in each file. The adjustments described in the README file are sufficient to cover most standard student projects.\n\nDuring your checkoff, you will be expected to explain to your professor how everything is intended to work, and (preferably) give your professor a live demonstration of data collection and display or (if necessary) display a set of slides which shows your measured data. The difference from Week 2 is that everything should be mounted, and not just breadboarded. You should be able to mount your electronics assembly in your box, power it from battery power, mount the box in your robot and demonstrate the ability to log data when it is in this configuration. Any mechanical modifications to the robot should be complete before the checkoff so that the instructors are verifying that your electronics assembly can be mounted inside of the final version of your robot.\nHere is a PDF of the Week 3 check-off list that we will use to evaluate your protoboards."
  },
  {
    "objectID": "project/index.html#week-4-first-field-deployment-data",
    "href": "project/index.html#week-4-first-field-deployment-data",
    "title": "Project",
    "section": "",
    "text": "During the fourth week you need to demonstrate that your AUV is watertight and capable of autonomous operation by measuring field data with it. Because GPS reception in the tank room is poor we’ll accept faked control loops or open loop control during tank room deployments. You are expected to test and (hopefully) launch your AUV at the pHake Lake at the Bernard Field Station during your regular section time. The main goal of these tests is to ensure that your sensors work in the field. The secondary goal is to evaluate your experimental data so you can make changes to ensure that you will be able to meet your experimental goals. Do not forget that seawater and lake water have very different salinities, conductivities, and densities. A neutrally buoyant AUV in pHake Lake will bob like a cork in the ocean.\nRemember that field deployments are often easier if you have a deployment checklist, so write one. Here is an example deployment checklist. The intent is that this checklist will prevent mistakes during your deployment; you’ll be thinking about enough things out in the field that you are very likely to forget about the details of the care and feeding of your sensor suite without a list to check against.\nYou will also submit an experimental plan. The plan must include the number of deployments you intend to do and the times and locations of those deployments. You should list the expected range of signals you expect to observe (based on theory or preliminary measurements) during the deployments. The document should show the planned robot trajectory for each deployment and discuss how the robot will be recovered (kayak, it comes back and we grab it, pool hook, etc.).\nThe main E80 Lab (Parsons B171) will be open from 12:30 pm - 1:00 pm this week so that you may retrieve your equipment. You must be at the side gate of Bernard Field Station by 1:15 pm; an instructor will meet the group at the gate at the start of your section. The teaching team will be out at BFS. This is one of the two chances that you’ll have to collect data in the field, and field data is required for your final report and presentation.\nTools and facilities will be available at BFS. A generator will be running power supplies, oscilloscopes, soldering irons, and other electronics. Multimeters and common hand tools will be available. Common supplies will be available too: heat shrink, glue, hot air guns, etc. A set of work tables will be set up beneath shaded tents. Sunscreen and water will be available during this deployment, but be sure you’ve eaten before you arrive. Faculty will announce a cancellation of the launch in the case of severe rain. Be sure to walk to the BFS gate in pairs and only cross at crosswalks.\nYou should show slides containing analyzed data at your checkoff. Be sure to overlay data sets that should be compared against one another and include analytical models to compare against on your plots.\nNOTE: It is possible to increase the logging time of your robot by increasing the FILE_BLOCK_COUNT value in Logger.h. This can help you to log data during long deployments."
  },
  {
    "objectID": "project/index.html#week-5-final-field-deployment-data",
    "href": "project/index.html#week-5-final-field-deployment-data",
    "title": "Project",
    "section": "",
    "text": "The fifth week is your final chance to test and verify your deployment checklist and fix any flaws that were discovered at pHake Lake. You will have your regular section time to rebuild, retest, and modify your system to get more meaningful data by adjusting such things as amplifier gains and offsets, sampling rate, sensor location on the AUV, and deployment times of your sensor. You will not have access to pHake Lake, but you will have access to the water tank during the week.\nThe final field deployment is on Saturday, 4/22/2023. We will take buses from Foothill Blvd just north of Parsons to Dana Point, leaving at 6:30 am sharp. If you miss the bus, you will have to find your own way to Dana Point.\nYou must have your robot and any supplies that your group plans to bring with you in order to be ready to load the bus. Attendance will be taken to ensure that the bus doesn’t leave anyone behind at the end of the day, so make sure you are counted in the morning and you tell us if you are leaving separately from the bus.\nSunscreen, water and some snack/lunch food (pizza, granola bars, chips) will be provided. The same facilities as the lake deployment will be available. In addition, we will provide freshwater buckets and rice for recovering flooded robots.\nFaculty will announce a cancellation of the launch in the case of severe rain. The launch may be rescheduled for Sunday in that case.\nVideos have been recorded to give students a sense of the following environment characteristics:\n\nWater outside the harbor: Exercise great care if you want to operate a robot here. Most AUVs will be trashed. Watch this video.\nCurrents close to docks: This video shows the worst I saw. In this video, no motors are turned on.\nNormal AUV navigation in the harbor: This video shows it is possible.\nWater clarity: Get an idea of what you can see by watching this video.\n\nYour deliverables are slides with updated data from your deployment, which you will share with your instructors during your checkoffs at Dana Point. You are not allowed to do any deployments after launch day, so use this week well!"
  },
  {
    "objectID": "project/index.html#week-6-data-analysis-and-preparation-for-report-and-presentation",
    "href": "project/index.html#week-6-data-analysis-and-preparation-for-report-and-presentation",
    "title": "Project",
    "section": "",
    "text": "There are no deliverables during the sixth week of the project, but professors will be available to help you analyze data from your robot deployments. The experiments that you may conduct are limited, and the spirit of the restrictions is that you may only conduct small, in-lab forensic experiments to figure out problems if things went wrong.\nSpecifically:\n\nYou may not take any measurements underwater; you’re confined to “lab.”\nYou may not build or measure new sensors: if it didn’t work during a deployment then we’re not interested in measurements from it.\n\nYou should focus your efforts on analyzing your data and forensic analysis of failures in your sensors. If a small experiment would verify a forensic assumption or explain a quirk in your data, then you should feel free to carry it out. (For example, a team once needed to see how their measurements from an LED varied with angle, and they took their still functional sensor outside and waved it around to take that measurement.) When in doubt, ask an instructor.\nYour report is due at the end of this week."
  },
  {
    "objectID": "project/index.html#final-presentation",
    "href": "project/index.html#final-presentation",
    "title": "Project",
    "section": "",
    "text": "On presentation day you will give a fifteen-minute, in-person presentation followed by ten minutes of questions and answers. This presentation should be aimed at a technically competent audience with diverse training backgrounds that is unfamiliar with the details of your project. (e.g.: The audience is a group of professional engineers from different disciplines.) You should imagine the presentation is being given to employers or peers at a conference, which means that you should hold yourself to high standards of professionalism: practice until the presentation is smooth and well-polished, think carefully about the story your visual aids are telling, ensure that the visual aids are readable and high quality, and dress in traditional business or business casual clothing. Every member of the team should participate in the presentation.\nHere is the rubric.\nSuccessful presentations often include discussions of:\n\nScience and/or engineering goals\nSensors and mechanical modifications to achieve those goals\nDesign process and calculations\nPre-deployment modeling and expected measurements\nData processing\nComparisons between modeling and measured data\nInterpretation of these results\nRecommendations for future work\n\nThe questions during the Q&A portion of your presentation will come from both the general technical audience and your instructors. They will range from straightforward to very detailed. Be sure to prepare by practicing fielding pointed questions and by cultivating a comprehensive understanding of your work. Preparing supplementary slides which you can deploy for common questions can help you during the Q&A.\nThe presentation schedule is available here. Please be at least ten minutes early to your presentation."
  },
  {
    "objectID": "project/index.html#final-report",
    "href": "project/index.html#final-report",
    "title": "Project",
    "section": "",
    "text": "Each team is responsible for submitting a report on their deployments in IEEE format. The report has a maximum length of ten pages including figures and appendices. Your purpose is to convey your experiments, your apparatus and your results. You should assume your audience is made of technical professionals of diverse backgrounds (i.e.: not all instructors of the course) who are unfamiliar with your specific project. You should write the report such that a reader could replicate your experiment and compare their results to yours. Note that this is a different audience than the video presentation. This rubric is the rubric which will be used to grade the reports.\nHere are a few tips for good report writing:\n\nThe main body is often most digestible if it is written in several sections. Which sections are included and the ordering of your will depend on the specifics of the experiment, but some common, important topics are provided in the modified rubric. If it is impossible to address every point in the modified rubric while staying inside the page limit then (1) make your writing more compact by using mathematical notation, tables or figures and (2) prioritize what is most important for your report.\nBe sure to follow the practices of scientific writing: use quantifiable descriptions instead of vague adjectives (“a 25% change” instead of a “a big change”), make sure all plots have labeled axes with units, make sure text in figures and tables is large enough to read, don’t use the first person (including cheats like “the team did X”) and minimize passive voice by making the experiment or artifact the subject of your sentences.\nMake sure to do some pre-writing to organize your text. Decide what topics you want in the report and where you want to put them before you start writing. Don’t talk about topics in the wrong sections or repeat yourself unnecessarily.\nDon’t forget that your writing style has a huge impact on how your work is received. Make a careful editing pass to be sure that each sentence says what you mean it to say. Then make a second editing pass for spelling, punctuation, common grammatical errors (especially tense mismatch, which is endemic), and gracefulness of language.\n\nHere are some examples of student reports and a well-written Tech Memo (c/o Prof. Spjut, don’t mind the non-IEEE formatting).\nA rough draft of your final report is due at XX. The final draft is due at XX."
  }
]