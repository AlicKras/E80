[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "E80: Experimental Engineering",
    "section": "",
    "text": "E80, Experimental Engineering, is a sophomore-level, semester-long required course, in which students conduct multiple experiments covering a number of engineering disciplines. These experiments are a training ground for a final project: a field deployment where student teams measure phenomena of their choice. Experimental Engineering is an essential part of the engineering curriculum at Harvey Mudd College, and has been offered as a course for over twenty years. Its predecessor E54 - which had more experiments and no field experience - was also offered for more than 20 years.\nThe primary purpose of the course is to teach basic instrumentation and measurement techniques, good lab report practice, technical report writing, analysis and presentation of data, the usage of experimental results for engineering design purposes, and the beginnings of professional practice. In 2008 the course was revamped to change the field experience to flying fully-instrumented model rockets. In 2017 the course was revamped again with yet another new field experience: deploying fully autonomous underwater robots."
  },
  {
    "objectID": "index.html#writing-and-reflection-for-all-sections---friday-115-p.m.---315-p.m",
    "href": "index.html#writing-and-reflection-for-all-sections---friday-115-p.m.---315-p.m",
    "title": "E80: Experimental Engineering",
    "section": "Writing and Reflection for all sections - Friday 1:15 p.m. - 3:15 p.m",
    "text": "Writing and Reflection for all sections - Friday 1:15 p.m. - 3:15 p.m\n\nSection 1 - Shan 2440\nSection 2 - Shan 2450\nSection 3 - Shan 2454\n\nAfter spring break: There will be open lab hours in Parsons B171 & B181 during the normally scheduled lab times.\nStudents may only work in the E80 labs when a professor, staff or a proctor opens the lab. Any team may use the equipment in the labs during a lab section, but teams that are scheduled for the section have top priority for the equipment."
  },
  {
    "objectID": "index.html#graded-submissions-breakdown",
    "href": "index.html#graded-submissions-breakdown",
    "title": "E80: Experimental Engineering",
    "section": "Graded Submissions Breakdown",
    "text": "Graded Submissions Breakdown\n\n\n\n\nItem\nWeight\n\n\n\n\nLecture Quizzes\n7%\n\n\nSurveys and Team Check-Ins\n6%\n\n\nLaboratory Submission Sheets\n21%\n\n\nLaboratory Writing Assignments\n18%\n\n\nTechnical Memorandum\n10%\n\n\nFinal Presentation\n10%\n\n\nFinal Report\n15%\n\n\nParticipation\n13%"
  },
  {
    "objectID": "index.html#graded-submissions-details",
    "href": "index.html#graded-submissions-details",
    "title": "E80: Experimental Engineering",
    "section": "Graded Submissions Details",
    "text": "Graded Submissions Details\n\nLecture Quizzes\n\nThere are seven video lecture sets that you are expected to watch. Each of these video sets has an associated online quiz. You must take each of these quizzes individually. You may not talk to other people in order to take the quiz, but they are open book, notes and internet. The one exception to the ‘no people’ rule is that you may speak with a professor to clarify ideas before you open the quiz associated with the lecture set.\nThese quizzes are completed on Canvas.\n\n\n\nSurveys and Team Check-Ins\n\nYou will be called upon to complete surveys at the beginning and end of the class, and each week, you will be asked to complete a team check-in (a quick peer evaluation) for the lab done that week. Completing each of the check-ins is worth 0.5% of your grade, and completing each of the longer surveys (including the final, extended check-in before the project) is worth 1% of your grade.\nThere are a total of 6 weekly check-ins (from weeks 2 through 7) and they are due each Friday at 3:30 pm.\n\n\n\nLaboratory Submission Sheets\n\nFor each of the seven labs in the class, you must submit a submission sheet that contains the data you collected during the lab. This submission sheet will be evaluated for correctness: it’s a way of assessing whether your experimental procedure was correct during the lab. Each submission sheet you provide will be worth 3% of your final grade, and you submit 7 submission sheets for a total of 21%.\nThese are group assignments are submitted on Canvas.\n\n\n\nLaboratory Writing Assignments\n\nFor six of the seven labs in the class (Labs 1-5 and Lab 7) you will be required to complete a writing assignment that is about 1 page in length. Prompts for the writing assignment are included on each lab page. The purpose of the writing assignments is to train you in specific aspects of scientific writing: making figures, using tables, equations, etc. You must complete a rough draft of each week’s writing assignment by noon on Friday, then you will review your peer’s drafts and edit your own during the writing and reflection section. The final draft must be submitted by the end of the writing and reflection section. Each writing assignment will be worth 3% of your final grade and you submit six assignments for a total of 18%.\nThese are individual assignments are submitted on Canvas\n\n\n\nTechnical Memorandum\n\nEach student will write an individual technical memorandum on Lab 6. See the Lab 6 page for more information and due dates. You must submit a tech memo to pass the class.\nTech memos are submitted on Canvas.\n\n\n\nFinal Presentation\n\nEach team will make a final presentation during Presentation Days, on Wednesday, May 1st, 2024. A detailed schedule will be posted ASAP. The presentation is 15-minutes long followed by a 10-minute Q&A session. The Final Presentation guidelines and rubric are found on the Final Project page.\nFinal presentations are submitted on Canvas\n\n\n\nFinal Report\n\nA final technical report will be submitted by each team on the results of the final AUV deployments. The report will be graded for both technical content and proper use of technical English Links to an external site. (see also this article Links to an external site.). A rough draft of your final report is due at 11:59 PM on 4/26/24. The final draft is due at 11:59 PM on 5/1/2024. The Final Report guidelines are found on the Final Project page.\nFinal reports are submitted on Canvas.\n\n\n\nParticipation\n\nThe instructors will assign you a participation grade which is determined by their in-lab observations, your peer evaluations, and your regular progress through the project checkoffs."
  },
  {
    "objectID": "index.html#end-of-semester-grades",
    "href": "index.html#end-of-semester-grades",
    "title": "E80: Experimental Engineering",
    "section": "End-of-Semester Grades",
    "text": "End-of-Semester Grades\nGrades will be awarded on a standard grading scale (93.3% is an A, 90% A-, 86.6% is a B+, etc …) based on your total individual score. The professors reserve the right to award grades more leniently than this grading standard."
  },
  {
    "objectID": "index.html#attendance-and-tardiness",
    "href": "index.html#attendance-and-tardiness",
    "title": "E80: Experimental Engineering",
    "section": "Attendance and Tardiness",
    "text": "Attendance and Tardiness\nAttendance will not be taken. Due dates will not be moved. It is up to the group to determine if each member of the team contributed their fair share of the work. For example, if you have a planned absence for a particular lab, you and your teammates should discuss how to shift more prelab work to the person who will be absent for the lab."
  },
  {
    "objectID": "index.html#late-work-policy",
    "href": "index.html#late-work-policy",
    "title": "E80: Experimental Engineering",
    "section": "Late Work Policy",
    "text": "Late Work Policy\nNo late work is accepted. You will receive no points for work submitted after deadlines. This is in keeping with good professional practice."
  },
  {
    "objectID": "index.html#incomplete-grade-policy",
    "href": "index.html#incomplete-grade-policy",
    "title": "E80: Experimental Engineering",
    "section": "Incomplete Grade Policy",
    "text": "Incomplete Grade Policy\nIncomplete grades will be granted only in rare circumstances and require the approval of the instructor."
  },
  {
    "objectID": "index.html#pre--and-post-lab-work-policy",
    "href": "index.html#pre--and-post-lab-work-policy",
    "title": "E80: Experimental Engineering",
    "section": "Pre- and Post-Lab Work Policy",
    "text": "Pre- and Post-Lab Work Policy\nEach week of the course before the final project can be divided into two periods: a period of time before you go to lab, called the pre-lab period, and a period of time between the lab and the writing and reflection section, called the post-lab period. The type of work you are allowed to pursue in these periods is restricted for three main reasons: (1) to simulate demands that can arise in real-world engineering, (2) to help students internalize the learning goals of the class, and (3) to help keep E80 to a smaller time footprint.\nYou are allowed to work in any way you would like on pre-lab as long as you do not touch any hardware. You may NOT collect data (for your experiment), manipulate or test hardware, populate a protoboard, or use the laboratory equipment outside of your lab hours.\nYou can spend as much or as little time desired on the pre-lab activities, but successful teams spend a lot of time and energy before the lab starts. You can often do all of the modeling and preparation for data manipulation prior to the lab. Activities such as examining and/or writing MATLAB, Arduino, or other code, asking how equipment works, doing relevant calculations or asking professors about the important parts of lab are encouraged. The only required pre-lab activity is preparing a work breakdown showing how your team will spend their four hours in lab. An example is detailed in Lab 1.\nThe only work that is allowed in the post-lab period is talking to your classmates and professors and individually preparing your draft for the writing and reflection period.\nYou may discuss concepts, results and the types of analysis you may still need to complete. You may NOT collect data, manipulate or test hardware, populate a protoboard, or use the laboratory equipment outside of lab. You may analyze data that you collected in lab in service of your report. All writing and analysis must be done individually; though you are free to speak to your team during the post-lab period, you may not share drafts, code, spreadsheets or other resources even among team members.\nAfter you have finished a lab, you may not alter or resubmit your submission sheet. You may not alter your report after the writing and reflection period. When in doubt about whether an activity is acceptable outside of lab, ask."
  },
  {
    "objectID": "index.html#cooperation-between-teams",
    "href": "index.html#cooperation-between-teams",
    "title": "E80: Experimental Engineering",
    "section": "Cooperation Between Teams",
    "text": "Cooperation Between Teams\nCooperation between teams is limited. The rules for each period of the week (pre-lab, during lab, post-lab and writing and reflection) are below. In this section, the word group will refer to a full team of students during a normal week or a sub-team of students during weeks where teams are split into sub-teams.\n\nPrelab: A group may discuss the lab with another group to make sure they are clear on concepts and understanding. Groups may not share code, writing, or documentation with other groups.\nDuring Lab: Groups cannot work together, discuss concepts or understanding, share data, share code, or share writing. Groups may arrange to swap hardware to debug and test defective parts of an experiment or device, but they should strongly consider elevating their concerns to an instructor if part swaps are necessary or if parts are being destroyed.\nPost-Lab: Groups may work with other groups in the same way as the prelab: they may discuss concepts and understanding (including talking about the scale of measured results from lab). However, each lab writeup must be prepared individually, so students may not share their analysis, code, figures or drafts with other students.\nWriting and Reflection: Groups are not permitted to work with other groups in any way.\n\nThese work restrictions are relaxed during the final project (after lab 7). Groups may work on their robot at any time and may discuss any aspect of their robots with one another (as if the prelab policy always applies)."
  },
  {
    "objectID": "index.html#sharing-rubrics",
    "href": "index.html#sharing-rubrics",
    "title": "E80: Experimental Engineering",
    "section": "Sharing Rubrics",
    "text": "Sharing Rubrics\nWe will be returning/releasing graded lab report rubrics throughout the semester. It is an HONOR CODE VIOLATION to share these rubrics with other teams or with students enrolled in future versions of E80."
  },
  {
    "objectID": "index.html#access-to-lab-during-the-final-project",
    "href": "index.html#access-to-lab-during-the-final-project",
    "title": "E80: Experimental Engineering",
    "section": "Access to Lab During the Final Project",
    "text": "Access to Lab During the Final Project\n\nStudents may work in the labs any time that it is open.\nStudents may only work in the E80 lab when a professor, staff member or proctor opens the lab.\nAny team may use the equipment in the E80 and electronics labs during a lab section, but teams which are scheduled for a section have top priority for the equipment."
  },
  {
    "objectID": "index.html#accessibility-and-accommodations",
    "href": "index.html#accessibility-and-accommodations",
    "title": "E80: Experimental Engineering",
    "section": "Accessibility and Accommodations",
    "text": "Accessibility and Accommodations\nHarvey Mudd College strives to make all learning experiences as accessible as possible. If you anticipate or experience academic barriers based on your disability (including mental health, chronic or temporary medical conditions). If you have any questions, please contact the Office of Accessible Education at access@g.hmc.edu. Students from the other Claremont Colleges should contact their home college’s disability officer. You also need to register with the Office of Disability Resources. to establish reasonable accommodations."
  },
  {
    "objectID": "index.html#academic-honestyplagiarism",
    "href": "index.html#academic-honestyplagiarism",
    "title": "E80: Experimental Engineering",
    "section": "Academic Honesty/Plagiarism",
    "text": "Academic Honesty/Plagiarism\nEach student will be responsible for observing HMC’s Honor code and abiding by the Standards of Conduct:\n\n\n“All members of ASHMC are responsible for maintaining their integrity and the integrity of the College community in all academic matters and in all affairs concerning the community.” –ASHMC Constitution\n\n\nThoughtful respect for the rights of others;\nHonesty and integrity in both academic and personal matters;\nResponsible behavior both on and off campus;\nAppropriate use of campus buildings and equipment, and;\nCompliance with College regulations and policies."
  },
  {
    "objectID": "lectures/index.html",
    "href": "lectures/index.html",
    "title": "Lectures",
    "section": "",
    "text": "Lecture content is delivered by videos. Each week you will be expected to watch a set of videos and then take a multiple-choice quiz on the material. Links to the videos, quizzes and supplemental material are provided below. The slides for the two whole-class meetings are also provided.\nNote that in weeks 6 and 7, the order of Lectures/quiz/Lab are not the same for everyone. Odd numbered teams are in Group A and Even numbered teams are in Group B. Please make sure prelab is done for the correct lab.\nQuizzes are due at noon (12 p.m.) on Mondays on Gradescope during the semester. The specific due dates for each group are listed below."
  },
  {
    "objectID": "lectures/index.html#week-1-e80-kickoff-meeting",
    "href": "lectures/index.html#week-1-e80-kickoff-meeting",
    "title": "Lectures",
    "section": "Week 1: E80 Kickoff meeting",
    "text": "Week 1: E80 Kickoff meeting\n\nKickoff Slides\nTeam Contract Template"
  },
  {
    "objectID": "lectures/index.html#week-2-statistics-for-experiments",
    "href": "lectures/index.html#week-2-statistics-for-experiments",
    "title": "Lectures",
    "section": "Week 2: Statistics for Experiments",
    "text": "Week 2: Statistics for Experiments\n\nStatistics for Experiments\nSlides\n\n\nBasic Demos\n\nBasics Spreadsheet\nBasics MATLAB\nLinear Regression Spreadsheet\n\n\n\nLinear Regression in MATLAB\n\nLinear Regression MATLAB\nSteinhart-hart-fitting.m\n\n\n\nAccelerometer Example\n\nAccelerometer Example\nNum. Deriv. Stat. Demo.\n\n\n\nSummary\n\nSummary Document\nStudent’s t Values Table"
  },
  {
    "objectID": "lectures/index.html#week-3-basics-of-electrical-measurements",
    "href": "lectures/index.html#week-3-basics-of-electrical-measurements",
    "title": "Lectures",
    "section": "Week 3: Basics of Electrical Measurements",
    "text": "Week 3: Basics of Electrical Measurements\n\nBasics of Electrical Measurements\nSlides\nAdditional Information on Calculating Error in Multimeter Measurements"
  },
  {
    "objectID": "lectures/index.html#week-4-operational-amplifiers",
    "href": "lectures/index.html#week-4-operational-amplifiers",
    "title": "Lectures",
    "section": "Week 4: Operational Amplifiers",
    "text": "Week 4: Operational Amplifiers\n\nOperational Amplifiers\nSlides\nAdditional Information on Op Amp impedance"
  },
  {
    "objectID": "lectures/index.html#week-5-temperature-measurements",
    "href": "lectures/index.html#week-5-temperature-measurements",
    "title": "Lectures",
    "section": "Week 5: Temperature Measurements",
    "text": "Week 5: Temperature Measurements\n\nTemperature Measurements\nSlides"
  },
  {
    "objectID": "lectures/index.html#week-6-underwater-acoustics-group-a-fluid-mechanics-group-b",
    "href": "lectures/index.html#week-6-underwater-acoustics-group-a-fluid-mechanics-group-b",
    "title": "Lectures",
    "section": "Week 6: Underwater Acoustics (Group A) & Fluid Mechanics (Group B)",
    "text": "Week 6: Underwater Acoustics (Group A) & Fluid Mechanics (Group B)\n\n\n\nGroup A\nGroup B\n\n\n\n\nUnderwater Acoustics\nFluid Mechanics\n\n\nSlides\nSlides"
  },
  {
    "objectID": "lectures/index.html#week-7-fluid-mechanics-group-a-underwater-acoustics-group-b",
    "href": "lectures/index.html#week-7-fluid-mechanics-group-a-underwater-acoustics-group-b",
    "title": "Lectures",
    "section": "Week 7: Fluid Mechanics (Group A) & Underwater Acoustics (Group B)",
    "text": "Week 7: Fluid Mechanics (Group A) & Underwater Acoustics (Group B)\n\n\n\nGroup A\nGroup B\n\n\n\n\nFluid Mechanics\nUnderwater Acoustics\n\n\nSlides\nSlides"
  },
  {
    "objectID": "lectures/index.html#week-8-autonomous-navigation",
    "href": "lectures/index.html#week-8-autonomous-navigation",
    "title": "Lectures",
    "section": "Week 8: Autonomous Navigation",
    "text": "Week 8: Autonomous Navigation\n\nAutonomous Navigation\nSlides"
  },
  {
    "objectID": "lectures/index.html#project-kickoff-meeting",
    "href": "lectures/index.html#project-kickoff-meeting",
    "title": "Lectures",
    "section": "Project Kickoff Meeting",
    "text": "Project Kickoff Meeting"
  },
  {
    "objectID": "labs/lab0/index.html",
    "href": "labs/lab0/index.html",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "",
    "text": "Team size: 4"
  },
  {
    "objectID": "labs/lab0/index.html#introduction",
    "href": "labs/lab0/index.html#introduction",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Introduction",
    "text": "Introduction\nIn the first week of E80, we have a regular lab scheduled, but there is no submission sheet. This is an opportunity for refreshing your skills and getting software and hardware setup for Labs 1 through 7.\nBy the end of this lab you should have:\n\nChosen and resized an E79 robot frame\nPrepared 3 waterproof motors, tested them, and attached them to the frame\nCharged your battery\nReviewed breadboarding and use of oscilloscope and power supply\nChecked out and soldered header pins to Teensy 4.0 (Limited supply - Do not lose/break/eat)\nSet up the Arduino IDE on your computer\nSet up Github Desktop on your computer\nDownloaded E80 source code\nSet up MATLAB\n\nAsk your instructor for any guidance including where to find tools. Don’t forget to clean up afterwards.\nAlthough less critical for this introduction lab, it will be imperative to get into the habit of distributing work across team members. Identify dependencies and work in parallel. Smells like pre-lab work."
  },
  {
    "objectID": "labs/lab0/index.html#frame-assembly",
    "href": "labs/lab0/index.html#frame-assembly",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Frame Assembly",
    "text": "Frame Assembly\nWe will be reusing the frames from the ROV’s you constructed during E79 but some modifications will need to be made in order to change your ROV(Remotely Controlled Vehicle) into an AUV(Autonomous Underwater Vehicle).\nTo fit the waterproof box that will house the motherboard, microcontroller, battery, additional sensors, etc., you will need to increase the width of the frame.\nObtain two additional 6.5’’ PVC pieces to replace the 4.5’’ ones. Don’t forget to drill the mounting holes for your vertical motor.\n\nYou will be mounting your AUV’s motors in the same manner as the three motor assembly in Practicum 1A Section 4.7.\nFor your two additional motors, ask an instructor if there are any spares that can be used. However, it is more than likely that you will need to construct at least one additional motor from scratch. Reference Practicum 1A Section 4.2 for assembly instructions.\nMake sure to test that all three of your motors pull less than 500mA before mounting them on the new frame."
  },
  {
    "objectID": "labs/lab0/index.html#battery",
    "href": "labs/lab0/index.html#battery",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Battery",
    "text": "Battery\nYour AUV will need power, and we provide that with a battery pack. The battery pack used in E80 is a 3000 mAh to 3500 mAh, 30 C, 11.1 V LiPo battery pack. Determine the maximum, minimum and nominal voltage outputs of these battery packs. Determine how many cells are in the battery pack. To charge the batteries, we will use a HiTec x1 Mini charger or a UP60AC multi charger. Read the manual on how to use the chargers.\nRequest a battery and a LiPo safe bag from an instructor and set up your battery for charging. ASK AN INSTRUCTOR OR PROCTOR TO CHECK YOUR RECHARGE SETUP. Here are some helpful images. Charge the battery up to its maximum voltage.\n\nNote: Make sure you plug the balancer cable into the balance lead socket (the black wire should align with the minus sign). Failure to do this may cause the battery to explode! Always use a LiPo-safe bag while charging."
  },
  {
    "objectID": "labs/lab0/index.html#breadboarding",
    "href": "labs/lab0/index.html#breadboarding",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Breadboarding",
    "text": "Breadboarding\nA few videos that may help explain how a breadboard works and how to use one can be found below. Note that internal connections of breadboards can break.\n\nSimple LED Lesson: The tutorial shows an LED circuit without a current limiting resistor. LED’s resistance decreases quickly as the forward voltage (the ”on” voltage) is exceeded. The LED then draws more and more current, overheats and eventually burns up. Sometimes literally. Please use one.\n\\[R=\\frac{(V_s-V_F)}{I_F}\\]\nwhere \\(V_S\\) is the supply voltage, and \\(V_F\\) and \\(I_F\\) are the foward voltage and current of the diode respectively and can be found on LED datasheet found here.\nBreadboard Internals\nHow to build a 555 Timer circuit. Here is a link with a circuit diagram. Here is a video on how the 555 works."
  },
  {
    "objectID": "labs/lab0/index.html#oscilloscope",
    "href": "labs/lab0/index.html#oscilloscope",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Oscilloscope",
    "text": "Oscilloscope\nYou will be using an oscilloscope for most E80 labs. If you need a refresher on how to use an oscilloscope, refer to Practicum 2B from E79."
  },
  {
    "objectID": "labs/lab0/index.html#soldering",
    "href": "labs/lab0/index.html#soldering",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Soldering",
    "text": "Soldering\nYou will need to checkout a Teensy from an instructor and solder header pins in order to easily interact with microcontroller on board. For the first half of this course you will only need to interact with the pins on either side of the Teensy; however, you may need to add additional pins during the project phase.\nTeensys are in limited supply. Practice boards are available if you need a refresher.\nA helpful video on how to solder can be found here. Remember to:\n\nNever leave your soldering iron unattended.\nTurn the iron off any time it isn’t used for more than 30 seconds. A good rule of thumb is “The iron is off unless you are holding it right now.”\nUse recently soaked sponge. Use a spray bottle to moisten. Never use the sink or water fountain.\nUse fume extractor: fumes from rosin in solder is a respiratory irritant.\nWash hands after handling solder – solder is 40% lead. Skin contact is harmless, but ingestion can occur with unwashed hands when eating, drinking, or smoking.\nAlways tin the tip of your iron before turning it off."
  },
  {
    "objectID": "labs/lab0/index.html#arduino",
    "href": "labs/lab0/index.html#arduino",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Arduino",
    "text": "Arduino\nYou should install Arduino on your own computer using the instructions in Section 3 of Lab 1. This kind of work, where you read a lab ahead of time and take preparatory actions that are in-keeping with the pre-lab policy on the home page, is called pre-lab work. Pre-lab work is extremely valuable, so setting up Arduino this way is a great first step into the course.\nRun through a few more Arduino tutorials: You will need to solder pins to the Teensy.\n\nBlinking lights on the Arduino board:\nHooking up an external LED"
  },
  {
    "objectID": "labs/lab0/index.html#github-desktop-setup",
    "href": "labs/lab0/index.html#github-desktop-setup",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Github Desktop Setup",
    "text": "Github Desktop Setup\nNext you need to configure Git on your machine. Git is a distributed version control system. This means you can download a local clone of a collection of source code files and easily track the changes that you make to your code. While we won’t be using all the features of git in E80, we will introduce you to the main features that will enable you to interact with the code base for your robot.\nNavigate to the Github page with the E80 codebase and scroll down to the section titled “Git Setup.” You can also follow the direct link here.\nAfter completing these instructions you should have a folder on your computer with all the E80 starter source code for the semester and have the Arduino IDE set up to easily access and load the provided sketchbooks."
  },
  {
    "objectID": "labs/lab0/index.html#matlab-access",
    "href": "labs/lab0/index.html#matlab-access",
    "title": "Lab 0: Tutorial and Skills Review",
    "section": "Matlab Access",
    "text": "Matlab Access\nYou will be using Matlab to help analyze and interact with data throughout this course.\nYou will first need to Visit the Matlab Portal and log in using your Mathworks account. If you do not have an account, create one using your username@hmc.edu credentials.\nTo acquire a local install of Matlab on your computer you can do the following:\n\nVisit the Matlab Portal.\nChoose to download the installer and select your operating system.\nRun the installer and log into your Mathworks account again.\nSelect “Individual” license and complete the installation process.\n\nIt is also possible to use an online copy of Matlab found here."
  },
  {
    "objectID": "labs/lab1/index.html",
    "href": "labs/lab1/index.html",
    "title": "Lab 1: Go Autonomous",
    "section": "",
    "text": "Team size: 4"
  },
  {
    "objectID": "labs/lab1/index.html#learning-objectives",
    "href": "labs/lab1/index.html#learning-objectives",
    "title": "Lab 1: Go Autonomous",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter successful completion of this lab, you will be able to…\n\nExplain the basic operation of your robot including details about the battery powering it.\nDemonstrate how to autonomously navigate your robot through an obstacle course.\nExplain the limitations and challenges of open loop control and articulate how a closed loop design addresses them"
  },
  {
    "objectID": "labs/lab1/index.html#introduction",
    "href": "labs/lab1/index.html#introduction",
    "title": "Lab 1: Go Autonomous",
    "section": "0. Introduction",
    "text": "0. Introduction\nThe objectives of this lab are to transform the ROV (remotely operated vehicle) used in E79 into an AUV (autonomous underwater vehicle). You might remember that cables ran between your control box and your E79 robot. The cables were cumbersome and limited the range of the robot. In E80, you will build an autonomous robot with an on-board microcontroller that controls its motors and collects data from its sensors. This lab should get you acquainted with the microcontroller, and in it you will build your first autonomous robot. In doing so you will come to understand your robot’s limitations when only open-loop control is used.\nWhile most AUVs built in Lab 1 will look the same, students will modify these vehicles as the course progresses so that by end of semester, each will be configured and equipped for unique ocean-sampling experiments.\nLab 1 is to be completed in teams of 4. Team members will be assigned by the instructor. It is up to the team to determine which parts of the lab are done by whom, and at what time during the four hours of lab time. A work breakdown showing what each team member intends to work on during the four-hour lab time is required for entry to the lab. The work breakdown will be submitted on paper to a lab instructor or proctor at the start of lab. Here is an example work breakdown. No hardware can be used outside of lab hours and no real data can be processed outside of lab hours. However, writing software or processing simulated data sets is allowed and, in fact, encouraged during the pre-lab period.\nA submission sheet is due at the end of the 4-hour lab period. The submission sheet must be uploaded before the end of your lab session at 5:15 pm. Note that only ONE member of each team should access and submit the submission sheet. It is the responsibility of that team member to add the rest of the team’s names to the submission sheet.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet on can be found here.\nYou will work with some expensive hardware in this lab and in many future labs. This hardware needs to be explicitly checked out from a professor or proctor so that we can track where it is. If any hardware that you checked out breaks, you will need to request a replacement from a professor. You make this request by filling out an error report (paper copies will be in lab). This report needs to be well thought out; professors will reject reports that don’t represent sufficient testing or thought. You will keep this hardware with you throughout the semester in your storage box."
  },
  {
    "objectID": "labs/lab1/index.html#battery",
    "href": "labs/lab1/index.html#battery",
    "title": "Lab 1: Go Autonomous",
    "section": "1. Battery",
    "text": "1. Battery\nYour AUV will need power, and we provide that with a battery pack. The battery pack used in E80 is a 3000 mAh to 3500 mAh, 30 C, 11.1 V LiPo battery pack. Determine the maximum, minimum and nominal voltage outputs of these battery packs. Determine how many cells are in the battery pack. To charge the batteries, we will use a HiTec x1 Mini charger or a UP60AC multi charger. Read the manual on how to use the chargers.\nRequest a battery and a LiPo safe bag from an instructor. You will need to check out and set up your battery for charging as soon as you start the lab. ASK AN INSTRUCTOR OR PROCTOR TO CHECK YOUR RECHARGE SETUP. Here are some helpful images. Charge the battery up to its nominal voltage, NOT its maximum voltage, which means that you will need to periodically monitor the voltage on the battery and stop the charging at the appropriate time. You will normally charge the battery to its maximum value, but for this lab, you don’t have the time.\n\nNote: Make sure you plug the balancer cable into the balance lead socket (the black wire should align with the minus sign). Failure to do this may cause the battery to explode! Always use a LiPo-safe bag while charging.\n\n\n\nNote: You can use the power supply on your work bench to power your board without your battery. However, the bench power supply can’t provide nearly as much current as the battery. Your board has a screw terminal labeled P.S. which can be connected to the power supply. The power supply switch must be set in the P.S. direction for this screw terminal to power the board. Be very careful to get power and ground connections to the P.S. screw terminal correct by following the silkscreen V+ and GND labels on the board."
  },
  {
    "objectID": "labs/lab1/index.html#motherboard-assembly",
    "href": "labs/lab1/index.html#motherboard-assembly",
    "title": "Lab 1: Go Autonomous",
    "section": "2. Motherboard Assembly",
    "text": "2. Motherboard Assembly\nFor E80, a motherboard has been designed to interface the major electrical components of your AUV. Familiarize yourself with the components on the motherboard by reading the Introduction to the E80 Motherboard document. You will add some necessary components to the board in Lab 1. Use this motherboard assembly document as a guide and add the components. Checkout your motherboard from a professor and find the other parts you need in the parts rack on the central table. For reference, the schematic for the motherboard is here , the layout is here , and KiCAD design files are here.\nBefore you begin assembly, write your section number and team number and board version on your board.  This will be version 1 for all of you, you will increment your version if, for example, your board blows up and you have to make a new one.\nThere are two ways that you can damage your motherboard irreparably during this process. One is soldering components in the wrong position or orientation (e.g., screw terminals facing inward or header on the back side of the board), which is very difficult to rework. Double check that you are using the correct header and try fitting all the pieces together before soldering. The other is attaching your battery or power supply leads backwards or soldering the red and black wires to the incorrect terminals on the motherboard. Have an instructor or proctor check your battery connector. Make sure to heed the warnings in the assembly guide.\nCover the back of your motherboard with insulating foam sheet using theseinstructions to prevent inadvertent short circuits when you set it down. Also, find a sharpie and color the GND side of your P.S. screw black, so that you don’t forget the polarity of the connector."
  },
  {
    "objectID": "labs/lab1/index.html#arduino-programming",
    "href": "labs/lab1/index.html#arduino-programming",
    "title": "Lab 1: Go Autonomous",
    "section": "3. Arduino Programming",
    "text": "3. Arduino Programming\nYou will use the Arduino language to program your microcontroller, the Teensy 4.0. If your computer doesn’t have Arduino software installed, go to the Arduino download page and download the latest version of the Arduino software (2.0.3 as of this writing). Since version 2.0.0, the Teensy is supported directly in the Arduino software. Follow the instructions here to add the required board support packages to the Arduino IDE. The Teensy bootloader uploads Arduino programs (aka sketches) onto the Teensy. Note you must use a micro USB cable (see image here) to connect the Teensy to your computer before you can upload sketches.\nIt is advisable to ensure that you can compile and upload the RGB LED example to the Teensy.\n\nThe RGB LED example can be found in File -&gt; Examples -&gt; 0.1 Basics -&gt; Blink.\nFollow the instructions here to compile and upload to the Teensy\n\nNote: you will not have a Teensy for pre-lab, but you can download the necessary software, go through the tutorial and try modifying and compiling the code.\nIf you have not done so yet, complete the Github Desktop Setup in Lab 0 and clone the E80 codebase.\nMake sure to change the Arduino IDE Sketchbook location to the folder you just downloaded under File-&gt;Preferences. Open E80_Lab_01.ino. This sketch will be used as starter code to send PWM signals to your motors and to log the output on the SD card. Confirm that you can compile and upload the starter code to your Teensy.\nThe Teensy creates two files to save data every time it runs: an INF file which contains text and a BIN file which contains your measured data in a binary format. Special programs are required to decode the binary data, and those programs also depend on having a matching INF file. We provide a MATLAB script for reading SD card data: logreader.m. These links provide sample INF and sample BIN files. The sample file is very noisy, so it can’t be used to find answers to the questions in Section 4.\nFinally, find the loop() function in your sketch where you set the values of the PWM signals sent to motors. Modify the sketch to turn each motor on for 2 seconds in the following sequence: No motors on for 2 seconds, vertical motor on for 2 seconds, no motors on for 2 seconds, port motor on for two seconds, no motors on for 2 seconds, starboard motor on for 2 seconds, no motors on. Upload this code to your Teensy. You will test this code in section 4."
  },
  {
    "objectID": "labs/lab1/index.html#motherboard-validation-and-imu-calibration-and-error-measurement",
    "href": "labs/lab1/index.html#motherboard-validation-and-imu-calibration-and-error-measurement",
    "title": "Lab 1: Go Autonomous",
    "section": "4. Motherboard Validation and IMU Calibration and Error Measurement",
    "text": "4. Motherboard Validation and IMU Calibration and Error Measurement\nYour motherboard has a circuit on it called an inertial measurement unit, specifically an LSM303AGRTR , which allows you to measure acceleration and magnetic fields. This is a very useful sensor that we will explore more later in the course. However, you need to understand the output units of the sensor and the error properties of the data it reports to use the accelerometer for this lab. You also need to be sure that your motherboard is working, and testing the accelerometer is a good way to check the motherboard.\nSign out an SD card from an instructor. Put your Teensy and your SD card into your motherboard and program the Teensy with your code from Section 3 if you have not already done so. Provide power to the Teensy using either your battery or the power supply terminals (be careful with the polarity!). Several lights should turn on, including PWR LED, the IMU LED, the SD LED, and a small blinking LED on top of the Teensy. You have the option of plugging in your USB cable so you can use the serial monitor to watch the Teensy’s serial output as it runs. Please be very careful when connecting or disconnecting the micro USB cable to the Teensy!! Pull or push laterally while holding down the connector with your other hand. They are fragile and can be pulled off the board easily. You can put your Teensy into programmer mode manually by pressing the button on top of the Teensy. Note that this is not a reset button but only a way to recover from bad code. The easiest way to reset your board is to power cycle it.\nRemove power from your board (you do not need to remove the USB cable if it’s plugged in). Take out the SD card and put it into your computer. Take the INF and BIN files off of the SD card and read them. Verify that you are saving the following data to your SD card: acceleration values from your accelerometer, magnetic field strengths from your magnetometer, roll, pitch and yaw angles calculated from your IMU measurements, and motor PWM values.\nUse the acceleration due to gravity to figure out the size of one ‘accelerometer unit’ in your saved data: i.e.: if your accelerometer reports a value of 1, how many m/s^2 of acceleration is the accelerometer experiencing? Figure out the value the accelerometer reports when it is experiencing zero acceleration on each axis. Take ten seconds of accelerometer data and determine the mean, the standard deviation, the standard error, and the 95% confidence bounds for a static acceleration measurement in the z direction.\nVerify that your motherboard can drive motors by attaching motors to motor ports A, B and C. If your motors are not yet ready, you may measure the voltages at screw terminals A, B and C to observe whether they are being correctly applied by your software."
  },
  {
    "objectID": "labs/lab1/index.html#penetrator-and-motor-assembly",
    "href": "labs/lab1/index.html#penetrator-and-motor-assembly",
    "title": "Lab 1: Go Autonomous",
    "section": "5. Penetrator and Motor Assembly",
    "text": "5. Penetrator and Motor Assembly\nIn E80 we use special bolts to make waterproof electrical connections across a robot, and we refer to them as penetrators.\n\n\n\n\n\n\n(a) Penetrator bolt.\n\n\n\n\n\n(b) Penetrator nut and gasket.\n\n\n\n\n\n(c) Project box with penetrator bolt assembly.\n\n\n\nFigure 1: Project box and penetrator bolt details\n\n\nNotice that it has three sets of twisted pair encased in epoxy in the center. The penetrator bolts are usually used with a nut and rubber washer in order to make a waterproof seal on a project box. This image shows two important details about using penetrator bolts: the threads must point INTO the box and the washer must be OUTSIDE the box.\nThese penetrators have six wires passing through them because your AUV will use three motors. Look through the stock of motors and select three motors. You may cut them off the used E79 umbilicals if the standalone motor box does not have any useful motors for you. If necessary, you can prep new motors as you did in E79. Instructions can be found here. Test your motors using a power supply to make sure they work:\n\nIf the current draw during this test is more than 500 mA, then the friction in your motor is likely to severely limit your top speed; consider debugging it.\n\nSelecting motors that have similar current draws may simplify your software because the motors will exert similar thrusts at the same level of applied PWM.\nMake sure your motors still work when they are submerged in water.\n\nSolder the leads of your three motors to the twisted pair on the non-threaded side of your penetrator bolt (because the motors will be OUTSIDE of your box). Waterproof your solder joints with heat shrink tubing (do you need to put the heat shrink over your wires before or after you solder your motor?). Test that all three motors work when the waterproofed solder joints are underwater."
  },
  {
    "objectID": "labs/lab1/index.html#auv-assembly",
    "href": "labs/lab1/index.html#auv-assembly",
    "title": "Lab 1: Go Autonomous",
    "section": "6. AUV Assembly",
    "text": "6. AUV Assembly\nFind a waterproof box on the central table of the lab. Attach your penetrator and motor assembly to the box (remember threads are in and washer is on the outside). Hold your box and penetrator combination underwater to check for leaks. DON’T perform this test with any electronics or batteries in the box. If you find leaks, fix them before proceeding.\nDry your box and place your battery, motherboard and Teensy into the box. Use Velcro to attach the box to a PVC robot frame. Make sure to select a frame that has a plastic mesh on the bottom for carrying payloads. If you need to add a plastic mesh, use zip ties to secure it to the robot frame.\nYou will need to add ballast to your robot to keep it close to neutrally buoyant. For now, you will add mass to the INSIDE of your waterproof box, and you must determine how much mass to add. To do this, it helps to know the mass of your robot, and that the robot (including motors and two 1.25’’ foam blocks, but not including the watertight box) has a buoyancy force measured to be approximately 10 N.\nWhen selecting weights for ballasting be mindful that their distribution inside of your payload box could affect the resting pitch, yaw or roll of the robot. It may be useful to adjust the resting buoyancy, pitch, yaw, and roll of your robot with the waterproof box before attempting the obstacle course in section 7.\nMany of the weights we use are metal, so they can short the back of your motherboard. Make sure the back of your motherboard is covered with insulating foam or electrical tape before setting it on top of your ballast. We also recommend wrapping your ballast in plastic wrap."
  },
  {
    "objectID": "labs/lab1/index.html#open-loop-control-navigation",
    "href": "labs/lab1/index.html#open-loop-control-navigation",
    "title": "Lab 1: Go Autonomous",
    "section": "7. Open Loop Control Navigation",
    "text": "7. Open Loop Control Navigation\nA simple obstacle course will be set up in the test tank. The course will require your robot to navigate through 3 hoops as pictured here, here, and here.\nModify the Arduino test program from step 3 to direct your robot to fly through the course so that it ends within the red hoop (3). You can assume your AUV can start in the middle of the yellow hoop (1). Since we don’t have absolute measurements of the AUV position, no closed-loop control is used here. Instead, write a sequence of motor actions for the AUV to follow. Be sure to test your code with your robot ahead of time, in air, before you visit the test tank room. It is important to know how to control each motor, including which direction each motor turns. Make sure your code accounts for the time you will need to seal up the waterproof box, attach it to the robot frame, and position it in the water. You will only have 5 attempts in the test tank room."
  },
  {
    "objectID": "labs/lab1/index.html#acceleration-and-orientation-data",
    "href": "labs/lab1/index.html#acceleration-and-orientation-data",
    "title": "Lab 1: Go Autonomous",
    "section": "8. Acceleration and Orientation Data",
    "text": "8. Acceleration and Orientation Data\nPlot the AUV acceleration data as a function of sample number from the experiment in step 7. On a different figure, plot the AUV orientation data as a function of sample number. Confirm that positive acceleration is in the correct direction. Confirm qualitatively whether the measured acceleration data matches your expectations, and quantitatively compare the non-spurious peaks of your acceleration against an analytical model of the robot. Use the analytical model of the E79 robot as a starting point. The thrust curves linked here may be helpful in your modeling effort."
  },
  {
    "objectID": "labs/lab1/index.html#deliverables",
    "href": "labs/lab1/index.html#deliverables",
    "title": "Lab 1: Go Autonomous",
    "section": "9. Deliverables",
    "text": "9. Deliverables\nAll labs require two submissions per group. The first submission is a submission sheet in which specific data must be shown. The submission sheet is due at the end of the 4-hour lab period and must be uploaded before the end of your lab session at 5:15 pm. Note that only ONE member of each team should access and submit the submission sheet. It is the responsibility of that team member to add the rest of the team’s names to the submission sheet.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here.\nThe second submission is a writing assignment, usually around 1 page in length. Each writing assignment will be based on a prompt and must be completed by each student individually; no collaboration is allowed on the text or figures in these assignments, though you may speak among yourselves about concepts in keeping with the collaboration rules of the course. A first draft of the writing assignment must be uploaded by noon on Friday, and you need to bring a printed copy of your draft to the writing and reflection section on Friday at 1:15 pm. During the first hour of the writing and reflection, you will engage in a peer editing exercise. The second hour of the Writing and Reflection section is reserved for you to edit your draft to produce a final draft of the writing assignment. This final draft must be uploaded before the end of the Writing and Reflection section on Friday at 3:15 pm. The prompt and guided peer feedback worksheet for Lab 1 are linked, note that the rubric is included in the prompt.\nRecall that no late work is accepted, we will grade whatever is submitted at the deadlines. Since multiple submissions are allowed, you may want to submit a less-than-perfect draft early as insurance against missing the deadline.\nAfter the writing and reflection section at the end of each week every person (not just one person per team) must submit a team dynamics check-in survey. These are part of your participation grade. The survey link can be found on the home page.\nIMPORTANT CLEANUP: Please return the battery charger and ballast weights to the center table. These will be shared among the different lab sections. Also, put your board, Teensy, penetrator bolt (with motors), battery and robot frame in your labelled Tupperware container in the cupboard. Please return SD card and SD card reader to the proctor or Lynn."
  },
  {
    "objectID": "labs/lab_overview/index.html",
    "href": "labs/lab_overview/index.html",
    "title": "Lab Overview",
    "section": "",
    "text": "Lab manuals are linked here."
  },
  {
    "objectID": "labs/lab_overview/index.html#general-rules",
    "href": "labs/lab_overview/index.html#general-rules",
    "title": "Lab Overview",
    "section": "General rules",
    "text": "General rules\n\nNo eating or drinking in lab. If necessary you may leave lab, wash your hands, eat and/or drink something outside the lab, wash your hands, return to lab.\nKnow the location of fire extinguisher, eye wash, safety shower and quickest escape route.\nNotify instructor immediately after any injury, fire, spills or breakage.\nClean lab bench and turn off equipment before leaving. Leave the bench power on.\nElectricity and water DO NOT MIX –a lot of water is involved in E80 – be mindful at all times."
  },
  {
    "objectID": "labs/lab_overview/index.html#proper-attire",
    "href": "labs/lab_overview/index.html#proper-attire",
    "title": "Lab Overview",
    "section": "Proper attire",
    "text": "Proper attire\n\nClosed-toe shoes\nShort sleeves preferred, rolled-up long sleeves acceptable\nLong pants\nNo dangling jewelry – no rings, bracelets, necklaces or earrings\nLoose clothing must be secured away from work (including hoody draw strings)\nLong hair pulled back and secured\nFor field experiences:\n\nLocation-appropriate footwear and clothing\nAppropriate PPE (including floatation devices for boats)\nSunscreen\nHydration"
  },
  {
    "objectID": "labs/lab_overview/index.html#chemical-safety-epoxies-and-ca-cyanoacrylate-aka-superglue",
    "href": "labs/lab_overview/index.html#chemical-safety-epoxies-and-ca-cyanoacrylate-aka-superglue",
    "title": "Lab Overview",
    "section": "Chemical safety: epoxies and CA (CyanoAcrylate aka superglue)",
    "text": "Chemical safety: epoxies and CA (CyanoAcrylate aka superglue)\n\nSafety goggles\nGloves\nIf procedure emits fumes, then must be done in a fume hood or out of doors away from buildings"
  },
  {
    "objectID": "labs/lab_overview/index.html#soldering",
    "href": "labs/lab_overview/index.html#soldering",
    "title": "Lab Overview",
    "section": "Soldering",
    "text": "Soldering\n\nIron must be turned off when not in your hand.\nUse recently soaked sponge. Use spray bottle to moisten. Never use sink or water fountain.\nUse fume extractor: fume from rosin in solder is a respiratory irritant.\nWash hands after handling solder – solder is 40% lead. Skin contact is harmless, but ingestion can occur with unwashed hands when eating, drinking, or smoking.\n\nHarvey Mudd College strives to make all learning experiences as accessible as possible. If you anticipate or experience academic barriers based on your disability (including mental health, chronic or temporary medical conditions). If you have any questions, please contact the Office of Accessible Education at access@g.hmc.edu. Students from the other Claremont Colleges should contact their home college’s disability officer. You also need to register with the Office of Disability Resources. to establish reasonable accommodations."
  },
  {
    "objectID": "labs/lab2/index.html",
    "href": "labs/lab2/index.html",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "",
    "text": "Team size: 2"
  },
  {
    "objectID": "labs/lab2/index.html#learning-objectives",
    "href": "labs/lab2/index.html#learning-objectives",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter successful completion of this lab, you will be able to…\n\nDemonstrate how to use electrical test equipment such as a multimeter, function generator, and oscilloscope.\nExplain why oscilloscope probes have 1X and 10X settings and when each setting should be used.\nDemonstrate error analysis techniques using resistive voltage dividers and voltage measurements with electrical measurement equipment."
  },
  {
    "objectID": "labs/lab2/index.html#introduction",
    "href": "labs/lab2/index.html#introduction",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "0. Introduction",
    "text": "0. Introduction\nIn this lab you review the use of electrical test equipment, gain experience with advanced features of some equipment, calculate the uncertainty in a measurement based on its components, and apply equivalent circuit models (input/output impedance models) to a variety of circuits, drivers and loads: notably op-amp buffers and voltage dividers. Goals of the lab are that you learn about non-idealities of your measurement equipment, especially source and load impedance effects, and how they affect your measurements. Another goal of the lab is for you to practice error analysis.\nThis lab will be completed in sub-teams of two students. Before the lab you must decide how you will split your team. Two other labs will also be completed as sub-teams, and you must use a different sub-team for each of these labs. Each sub-team will be responsible for its own version of the lab’s deliverables. Pre-lab work may still be carried out with your whole team, but be sure each sub-team is ready to tackle the in-lab work independently. Between lab and Friday (the post-lab period) the two sub-teams in a team may discuss their experiences, but the sub-teams may not share data, code or text with one another.\nEven though your team will be split into two sub-teams, you will only have access to one motherboard/Teensy assembly. Plan your work carefully so that you share it equitably.\nA work breakdown showing what each sub-team member intends to work on during the four hour lab time is required for entry to the lab. The work breakdown will be submitted on paper to the lab instructor or proctor at the start of lab. Here is an example work breakdown. No hardware can be used outside of lab hours and no real data can be processed outside of lab hours. However, writing software or processing simulated data sets is allowed and, in fact, encouraged during the pre-lab period.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here.\nThere are a variety of references which might make your life easier. Two documents from previous iterations of E80 Auntie Spark’s Guide to breadboards and Uncle Sparky’s guide to Voltage, Current, and Resistance Measurements are recommended in particular."
  },
  {
    "objectID": "labs/lab2/index.html#logging-analog-data-with-the-teensy",
    "href": "labs/lab2/index.html#logging-analog-data-with-the-teensy",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "1. Logging Analog Data with the Teensy",
    "text": "1. Logging Analog Data with the Teensy\nThe Teensy contains an analog to digital converter which can measure analog signals on many of its pins. In this section you will take your first analog measurement with the Teensy. Teensy measurements will be used frequently in this lab and the next. Always connect to your Teensy pins through the E80 motherboard, which has protection circuits designed to prevent damage to the Teensy.\nYou will use two different pieces of software to log data from the Teensy in this section: A program on your Teensy (using Arduino code) which will sample data and a MATLAB program which will interpret serial data sent by your Teensy. These programs record input from input A0, which is identified on the silk screen on the back of your motherboard. Attach a wire to the empty hole on your motherboard which is connected to this pin (male-male jumper wires work OK) but DO NOT solder it in place. We will solder a header there later, and desoldering a wire will make that more difficult. You will also need a connection between your motherboard ground and your signal generator ground.\nConnect a 200 Hz, 1 Vpp, +0.4 V offset signal from a signal generator to the analog pin and run the following sketch on your Teensy: matlablogging.ino. While matlablogging.ino is running and the Teensy is connected by USB, use matlablogging.m to receive a vector of data from the Teensy.\nYou may need to modify the function so that it points at the COM port which is correct for your Teensy. The MATLAB program can’t access your COM port if the Arduino serial monitor is open, so be sure that it is closed. Sometimes COM ports get stuck in unusual states and MATLAB can’t access them. Closing all of your programs will usually fix this problem.\nWhat is the sample rate achieved by matlablogging.ino? What is the relation between the values recorded by matlablogging.ino and the voltage applied to the pin? (i.e.: how many volts is one “Teensy Unit”?)\nWhat happens when the voltage on the Teensy pin is less than zero volts?\nNow change your input signal such that you are measuring a 175 kHz, 1 Vpp, +0.6 V offset signal. What signal does your Teensy observe? Why? (Hint: you may need to think back to some parts of E79 to figure this one out.)\nFOR MACs:\n\nThe serial port (COM) can be found by going to Tools -&gt; Ports in the Arduino IDE or by calling ls /dev/ in the terminal and looking for a file of the form: /dev/tty.XYZABCDEF\nIn the matlablogging.ino file, if you don’t see any output on the serial port, you may need to comment out these two lines and re-upload the program to the Teensy\nwhile(!Serial.available()) {\nSerial.println(“Waiting…”); }"
  },
  {
    "objectID": "labs/lab2/index.html#instrumentation-and-connectors",
    "href": "labs/lab2/index.html#instrumentation-and-connectors",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "2. Instrumentation and Connectors",
    "text": "2. Instrumentation and Connectors\nRead the manuals of the:\n\nTeensy\nElenco multimeter, oscilloscope\n(Agilent 2024A and spec sheet)\nPower supply: (Keysight E3630A).\n\nFill out the following information:\n\nRecord the output impedance for the waveform generator on the oscilloscope, and the input impedances for the Elenco multimeter (both AC Volts and DC Volts), the Teensy analog pin and the oscilloscope. The impedance may not be called the impedance in the manuals. Ask the proctors or professors if you can’t find them. For the power supply, record the maximum current out for each voltage range. Do not proceed with the rest of the lab until you have all of these values recorded correctly. You need this information for the rest of the lab.\nRecord the accuracy or uncertainty of the measurements on the Teensy, Elenco multimeter, oscilloscope, and meter on the power supply and fill in the table on the submission sheet. Verify with a proctor or professor that you understand what the accuracy specifications mean, for example, what do rdg and dgt in ±(1.5% rdg + 1 dgt) mean? They most likely don’t mean what you expect. Use these accuracies or uncertainties when reporting measured quantities throughout the lab.\nTurn on the power supply. Make sure TRACKING RATIO is on FIXED. Set the METER switch to +6 V. Adjust the +6 V knob until the meter reads 5 V. Set the Elenco to 40 V DC. With the Elenco measure (and record) the voltage between +6 V and COM, between +6 V and earth ground (the small symbol with diagonal lines on the bottom), and between COM and earth ground. Explain your measurement results while answering the following questions (when in doubt ask a professor or proctor):\n\nWhat does “COM” mean?\nWhat does “earth ground” mean?\nWould you ever connect “COM” and “earth ground” (a sketch may help)?\nWould you ever NOT connect “COM” and “earth ground” (a sketch may help)?"
  },
  {
    "objectID": "labs/lab2/index.html#output-load-setting-of-signal-generators-and-amplitude-measurements",
    "href": "labs/lab2/index.html#output-load-setting-of-signal-generators-and-amplitude-measurements",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "3. Output Load Setting of Signal Generators and Amplitude Measurements",
    "text": "3. Output Load Setting of Signal Generators and Amplitude Measurements\nThe purpose of this section is to determine the purpose of the Output Load setting on the Oscilloscope Signal Generator and/or the OUT TERM setting on the signal generator. They both behave in exactly the same way, and when used incorrectly, you will find a factor of 2 or 1/2 in your measurements that you can’t explain.\nWe strongly recommend that you use the function generator built into your oscilloscope but bench top signal generators are available in the electronics lab.\nBefore you begin, make sure that the “Output Load” setting of your waveform generator is set to High-Z. Instructions adjusting the output load setting on both the oscilloscope and bench top signal generators are here. Set the frequency of your signal generator to 200 Hz, the amplitude to 0.6 Vpp, and the offset to 0.0 V.\n\nWhat is the amplitude of the sine wave as measured by the Teensy logging pin, Elenco, and oscilloscope? Did you have to do any calculations to convert the number reported by the instrument into an amplitude? You may have to review the differences between Vp, Vpp, and Vrms. Are the measurement accuracies within the manufacturer’s specifications?\nDo not adjust the amplitude (don’t turn any of the knobs or push any of the buttons that affect amplitude), but reset “Output Load” to “50 Ω” or “OUT TERM” to “50 OHM,” record the Vpp displayed on the oscilloscope waveform generator or stand-alone function generator and repeat your measurements with the Elenco and ’scope. What are the relationships among the amplitude displayed on the waveform or function generator and the amplitude displayed by the meter and ’scope?\nMeasure and record the resistance of a 50 Ohm BNC Terminator. It should be close to the nominal 50 Ω.\nKeep the waveform or function generator settings as those in question 2 of this section. Connect its output signal to a 50 Ohm BNC Terminator as shown. A BNC Tee makes the connection trivial. Measure the voltage V0 across the terminator with the Elenco and ’scope. Explain the purpose of the “Output Load” or “OUT TERM” setting. Confirm your explanation with a professor or proctor.\n\nBe sure to set the output load of your signal generator back to High-Z before proceeding with the lab."
  },
  {
    "objectID": "labs/lab2/index.html#oscilloscope-probes",
    "href": "labs/lab2/index.html#oscilloscope-probes",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "4. Oscilloscope Probes",
    "text": "4. Oscilloscope Probes\nIn this section you will investigate the difference between 1X and 10X oscilloscope probes and explore why these probes might be used. Unusually, we’ll give you a hint at the answer: the output impedance of the oscilloscope probe forms a resistive divider with the input impedance of the oscilloscope itself. Knowing this should make the calculations (with uncertainty) for questions 2, 3 and 4 easier.\nAs alluded to above, oscilloscope probes come typically with two settings: 1X and 10X. Oscilloscopes are designed to match these settings to make it easier to read out results, so oscilloscopes usually permit you to enter the setting of the probe you are currently using. For example, our oscilloscopes permit you to enter any setting (in a 2, 5, 10 order) from 0.1X to 100X. To enter the probe setting, push the channel button for the channel you’re using, e.g., push the (1) button for channel 1. Then push the button below the Probe menu item. Rotate the settings knob until the desired setting is displayed and push the settings knob.\nWe recommend you normally use the grayish probes kept in the drawer beneath the work surface. They are 10X probes and can’t be set to any other setting. However, for this section, find one of the black probes that can be switched between 1X and 10X.\n\nMeasure (don’t just look it up) and record the DC impedance (the resistance) of the scope probes on both 1X and 10X settings (most easily accomplished by connecting the probe tip to the ground clip with a wire and connecting the probe BNC connector to a BNC Female to Double Banana Plug adaptor and then directly into the Elenco), and then answer questions 2 through 4. Don’t measure the input impedance of the scope itself, recall you looked it up for Section 2.\nWhat is the input impedance of the scope (meaning the scope and probe together, not just the probe by itself) when the probe is on the 1X setting?\nWhat is the input impedance of the scope (meaning the scope and probe together, not just the probe by itself) when the probe is on the 10X setting?\nDoes the 10X setting have any effect on the measured voltage? Why?\n\nUnless you have a _very _specific need to do something else, always make oscilloscope measurements with a 10X scope probe, and with the scope channel programmed to 10X probe mode. Never use an oscilloscope probe to feed a signal from the signal generator (either on the oscilloscope or stand alone) to a circuit."
  },
  {
    "objectID": "labs/lab2/index.html#source-and-load-impedance",
    "href": "labs/lab2/index.html#source-and-load-impedance",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "5. Source and Load Impedance",
    "text": "5. Source and Load Impedance\nThis section is to give you practice in accounting for both source and load impedances and for doing error propagation. Each component, such as a resistor, has an uncertainty specified by the manufacturer, such as ±1% for resistors and ±10% for capacitors. Each generating instrument or measurement instrument has a specified accuracy, which you looked up in Section 2. For the circuit shown here, and for each of the values of Z1 and Z2 and the measuring instruments in the table here, calculate the expected output voltages with confidence intervals accounting for both components and instruments. Assume the resistors are 5% resistors. Note that these analytical calculations can (and should) be made during prelab. Now, build the actual circuit as (still) shown here on your own protoboard for each of the values of Z1 and Z2 in the table as (still) listed here. Measure and record each component value with uncertainty using the Elenco. Generate the input voltage using a signal generator and measure the output voltage with each of the instruments in the table. Now redo the expected calculations using your measured component values. Explain any differences between your measured voltages and your two sets of predicted voltages. Do the measured voltages lie within the predicted confidence intervals? Are there any lessons here on how best to increase the accuracy of predicted measurements?\nYou might find it convenient to build all the circuits at once, neatly on your protoboard, but be careful that you don’t accidentally use the power busses to build a circuit that doesn’t match this schematic. Similarly, be sure you don’t connect any outputs which should not be connected. It is good practice to trim the resistors with wire cutters so that they lie neatly on the protoboard.\n    Note: If Case (D) is giving you problems, try just twisting the components together and measuring things off of the protoboard. The leakage current is fairly high on the protoboard, and it may interfere with your measurements. \n\n\n    Note: For Case (E) you may have to get creative with BNC adaptors and other components to make the circuits. A 10X probe will clearly not lie flat on a breadboard."
  },
  {
    "objectID": "labs/lab2/index.html#op-amps-and-impedance",
    "href": "labs/lab2/index.html#op-amps-and-impedance",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "6. Op Amps and Impedance",
    "text": "6. Op Amps and Impedance\nRead the “Op-amp Fundamentals” section at the bottom of this page and/or Auntie Spark’s Guide to Op-Amp Circuits.\nReplace the circuit in Case (A) of Section 5 on your breadboard with this circuit and repeat your measurements. Power the op-amp with ±15 V. Compare and contrast your results from Case (A) with your current results. What is the function of the op-amp in this measurement?\nReplace the circuit in Case (D) of Section 5 on your breadboard with this circuit and repeat your measurements. Power the op-amp with ±15 V. Compare and contrast your results from Case (D) with your current results. What is the function of the op-amp in this circuit?"
  },
  {
    "objectID": "labs/lab2/index.html#deliverables",
    "href": "labs/lab2/index.html#deliverables",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "7. Deliverables",
    "text": "7. Deliverables\nAll labs require two submissions per group. The first submission is a submission sheet in which specific data must be shown. The submission sheet is due at the end of the 4-hour lab period. The submission sheet must be uploaded before the end of your lab session at 5:15 pm. Note that only ONE member of each team should access and submit the submission sheet. It is the responsibility of that team member to add the rest of the team’s names to the submission sheet.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet ishere.\nThe second submission is a writing assignment, usually around 1 page in length. Each writing assignment will be based on a prompt, and must be completed by each student individually; no collaboration is allowed on the text or figures in these assignments, though you may speak among yourselves about concepts in keeping with the collaboration rules of the course. A first draft of the writing assignment must be uploaded by noon on Friday, and you need to bring a printed copy of your draft to the writing and reflection section on Friday at 1:15 pm. During the first hour of the writing and reflection, you will engage in a peer editing exercise. The second hour of the Writing and Reflection section is reserved for you to edit your draft to produce a final draft of the writing assignment. This final draft must be uploaded before the end of the Writing and Reflection section on Friday at 3:15 pm. Theprompt andguided peer feedback worksheet for Lab 2 are linked, note that the rubric is included in the prompt.\nRecall that no late work is accepted, we will grade whatever is submitted at the deadlines. Since multiple submissions are allowed, you may want to submit a less-than-perfect draft early as insurance against missing the deadline.\nAfter the writing and reflection section at the end of each week every person (not just one person per team) must submit a team dynamics check-in survey. These are part of your participation grade. The survey link can be found on the home page."
  },
  {
    "objectID": "labs/lab2/index.html#extra-credit-1",
    "href": "labs/lab2/index.html#extra-credit-1",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "Extra Credit 1",
    "text": "Extra Credit 1\nReplace Z2 in Case (C) of Section 5 on your breadboard with a 100kΩ thermistor and derive a formula to calculate the temperature from Vin and Vout. Also determine the error specifications for all of the components in your system. Measure Vin and Vout with the 10x Scope and calculate the room temperature from the measured Vin and Vout complete with propagation of errors to calculate the uncertainty.\nTry to reduce your uncertainty by measuring the actual resistance of Z1 instead of using its printed value. Note that we’re measuring Z1 because we are using the output voltage of the thermistor voltage divider to guess Z2. Repeat the measurement and calculation. How much did the uncertainty change?\nCompare your calculated temperatures with the room temperature measured by one of the digital thermometers. Do the measurements agree within the uncertainty of the measurements? Why would you use the voltage divider circuit with a Teensy instead of simply measuring the resistance of the thermistor? In your answer you may want to explain how the Elenco measures resistance. For your circuit explore how the measured temperature changes with Vin as you vary from 1 Vpp to the maximum the signal generator can generate. Why does it change?"
  },
  {
    "objectID": "labs/lab2/index.html#extra-credit-2",
    "href": "labs/lab2/index.html#extra-credit-2",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "Extra Credit 2",
    "text": "Extra Credit 2\nHow do the accuracies of the Teensy and Elenco vary as you adjust the input frequency to 100 Hz, 200 Hz, 500 Hz, 1000 Hz, 2000 Hz, 5000 Hz,10,000 Hz, 20,000 Hz, 50,000 Hz, and 100,000 Hz? Be sure you select appropriate input signals as you conduct this experiment. In particular, reflect on the Teensy’s behavior in Section 1 and Section 3 when selecting the signal.\nThe definition of “accuracy” can be slippery here, so you should think carefully about it as you compose your answer. This is particularly true for the Teensy, which will return a sample to you that consists of many numbers. Will you consider the accuracy of a single data point (compared to what)? Of a single cycle? Or of some kind of aggregation of cycles that includes uncertainty? Consider carefully.\nWriteups for this extra credit section are not counted against the page limit of your report. You may submit this as an additional document labeled “Lab2 instrument frequency response extra credit addendum.”"
  },
  {
    "objectID": "labs/lab2/index.html#extra-credit-3",
    "href": "labs/lab2/index.html#extra-credit-3",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "Extra Credit 3",
    "text": "Extra Credit 3\nConnect the set of circuits inthis table (Circuits F through I) in the same manner as in Section 5. Note that the Elenco can measure capacitance. Measure the output voltages with any appropriate equipment (justify your choice). Vary the input frequency as shown on the table. Repeat the predictions and measurements as in Section 5. Use an input amplitude of 5Vpp and, if using the Teensy, be sure to offset the signal. Measure the phase difference between the input and output voltages where possible. Explain the results of your measurements and possible function for each circuit. Consider carefully in what (graphical) format(s) you want to present your results."
  },
  {
    "objectID": "labs/lab2/index.html#op-amp-fundamentals",
    "href": "labs/lab2/index.html#op-amp-fundamentals",
    "title": "Lab 2: Basic Electrical Measurements",
    "section": "Op-Amp Fundamentals",
    "text": "Op-Amp Fundamentals\n\nNeatly laid out protoboards work better. Seriously, they do. They’re easier to troubleshoot as well. Seriously, they are! Please take the time to do it right.\nKeep your leads short and close to the board.\nStrip off the minimum amount of insulation to let your patch wire work; Don’t have big bare areas that can touch other things and short.\nTrim your resistors and capacitors to keep the components close to the boards. Don’t leave the leads long. Get the components down by the board.\nUse the long busses for power only. Do use them for power and ground. Don’t use them for signals. Use bypass capacitors (see below) on your power busses.\nTo the extent possible use coaxial cables to get signals on and off of your board. Put the input signals onto the board as close to the circuit inputs as possible. For example, use a coaxial cable with BNC connectors from the signal generator and then put spring-loaded mini-clips on the other end. Connect the mini clips to your circuit input and ground.\nIf you are using dual supplies for your op-amps, have three power busses: V+ connected to the +20 V output on your power supply, V– connected to the –20 V output on your power supply, and GND connected to the COM output on the power supply. You can adjust your supply voltage to be anything from ±1 V to ±15 V depending on what chips you are using.\nIf you are using a single supply for your op-amps, have two power busses: V+ connected to the +20 V output on your power supply, and GND connected to the COM output on the power supply. You can adjust your supply voltage to be anything from +1 V to +15 V depending on what chips you are using.\nColor code your wiring. A common practice is to use red for V+ power, black for V– power, green for ground, and white or blue for signal lines. If you have a rat’s nest of all red wires, neither the professors nor the proctors (nor you for that matter) will be able to figure out what goes where.\n\nIn standard practice, op-amps are shown in schematics without the power connections. However, you must supply power to the power pins or the op-amps won’t work! For reference,this circuit shows the power connected to the op-amp.\nYou may have noticed that the circuit has many capacitors connected to its power rails. These are called decoupling or bypass capacitors and they help to stabilize (in a feedback sense) the operational amplifier. The high gain of operational amplifiers can cause op-amps to interact with long power busses to cause oscillations. This manifests as intermittent, large noise in the output of the circuit. You can almost totally eliminate this issue by placing bypass capacitors between the power supply pins and ground as close as physically possible to each op-amp.\nStandard practice recommends both a 10 µF electrolytic capacitor and a 0.1 µF standard capacitor. For E80 you can get away with just the 0.1 µF standard capacitor. If you use electrolytic capacitors, remember that they are polar and if you put them in backwards they won’t work and may explode.\nFor dual supplies the capacitors run between V+ and ground, and V– and ground. For single-sided supplies, they run between V+ and ground. The circuit below shows a unity-gain buffer amp with dual power supplies and bypass capacitors."
  },
  {
    "objectID": "labs/lab4/index.html",
    "href": "labs/lab4/index.html",
    "title": "Lab 4: Temperature Sensors",
    "section": "",
    "text": "Team size: 2"
  },
  {
    "objectID": "labs/lab4/index.html#learning-objectives",
    "href": "labs/lab4/index.html#learning-objectives",
    "title": "Lab 4: Temperature Sensors",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter successful completion of this lab, you will be able to…\n\nBuild a system to measure temperature with several different types of temperature sensors\nExplain the tradeoffs (e.g., response time, dynamic range, ease of analysis) between different temperature sensor architectures."
  },
  {
    "objectID": "labs/lab4/index.html#introduction",
    "href": "labs/lab4/index.html#introduction",
    "title": "Lab 4: Temperature Sensors",
    "section": "0. Introduction",
    "text": "0. Introduction\nIT IS YOUR TEAM’S RESPONSIBILITY TO BRING ICE TO LAB . THIS IS PART OF YOUR PRELAB! \nThis lab will be completed in sub-teams of two students. Before the lab you must decide how you will split your team. Each sub-team will be responsible for its own version of the lab’s deliverables. Pre-lab work and a vision of the experiments that you will be conducting will be essential to the successful completion of this lab. As usual, this subteam may not be the same as any other subteam you’ve participated in during the course.\nThere are two extra credit sections. They would make the lab too long for most teams of two to complete. However, in the unlikely event that you complete the required sections, you may attempt either or both and include the results as addenda in your report and submission sheet (see details in the extra credit sections). They are the same experiments as extra credit for Lab 3. You may submit a given extra credit only once, so if you’ve already submitted one or the other, you may not resubmit it for Lab 4.\nThe instructions for this lab are not as detailed as for some of the earlier labs. You are expected to plan out your experiments and fill in the blanks.\nYou will be provided with:\n\nTemperature sensors\nDigital thermometer\nHot water\nA constant-temperature (25°C) water bath\nInsulated containers\nGlass beakers\nBreadboard\nKeysight Infinivision oscilloscope (click here for manual)\nKeysight E3630A power supply (click here for manual)\nElenco multimeter (click here for manual)\nAn AD623ANZ-ND Instrumentation Amplifier (click here for data sheet)\nAccess to resistors and capacitors in the stockroom and E80 lab.\n\nIMPORTANT SAFETY TIP: When using the calibration baths remember that water is an electrical conductor and putting an electronic component that is not waterproofed into water carries some risk. Use appropriate precautions. Waterproofing your sensors using electrical tape,heat-shrink tubing, hot glue or parafilm is essential!\nIMPORTANT SAFETY TIP: Water above 50 °C can cause scalds. Determine safety protocols for working with hot water to avoid spilling it or inadvertently touching it.\nIMPORTANT NOTE: The only constant-temperature bath in the lab is the 25 °C bath in the E80 lab (B171). Use your digital thermometer to monitor the temperatures of any other baths in the lab!\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here."
  },
  {
    "objectID": "labs/lab4/index.html#side-by-side-comparison-of-the-thermistor-and-solid-state-sensor",
    "href": "labs/lab4/index.html#side-by-side-comparison-of-the-thermistor-and-solid-state-sensor",
    "title": "Lab 4: Temperature Sensors",
    "section": "1. Side-by-Side Comparison of the Thermistor and Solid-State Sensor",
    "text": "1. Side-by-Side Comparison of the Thermistor and Solid-State Sensor\nYou have used thermistors and integrated solid-state temperature sensors before in E79. In this section you will revisit those sensors and compare them.\nYou will be given a 3-Pin TO-92 MCP9701A Low-Power Linear Active Thermistor Integrated Circuit. What is the voltage-temperature conversion given in the datasheet and what uncertainty does it have? (A tip for using the MCP701A: Solder wires onto each of the leads, but don’t bend the sensor leads when soldering: bent leads are difficult to heat shrink.)\nYou will be given a Murata NXFT15WB473FA2B150 thermistor. The equation for converting for temperature using the B parameter provided on the thermistor datasheet can be found on the Thermistor wikipedia page here.\nHow does the temperature conversion expression in the thermistor datasheet compare to the Steinhart-Hart equation, a power series which is used to describe thermistor Resistance vs. Temperature behavior? Why do you think the thermistor designers chose their conversion equation?\nA critical property of a temperature-measurement device is how quickly it responds to a change in external temperature. For most temperature-measurement devices, characterizing them as first-order systems is adequate for evaluating their suitability for a given application.\n\nUsing the oscilloscope and resources that you have been provided, obtain the first-order temperature responses of the thermistor and the solid-state sensor SIMULTANEOUSLY. Determine the time constants of both temperature sensors. Note that the first-order response corresponds to the behavior of the sensors when the surrounding temperature changes suddenly.\nIn a single plot, show Time-Temperature curves for both the thermistor and the temperature sensor. Specify the temperatures that were tested. Report appropriate measures of error in this plot.\nDescribe the circuitry you used to measure the thermistor resistance with your oscilloscope."
  },
  {
    "objectID": "labs/lab4/index.html#thermocouples",
    "href": "labs/lab4/index.html#thermocouples",
    "title": "Lab 4: Temperature Sensors",
    "section": "2. Thermocouples",
    "text": "2. Thermocouples\nOur available thermocouples are Type-E (Omega FF-E-24-SLE-200). The NIST website with information on thermocouples is here. The direct link to the NIST Type-E table is here. The direct link to the NIST Type-E table is here. The NIST page for polynomial coefficients that were used to generate the table (voltage from temperature) is here. The NIST page for the inverse coefficients (temperature from voltage) is here. The Omega website is here. (Warning, Omega website is often very slow). The Omega version of the NIST table is here. The Omega info on thermocouples is here.\nThermocouples generate very small voltages, which must normally be amplified to be read by an oscilloscope, although the DMM does have sufficient range. The easiest way to do the amplification is with an instrumentation amplifier. The one we have available is the Analog Devices AD623ANZ (data sheet here). Pay special attention to the voltage supply range. It can operate with a supply voltage range of ±2.5 V (or 0-to-5 V single sided) to ±6 V (or 0-to-12 V single sided). If you exceed the voltage supply range, you will destroy the chip. The op-amp standard of ±15 V will destroy it immediately. Don’t be tempted. Figure 79 in the data sheet shows the basic circuit for connecting a thermocouple. Note that in Figure 79, the amplifier is powered with a bipolar, not a single-sided supply. It looks like an op-amp, but it is not. You should use a single sided power supply because your AUV will be powered by a battery. In this configuration you must offset your thermocouple to the average of your power supply (e.g., if you supply with 0-to-5 V, your thermocouple should be offset to 2.5 V). This circuit is given to you for reference. Note that the offset utilizes a unity-gain, non-inverting Op-amp configuration to provide a low output impedance for the offset voltage.\nThe simplest way to construct a thermocouple is to use one of the recycled ones. Otherwise, take a 1-foot length of thermocouple wire, strip the wires at one end and twist them firmly together so they make electrical contact. DO NOT USE SOLDER. It will not stick to the wires.\n\nUse the multimeter to measure the output voltage of the thermocouple by itself. Determine the output voltage of the thermocouple at several temperatures and create a Temperature-Voltage curve. Make sure to record the ambient temperature (specifically the temperature at the thermocouple-multimeter junction) and place this information in the figure caption.\n\nDesign and build a circuit to read a thermocouple using the ice bath method discussed in lecture (see Figure 6 of this link, or Figure 2 of this link, or click herefor lecture slides). DO NOT USE SOLDER. USE A GLASS BEAKER FOR YOUR ICE BATH. To get practice for your future data logger, design the circuit to have a gain of 200 and output voltages in the 0-to-5V range. Provide a detailed diagram of your circuit.\n\nTest your circuit at several different temperatures and create a Temperature-Voltage curve.\nHow do your results compare to the Temperature-Voltage curve of the solid-state sensor and the thermistor? (As a reminder, you looked up the data necessary to find these two curves in Section 1. You don’t need to measure temperature-voltage curves for the thermistor or solid-state sensor.)\n\nThe AD623 is expensive ($7/chip), so return undamaged chips to stock."
  },
  {
    "objectID": "labs/lab4/index.html#side-by-side-comparison-of-the-thermistor-and-thermocouple-with-cjc",
    "href": "labs/lab4/index.html#side-by-side-comparison-of-the-thermistor-and-thermocouple-with-cjc",
    "title": "Lab 4: Temperature Sensors",
    "section": "3. Side-by-Side Comparison of the Thermistor and Thermocouple with CJC",
    "text": "3. Side-by-Side Comparison of the Thermistor and Thermocouple with CJC\nYou will not be using the ice bath method in this section! A complete thermocouple-based temperature measurement system requires cold junction compensation (CJC). You basically need a temperature sensor to measure the temperature of the junction where the thermocouple meets the instrumentation amplifier (the Cold Junction). In this lab, you will use the solid-state temperature sensor for CJC. To use CJC, measure the temperature of the cold junction with the MCP7901A (the Cold Junction sensor). Use the thermocouple table or polynomial to calculate the equivalent thermocouple voltage at that temperature. Then add your measured thermocouple voltage and your calculated voltage (the CJC voltage) together, and then convert the voltage sum to a temperature using the thermocouple table or polynomial.\n\nUse the solid-state sensor for CJC. Test your circuit by immersing the thermocouple in several different-temperature baths and create a Temperature-Voltage curve. How do your results compare with the curve from section 2?\nUsing the oscilloscope and resources that you have been provided, obtain the first-order responses of the thermistor (the Murata part) and the thermocouple-with-CJC SIMULTANEOUSLY. How will you power and record data for three temperature sensors? Determine and compare the time constants of both temperature sensor systems.\nIn a single plot, show time-temperature step-response curves for the thermistor, the thermocouple with CJC, and the solid-state sensor (the MCP7901A). You may reuse data you took earlier, and you need not try to capture all three signals simultaneously, but you should time shift them so that the step responses all start at t = 0. Be sure that the temperature and time axes are properly labeled with units. Thought Question: If you had to choose among these three systems to put on a submersible and record the data with a Teensy, which one(s) would you use?"
  },
  {
    "objectID": "labs/lab4/index.html#deliverables",
    "href": "labs/lab4/index.html#deliverables",
    "title": "Lab 4: Temperature Sensors",
    "section": "4. Deliverables",
    "text": "4. Deliverables\nAll labs require two submissions per group. The first submission is a submission sheet in which specific data must be shown. The submission sheet is due at the end of the 4-hour lab period and must be uploaded before the end of your lab session at 5:15 pm. Note that only ONE member of each team should access and submit the submission sheet. It is the responsibility of that team member to add the rest of the team’s names to the submission sheet.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here.\nThe second submission is a writing assignment, usually around 1 page in length. Each writing assignment will be based on a prompt, and must be completed by each student individually; no collaboration is allowed on the text or figures in these assignments, though you may speak among yourselves about concepts in keeping with the collaboration rules of the course. A first draft of the writing assignment must be uploaded by noon on Friday, and you need to bring a printed copy of your draft to the writing and reflection section on Friday at 1:15 p.m. During the first hour of the writing and reflection, you will engage in a peer editing exercise. The second hour of the Writing and Reflection section is reserved for you to edit your draft to produce a final draft of the writing assignment. This final draft must be uploaded before the end of the Writing and Reflection section on Friday at 3:15 p.m. Since multiple submissions are permitted, and only the last one is graded, you may want to submit a draft at 3 p.m. as insurance. The writing assignment is based on this prompt.\nThis is the peer feedback worksheet.\nNote that you should include relevant calculations to explain the ideal analytical curves on your calibration plots on your submission sheet.\nNote that the rubric is included in the prompt.\nRecall that no late work is accepted, we will grade whatever is submitted at the deadlines.\nAfter the writing and reflection section at the end of each week every person (not just one person per team) must submit a team dynamics check-in survey. These are part of your participation grade. The survey link can be found on the home page."
  },
  {
    "objectID": "labs/lab4/index.html#extra-credit-1.-salinity-measurement",
    "href": "labs/lab4/index.html#extra-credit-1.-salinity-measurement",
    "title": "Lab 4: Temperature Sensors",
    "section": "Extra Credit 1. Salinity Measurement",
    "text": "Extra Credit 1. Salinity Measurement\nThis extra credit is the same as for Lab 3. If you already submitted this extra credit for Lab 3, do not resubmit it as part of Lab 4.\nSalinity is a measure of the total dissolved salt content of water. It is an extremely important and common measurement in oceanographic studies. Salinity measurements are used to track the flow of water and map the hydrological cycle, calibrate acoustic communication links, and understand biological phenomena like algal blooms. In this section you will build a sensor to measure salinity using an inverting operational amplifier. You will prove that it works by calibrating it against saline solutions with different salinity.\nTo design your sensor, you need to know reasonable values for what you’re trying to measure. Your sensor will measure conductivity and the measured value will be used to extract salinity. Find the salinity and conductivity of the ocean using any resource you choose. Note that the equivalent circuit model of a saline solution whose value depends on the separation of the probe electrodes and the salt concentration (why?) is a resistor in parallel with a capacitor. We will ignore the capacitor for this extra credit section, but it is critically important in a design for the final project. You may want to read this reference for further information.\nDesign an inverting operational amplifier circuit using one or more TL081 op-amps which has an output voltage that is linear with the conductivity of your solution. Be sure to consider source and load impedances when designing your circuit. Ensure that the output voltage of this circuit will vary over a wide voltage range for the range of saline solutions that you plan to use for calibrating your circuit. This design depends on some of your experimental parameters including the separation of electrodes and the conductivities of the solutions you intend to measure.\nOne thing to be careful of when measuring salinity is that salt, water and electrons will undergo chemical reactions which can deposit metal salts on your electrodes. These salts can form non-conductive films which stop your conductivity measurements. What kind of waveform should you apply to your circuit in order to make a measurement stable over time? This chemistry can also cause your circuit to fail if the electrode area is too small or the voltage applied to the solution is too low.\nPrepare an experimental setup that will allow you to measure the conductivity of salt water. You have access to beakers, wire, electrical tape and digital thermometers. Prepare a set of saline solutions to be used with this setup which are sufficient to prove the sensor is linear. Graduated cylinders would usually be used to measure the volume of water in these solutions. Those are not available to you, so instead you will need to use the digital scales and the well-known relationship between the mass and volume of water. What is that relationship?\nRecord a calibration curve for your sensor which plots the voltage output of your sensor against the concentration of your salt solution in units of grams per liter on logarithmic X and Y axes. Find a line of best fit including appropriate uncertainty measurements. Then use your sensor and your calibration curve to measure the salinity of the mystery salinity solution on the central table.\nNote: You may use this resource to convert from a measured conductivity to salinity and this resource to convert from salinity to conductivity.\nWriteups for this extra credit section are not counted against the page limit of your report. You may submit this as an additional document labeled “Lab 4 salinity extra credit addendum.”"
  },
  {
    "objectID": "labs/lab4/index.html#extra-credit-2.-pressure-measurement",
    "href": "labs/lab4/index.html#extra-credit-2.-pressure-measurement",
    "title": "Lab 4: Temperature Sensors",
    "section": "Extra Credit 2. Pressure Measurement",
    "text": "Extra Credit 2. Pressure Measurement\nThis extra credit is the same as for Lab 3. If you already submitted this extra credit for Lab 3, do not resubmit it as part of Lab 4.\nIn this section you will replicate the pressure circuit on your E79 board to understand its operation. After that you will modify the sensing circuit to optimize the range of the output voltage for the graduated cylinder test that we have used to test pressure sensor operation.\nAnalyze this circuit and select values of R1, R2 and R3 such that output voltage will swing from 1V to 4V when you apply a pressure varying from atmospheric to 50cm below water. Implement the circuit using the MPX5700 pressure sensor and the MCP601 op-amp, which are the devices used on the E79 board. Use Vdd=5V. Why is the pressure sensor attached to the positive input of the amplifier?\nCreate an experimental setup to vary the pressure on the sensor using a large graduated cylinder, water and plastic tubing. Create a calibration curve relating your measured voltage to the applied pressure, and include appropriate measures of uncertainty.\nReturn the pressure sensor to stock when you are done with it under pain of a grade penalty, and be careful not to damage the pins while using it in your breadboard.\nWriteups for this extra credit section are not counted against the page limit of your report. You may submit this as an additional document labeled “Lab 4 pressure extra credit addendum.”"
  },
  {
    "objectID": "project/index.html",
    "href": "project/index.html",
    "title": "Project",
    "section": "",
    "text": "The final project for this class is deploying your AUV in open water in order to complete an experiment of your design. This project offers many opportunities for creativity: there are a wide variety of interesting things in the ocean that can be measured. For example, environmental or scientific quantities (e.g., water quality, distribution of temperature, salinity, turbidity) and observation of marine life are good options, as are engineering properties such as sensor accuracy, battery life, sensor or craft mechanical durability, velocity vs. power, controller accuracy, or measuring the structural strains that large motors apply to the robots. Get creative! We look forward to seeing what you come up with.\nThe minimum requirements of the project are as follows:\n\nYour robot must be autonomously deployed to take measurements without human intervention.\nThe deployment must last at least one minute and the robot must actively control its position during this minute.\nThis deployment must end at a place where the robot can be recovered.\nYour sensor package must be deployed on or from your AUV, either in the water or in the air.\nYour sensor package must use at least three sensors with at least two unique electrical interfaces.\nThe IMU, GPS, and motor current sensors that are already installed on the robot do not count towards this requirement, but they may be used as part of your data collection and analysis.\nAny sensors, including the ones you’ve installed or used as part of any of the labs, are fair game for this project. The extra-credit sections of labs are a good source for sensors.\n\nThis project is structured as a set of cumulative deliverables which will help you gather data in time to complete the project. These deliverables are summarized below. Each deliverable requires that each team be checked off by two faculty members during your usual lab section. The details of what documentation or hardware demonstrations are required for the checkoff each week are included in the sections below. The team needs to check off with their section professor and a second professor. The second professors will be available for some portion of every afternoon and on Friday (Teams from sections 1 and 3 may check off with your 2 section professors). Be prepared for a rigorous design review at each checkoff.\nIn addition to the extra credit sections in the labs, there is a set of reference designs for sensors and equipment. Feel free to use them as the basis for your own sensors and equipment. There are also many Arduino tutorials and an Elegoo User Guide to help you get started with your hardware.\nSensor deployments are intended to take place during weeks 4 and 5 of the project: Week 4 deployment will be at the Bernard Field Station’s pHake Lake during your regular section time and week 5 deployment will be at the Dana Point Baby Beach on Saturday 4/22/2023.\nAfter the deployments, students are responsible for a set of final deliverables: A rough draft of your final report is due at 11:59 PM on 4/28/23. The final draft is due at 11:59 PM on 5/3/2023 (submission will be accepted on Sakai) and a final presentation on 5/3/2023. The requirements for the final deliverables are discussed below.\n\n\n\nDuring the first lab section of your project you will need to produce a project proposal. The project proposal is made up of four parts: a budget indicating what you intend to buy for the project, a one-page maximum written description of your experiment, a detailed schematic showing how you will install your new sensors, and a mechanical drawing showing how you plan to mount or ruggedize the sensors for water submersion. Take a look at this example proposal to see what we’re looking for.\nYou will need to price the sensors and mechanical parts (easiest online) in order to make an accurate budget. You are expected to have selected parts for your experiment before submitting the budget. Selecting these parts will depend on your experimental design: does your motor have enough torque to overcome the surf? Does your pressure sensor have the maximum ratings necessary to achieve the depth you desire? Common vendors include Digikey, McMaster-Carr, JameCo, SparkFun, AdaFruit and many others. The faculty will not approve any budgets greater than $50 (including taxes and shipping). Supplies in the E80 lab don’t count towards your budget limit (and remember that there are some links to get you started on the final set of lecture slides and the section above). Some of the supplies, notably speakers and microphones, are available for temporary checkout for prototyping but not for permanent installation. These supplies are cheap enough that we expect you to buy your own for permanent installation.\nThe one-page description of your project should lay out your scientific and/or engineering goals and describe how your sensor system will help you meet those goals. There are a few specific points that it should address:\n\nIt should answer the question, “Why would anyone do this project?” or “Why should I care about your results?”\nIt should outline your hypothesis and what you’re comparing it to: what is the x of your experiment, what is the y and what two x-y curves are you comparing? If you need to cite literature to establish your scientific relationship, then don’t forget you can access papers through Mudd’s network.\nIt should state the sensors you are using and describe how they relate to your scientific goals. Will they require any exceptional mechanical, electrical or software design?\nIt should convince the reader that you considered a number of design alternatives when you picked your project. The minimum bar for doing this is including five two-line project descriptions for projects that you considered but did not pursue.\nIt should outline requests for specific launch times or locations for your robot. There are two locations we can launch in Dana Point: the public beach and the Ocean Institute pier. We have a limited number of launch slots on the pier: two teams can launch in each half hour slot from 8:30 a.m. to 2:30 p.m. If your scientific goals would benefit from a particular launch time slot or slots on the pier, then you should request those slots in this project description. If some time slots are oversubscribed, we will award them randomly. We will prioritize giving every team that wants one a deployment off the pier over giving one team multiple deployments.\n\nYour schematic should be detailed and thorough and show every wire, resistor, capacitor (don’t forget bypass capacitors) and power source that you intend to connect in order to get your sensor signals onto your MTB. You should consider the voltage swing each component will provide and carefully design your analog front end and power supply so that these voltages are appropriate for the Teensy. Annotating voltage swings on your schematic is a good way to keep track of these design choices. You will be asked about every component on your schematic, so be prepared to back up your decisions with calculations or reference designs from the datasheets.\nYou may find the design files for the PCBs you will use helpful while coming up with your schematic, so they are linked below. The CAD files for each board are viewable usingKiCAD. Also, consider re-reading the Introduction to the E80 Motherboard document from lab 1.\n\nMotherboard (schematic, layout, CAD files)\nProtoboard (schematic, layout, CAD files)\n\nYou used the motherboard in labs 1, 2 and 7, so you should be familiar with it. All of your new electronics will be assembled on a new board called the protoboard, which has been designed to resemble a breadboard. Note that there are special areas on the protoboard layout for voltage regulators; you have battery power available to your protoboard but no regulated voltage supplies, so you will need to use these areas to add voltage regulators. The screw holes on all of the boards are grounded. Connections from the motherboard to protoboard will be made with a ribbon cable as shown here and here.\nYour mechanical drawings should indicate sensor locations and be sufficient to convince a skeptical professor that your intended mechanical modifications are physically possible. Include approximate calculations - mass, center of gravity, buoyancy, or torque for motors - where appropriate to justify that these modifications serve your experimental goals. Especially include calculations if you think a professor will challenge you on the feasibility of your modification. (“e.g.: Can you really submerge an air filled tank with THAT motor?”) Be sure to look up datasheets for motors if necessary.\nRemember, you have $50 per team to spend towards your project. A few important notes on spending:\n\nAll purchases must be approved by your section instructor, who will initial your purchase requests on the google spreadsheet.\nYou must make all purchases to be shipped to the Engineering Department.\nOnce your section instructor has approved your purchase, the designated purchaser may use the online department form New Purchase Order Request Form to make the purchase request.\nOn the purchase request form, be sure to include your team number and section number.\nPlan for a relatively long lead time, around a week.\nOn the purchase request form, put Professor Brake as the professor to approve the purchase request.\nDO NOT FORGET TAXES AND SHIPPING COSTS WHEN CONSIDERING YOUR BUDGET.\n\nFaculty use this checklist when checking students off for this week, so feel free to review your proposal against that list.\nThis is the list of parts available to you.\n\n\n\nAt the end of the second week of the project you must demonstrate a prototype of your sensors in communication with the Teensy on the motherboard (MTB). Attach the sensors to your MTB (possibly using a breadboard), write software to measure them and design a set of experiments which will allow a professor to observe your sensor’s outputs for known values. Be mindful of your construction techniques: if you do a good job building your circuits this week then you will be ready for your deployments. If you do a bad job, then you will need to do confusing rebuilds. The more sensors you get working this week, the smoother next week will go.\nDuring your checkoff you will be expected to show your professor (preferably) a live demonstration or (if necessary) a set of slides which show your measured data.\nHere is a PDF of the Week 2 check-off list that we will use to evaluate your circuits.\n\n\n\nAfter you have tested all of your sensors (possibly breadboarded) and demonstrated that they work, you need to transfer them to the hardware that will go in your AUV. As discussed in Section 1 above, the available protoboards are PC boards that are laid out like two halves of a breadboard side by side to which you can solder parts. They connect to the motherboard through the multipin connectors and ribbon cable. They are usually the easiest way to ruggedly mount your components for use in your AUV. Consider carefully the proper ways to mount and waterproof so that your sensors function as desired. You do not need to complete your waterproofing and final assembly, but everything should be ruggedly mounted and you want to come as close to the final configuration as possible.\nSome helpful guidelines:\n\nParts like the bypass capacitors and assorted resistors should be soldered directly to the PCB. For more complex parts, such as 16-pin DIP op-amps, it may be wise to solder a socket in place and mount the part in the socket to facilitate replacing them if something goes wrong.\nGood wiring technique and tight layout will make your robot much more reliable and easier to debug.\nYou should use stranded wire whenever the wire will be subject to flexure or bending during use, disassembly or reassembly. It is much less likely to break under strain than solid core wire. As a general rule, when connecting two points on the protoboard use solid wire, when connecting to anything off board, use stranded wire.\nYou may need to make penetrator bolts for this project stage. A method for applying marine epoxy to bolts that have been drilled out can be found here. Remember that marine epoxy needs to dry overnight, so making these bolts requires two days because epoxy is applied twice. Be sure epoxy always dries in a fume hood: staff can show you an appropriate hood to use. We use 1/4” holes for our penetrator bolts and we hold the undrilled bolts in vises while drilling out the central hole. We find that six wires is about the maximum that we can fit into one bolt before the epoxy starts failing. You will also need to drill holes for these penetrator bolts in your project box. Be sure to use 1/2” step drill bits (which we have in our cupboards) to drill out the holes. Standard drill bits will result in ragged holes that are not watertight.\nDefault_Robot.ino, is a good starting point for integrating your sensors with the Teensy. It adds some implements a couple features: logging of the analog pins, an updated diagnostic display, improved GPS resolution, and a few header files that help keep things organized. Be sure to read the README because it contains a lot of information about the features and adjustable knobs in each file. The adjustments described in the README file are sufficient to cover most standard student projects.\n\nDuring your checkoff, you will be expected to explain to your professor how everything is intended to work, and (preferably) give your professor a live demonstration of data collection and display or (if necessary) display a set of slides which shows your measured data. The difference from Week 2 is that everything should be mounted, and not just breadboarded. You should be able to mount your electronics assembly in your box, power it from battery power, mount the box in your robot and demonstrate the ability to log data when it is in this configuration. Any mechanical modifications to the robot should be complete before the checkoff so that the instructors are verifying that your electronics assembly can be mounted inside of the final version of your robot.\nHere is a PDF of the Week 3 check-off list that we will use to evaluate your protoboards.\n\n\n\nDuring the fourth week you need to demonstrate that your AUV is watertight and capable of autonomous operation by measuring field data with it. Because GPS reception in the tank room is poor we’ll accept faked control loops or open loop control during tank room deployments. You are expected to test and (hopefully) launch your AUV at the pHake Lake at the Bernard Field Station during your regular section time. The main goal of these tests is to ensure that your sensors work in the field. The secondary goal is to evaluate your experimental data so you can make changes to ensure that you will be able to meet your experimental goals. Do not forget that seawater and lake water have very different salinities, conductivities, and densities. A neutrally buoyant AUV in pHake Lake will bob like a cork in the ocean.\nRemember that field deployments are often easier if you have a deployment checklist, so write one. Here is an example deployment checklist. The intent is that this checklist will prevent mistakes during your deployment; you’ll be thinking about enough things out in the field that you are very likely to forget about the details of the care and feeding of your sensor suite without a list to check against.\nYou will also submit an experimental plan. The plan must include the number of deployments you intend to do and the times and locations of those deployments. You should list the expected range of signals you expect to observe (based on theory or preliminary measurements) during the deployments. The document should show the planned robot trajectory for each deployment and discuss how the robot will be recovered (kayak, it comes back and we grab it, pool hook, etc.).\nThe main E80 Lab (Parsons B171) will be open from 12:30 pm - 1:00 pm this week so that you may retrieve your equipment. You must be at the side gate of Bernard Field Station by 1:15 pm; an instructor will meet the group at the gate at the start of your section. The teaching team will be out at BFS. This is one of the two chances that you’ll have to collect data in the field, and field data is required for your final report and presentation.\nTools and facilities will be available at BFS. A generator will be running power supplies, oscilloscopes, soldering irons, and other electronics. Multimeters and common hand tools will be available. Common supplies will be available too: heat shrink, glue, hot air guns, etc. A set of work tables will be set up beneath shaded tents. Sunscreen and water will be available during this deployment, but be sure you’ve eaten before you arrive. Faculty will announce a cancellation of the launch in the case of severe rain. Be sure to walk to the BFS gate in pairs and only cross at crosswalks.\nYou should show slides containing analyzed data at your checkoff. Be sure to overlay data sets that should be compared against one another and include analytical models to compare against on your plots.\nNOTE: It is possible to increase the logging time of your robot by increasing the FILE_BLOCK_COUNT value in Logger.h. This can help you to log data during long deployments.\n\n\n\nThe fifth week is your final chance to test and verify your deployment checklist and fix any flaws that were discovered at pHake Lake. You will have your regular section time to rebuild, retest, and modify your system to get more meaningful data by adjusting such things as amplifier gains and offsets, sampling rate, sensor location on the AUV, and deployment times of your sensor. You will not have access to pHake Lake, but you will have access to the water tank during the week.\nThe final field deployment is on Saturday, 4/22/2023. We will take buses from Foothill Blvd just north of Parsons to Dana Point, leaving at 6:30 am sharp. If you miss the bus, you will have to find your own way to Dana Point.\nYou must have your robot and any supplies that your group plans to bring with you in order to be ready to load the bus. Attendance will be taken to ensure that the bus doesn’t leave anyone behind at the end of the day, so make sure you are counted in the morning and you tell us if you are leaving separately from the bus.\nSunscreen, water and some snack/lunch food (pizza, granola bars, chips) will be provided. The same facilities as the lake deployment will be available. In addition, we will provide freshwater buckets and rice for recovering flooded robots.\nFaculty will announce a cancellation of the launch in the case of severe rain. The launch may be rescheduled for Sunday in that case.\nVideos have been recorded to give students a sense of the following environment characteristics:\n\nWater outside the harbor: Exercise great care if you want to operate a robot here. Most AUVs will be trashed. Watch this video.\nCurrents close to docks: This video shows the worst I saw. In this video, no motors are turned on.\nNormal AUV navigation in the harbor: This video shows it is possible.\nWater clarity: Get an idea of what you can see by watching this video.\n\nYour deliverables are slides with updated data from your deployment, which you will share with your instructors during your checkoffs at Dana Point. You are not allowed to do any deployments after launch day, so use this week well!\n\n\n\nThere are no deliverables during the sixth week of the project, but professors will be available to help you analyze data from your robot deployments. The experiments that you may conduct are limited, and the spirit of the restrictions is that you may only conduct small, in-lab forensic experiments to figure out problems if things went wrong.\nSpecifically:\n\nYou may not take any measurements underwater; you’re confined to “lab.”\nYou may not build or measure new sensors: if it didn’t work during a deployment then we’re not interested in measurements from it.\n\nYou should focus your efforts on analyzing your data and forensic analysis of failures in your sensors. If a small experiment would verify a forensic assumption or explain a quirk in your data, then you should feel free to carry it out. (For example, a team once needed to see how their measurements from an LED varied with angle, and they took their still functional sensor outside and waved it around to take that measurement.) When in doubt, ask an instructor.\nYour report is due at the end of this week.\n\n\n\nOn presentation day you will give a fifteen-minute, in-person presentation followed by ten minutes of questions and answers. This presentation should be aimed at a technically competent audience with diverse training backgrounds that is unfamiliar with the details of your project. (e.g.: The audience is a group of professional engineers from different disciplines.) You should imagine the presentation is being given to employers or peers at a conference, which means that you should hold yourself to high standards of professionalism: practice until the presentation is smooth and well-polished, think carefully about the story your visual aids are telling, ensure that the visual aids are readable and high quality, and dress in traditional business or business casual clothing. Every member of the team should participate in the presentation.\nHere is the rubric.\nSuccessful presentations often include discussions of:\n\nScience and/or engineering goals\nSensors and mechanical modifications to achieve those goals\nDesign process and calculations\nPre-deployment modeling and expected measurements\nData processing\nComparisons between modeling and measured data\nInterpretation of these results\nRecommendations for future work\n\nThe questions during the Q&A portion of your presentation will come from both the general technical audience and your instructors. They will range from straightforward to very detailed. Be sure to prepare by practicing fielding pointed questions and by cultivating a comprehensive understanding of your work. Preparing supplementary slides which you can deploy for common questions can help you during the Q&A.\nThe presentation schedule is available here. Please be at least ten minutes early to your presentation.\n\n\n\nEach team is responsible for submitting a report on their deployments in IEEE format. The report has a maximum length of ten pages including figures and appendices. Your purpose is to convey your experiments, your apparatus and your results. You should assume your audience is made of technical professionals of diverse backgrounds (i.e.: not all instructors of the course) who are unfamiliar with your specific project. You should write the report such that a reader could replicate your experiment and compare their results to yours. Note that this is a different audience than the video presentation. This rubric is the rubric which will be used to grade the reports.\nHere are a few tips for good report writing:\n\nThe main body is often most digestible if it is written in several sections. Which sections are included and the ordering of your will depend on the specifics of the experiment, but some common, important topics are provided in the modified rubric. If it is impossible to address every point in the modified rubric while staying inside the page limit then (1) make your writing more compact by using mathematical notation, tables or figures and (2) prioritize what is most important for your report.\nBe sure to follow the practices of scientific writing: use quantifiable descriptions instead of vague adjectives (“a 25% change” instead of a “a big change”), make sure all plots have labeled axes with units, make sure text in figures and tables is large enough to read, don’t use the first person (including cheats like “the team did X”) and minimize passive voice by making the experiment or artifact the subject of your sentences.\nMake sure to do some pre-writing to organize your text. Decide what topics you want in the report and where you want to put them before you start writing. Don’t talk about topics in the wrong sections or repeat yourself unnecessarily.\nDon’t forget that your writing style has a huge impact on how your work is received. Make a careful editing pass to be sure that each sentence says what you mean it to say. Then make a second editing pass for spelling, punctuation, common grammatical errors (especially tense mismatch, which is endemic), and gracefulness of language.\n\nHere are some examples of student reports and a well-written Tech Memo (c/o Prof. Spjut, don’t mind the non-IEEE formatting).\nA rough draft of your final report is due at XX. The final draft is due at XX."
  },
  {
    "objectID": "project/index.html#introduction",
    "href": "project/index.html#introduction",
    "title": "Project",
    "section": "",
    "text": "The final project for this class is deploying your AUV in open water in order to complete an experiment of your design. This project offers many opportunities for creativity: there are a wide variety of interesting things in the ocean that can be measured. For example, environmental or scientific quantities (e.g., water quality, distribution of temperature, salinity, turbidity) and observation of marine life are good options, as are engineering properties such as sensor accuracy, battery life, sensor or craft mechanical durability, velocity vs. power, controller accuracy, or measuring the structural strains that large motors apply to the robots. Get creative! We look forward to seeing what you come up with.\nThe minimum requirements of the project are as follows:\n\nYour robot must be autonomously deployed to take measurements without human intervention.\nThe deployment must last at least one minute and the robot must actively control its position during this minute.\nThis deployment must end at a place where the robot can be recovered.\nYour sensor package must be deployed on or from your AUV, either in the water or in the air.\nYour sensor package must use at least three sensors with at least two unique electrical interfaces.\nThe IMU, GPS, and motor current sensors that are already installed on the robot do not count towards this requirement, but they may be used as part of your data collection and analysis.\nAny sensors, including the ones you’ve installed or used as part of any of the labs, are fair game for this project. The extra-credit sections of labs are a good source for sensors.\n\nThis project is structured as a set of cumulative deliverables which will help you gather data in time to complete the project. These deliverables are summarized below. Each deliverable requires that each team be checked off by two faculty members during your usual lab section. The details of what documentation or hardware demonstrations are required for the checkoff each week are included in the sections below. The team needs to check off with their section professor and a second professor. The second professors will be available for some portion of every afternoon and on Friday (Teams from sections 1 and 3 may check off with your 2 section professors). Be prepared for a rigorous design review at each checkoff.\nIn addition to the extra credit sections in the labs, there is a set of reference designs for sensors and equipment. Feel free to use them as the basis for your own sensors and equipment. There are also many Arduino tutorials and an Elegoo User Guide to help you get started with your hardware.\nSensor deployments are intended to take place during weeks 4 and 5 of the project: Week 4 deployment will be at the Bernard Field Station’s pHake Lake during your regular section time and week 5 deployment will be at the Dana Point Baby Beach on Saturday 4/22/2023.\nAfter the deployments, students are responsible for a set of final deliverables: A rough draft of your final report is due at 11:59 PM on 4/28/23. The final draft is due at 11:59 PM on 5/3/2023 (submission will be accepted on Sakai) and a final presentation on 5/3/2023. The requirements for the final deliverables are discussed below."
  },
  {
    "objectID": "project/index.html#week-1-proposal-and-design",
    "href": "project/index.html#week-1-proposal-and-design",
    "title": "Project",
    "section": "",
    "text": "During the first lab section of your project you will need to produce a project proposal. The project proposal is made up of four parts: a budget indicating what you intend to buy for the project, a one-page maximum written description of your experiment, a detailed schematic showing how you will install your new sensors, and a mechanical drawing showing how you plan to mount or ruggedize the sensors for water submersion. Take a look at this example proposal to see what we’re looking for.\nYou will need to price the sensors and mechanical parts (easiest online) in order to make an accurate budget. You are expected to have selected parts for your experiment before submitting the budget. Selecting these parts will depend on your experimental design: does your motor have enough torque to overcome the surf? Does your pressure sensor have the maximum ratings necessary to achieve the depth you desire? Common vendors include Digikey, McMaster-Carr, JameCo, SparkFun, AdaFruit and many others. The faculty will not approve any budgets greater than $50 (including taxes and shipping). Supplies in the E80 lab don’t count towards your budget limit (and remember that there are some links to get you started on the final set of lecture slides and the section above). Some of the supplies, notably speakers and microphones, are available for temporary checkout for prototyping but not for permanent installation. These supplies are cheap enough that we expect you to buy your own for permanent installation.\nThe one-page description of your project should lay out your scientific and/or engineering goals and describe how your sensor system will help you meet those goals. There are a few specific points that it should address:\n\nIt should answer the question, “Why would anyone do this project?” or “Why should I care about your results?”\nIt should outline your hypothesis and what you’re comparing it to: what is the x of your experiment, what is the y and what two x-y curves are you comparing? If you need to cite literature to establish your scientific relationship, then don’t forget you can access papers through Mudd’s network.\nIt should state the sensors you are using and describe how they relate to your scientific goals. Will they require any exceptional mechanical, electrical or software design?\nIt should convince the reader that you considered a number of design alternatives when you picked your project. The minimum bar for doing this is including five two-line project descriptions for projects that you considered but did not pursue.\nIt should outline requests for specific launch times or locations for your robot. There are two locations we can launch in Dana Point: the public beach and the Ocean Institute pier. We have a limited number of launch slots on the pier: two teams can launch in each half hour slot from 8:30 a.m. to 2:30 p.m. If your scientific goals would benefit from a particular launch time slot or slots on the pier, then you should request those slots in this project description. If some time slots are oversubscribed, we will award them randomly. We will prioritize giving every team that wants one a deployment off the pier over giving one team multiple deployments.\n\nYour schematic should be detailed and thorough and show every wire, resistor, capacitor (don’t forget bypass capacitors) and power source that you intend to connect in order to get your sensor signals onto your MTB. You should consider the voltage swing each component will provide and carefully design your analog front end and power supply so that these voltages are appropriate for the Teensy. Annotating voltage swings on your schematic is a good way to keep track of these design choices. You will be asked about every component on your schematic, so be prepared to back up your decisions with calculations or reference designs from the datasheets.\nYou may find the design files for the PCBs you will use helpful while coming up with your schematic, so they are linked below. The CAD files for each board are viewable usingKiCAD. Also, consider re-reading the Introduction to the E80 Motherboard document from lab 1.\n\nMotherboard (schematic, layout, CAD files)\nProtoboard (schematic, layout, CAD files)\n\nYou used the motherboard in labs 1, 2 and 7, so you should be familiar with it. All of your new electronics will be assembled on a new board called the protoboard, which has been designed to resemble a breadboard. Note that there are special areas on the protoboard layout for voltage regulators; you have battery power available to your protoboard but no regulated voltage supplies, so you will need to use these areas to add voltage regulators. The screw holes on all of the boards are grounded. Connections from the motherboard to protoboard will be made with a ribbon cable as shown here and here.\nYour mechanical drawings should indicate sensor locations and be sufficient to convince a skeptical professor that your intended mechanical modifications are physically possible. Include approximate calculations - mass, center of gravity, buoyancy, or torque for motors - where appropriate to justify that these modifications serve your experimental goals. Especially include calculations if you think a professor will challenge you on the feasibility of your modification. (“e.g.: Can you really submerge an air filled tank with THAT motor?”) Be sure to look up datasheets for motors if necessary.\nRemember, you have $50 per team to spend towards your project. A few important notes on spending:\n\nAll purchases must be approved by your section instructor, who will initial your purchase requests on the google spreadsheet.\nYou must make all purchases to be shipped to the Engineering Department.\nOnce your section instructor has approved your purchase, the designated purchaser may use the online department form New Purchase Order Request Form to make the purchase request.\nOn the purchase request form, be sure to include your team number and section number.\nPlan for a relatively long lead time, around a week.\nOn the purchase request form, put Professor Brake as the professor to approve the purchase request.\nDO NOT FORGET TAXES AND SHIPPING COSTS WHEN CONSIDERING YOUR BUDGET.\n\nFaculty use this checklist when checking students off for this week, so feel free to review your proposal against that list.\nThis is the list of parts available to you."
  },
  {
    "objectID": "project/index.html#week-2-breadboard-demonstration",
    "href": "project/index.html#week-2-breadboard-demonstration",
    "title": "Project",
    "section": "",
    "text": "At the end of the second week of the project you must demonstrate a prototype of your sensors in communication with the Teensy on the motherboard (MTB). Attach the sensors to your MTB (possibly using a breadboard), write software to measure them and design a set of experiments which will allow a professor to observe your sensor’s outputs for known values. Be mindful of your construction techniques: if you do a good job building your circuits this week then you will be ready for your deployments. If you do a bad job, then you will need to do confusing rebuilds. The more sensors you get working this week, the smoother next week will go.\nDuring your checkoff you will be expected to show your professor (preferably) a live demonstration or (if necessary) a set of slides which show your measured data.\nHere is a PDF of the Week 2 check-off list that we will use to evaluate your circuits."
  },
  {
    "objectID": "project/index.html#week-3-pcb-solder-and-test",
    "href": "project/index.html#week-3-pcb-solder-and-test",
    "title": "Project",
    "section": "",
    "text": "After you have tested all of your sensors (possibly breadboarded) and demonstrated that they work, you need to transfer them to the hardware that will go in your AUV. As discussed in Section 1 above, the available protoboards are PC boards that are laid out like two halves of a breadboard side by side to which you can solder parts. They connect to the motherboard through the multipin connectors and ribbon cable. They are usually the easiest way to ruggedly mount your components for use in your AUV. Consider carefully the proper ways to mount and waterproof so that your sensors function as desired. You do not need to complete your waterproofing and final assembly, but everything should be ruggedly mounted and you want to come as close to the final configuration as possible.\nSome helpful guidelines:\n\nParts like the bypass capacitors and assorted resistors should be soldered directly to the PCB. For more complex parts, such as 16-pin DIP op-amps, it may be wise to solder a socket in place and mount the part in the socket to facilitate replacing them if something goes wrong.\nGood wiring technique and tight layout will make your robot much more reliable and easier to debug.\nYou should use stranded wire whenever the wire will be subject to flexure or bending during use, disassembly or reassembly. It is much less likely to break under strain than solid core wire. As a general rule, when connecting two points on the protoboard use solid wire, when connecting to anything off board, use stranded wire.\nYou may need to make penetrator bolts for this project stage. A method for applying marine epoxy to bolts that have been drilled out can be found here. Remember that marine epoxy needs to dry overnight, so making these bolts requires two days because epoxy is applied twice. Be sure epoxy always dries in a fume hood: staff can show you an appropriate hood to use. We use 1/4” holes for our penetrator bolts and we hold the undrilled bolts in vises while drilling out the central hole. We find that six wires is about the maximum that we can fit into one bolt before the epoxy starts failing. You will also need to drill holes for these penetrator bolts in your project box. Be sure to use 1/2” step drill bits (which we have in our cupboards) to drill out the holes. Standard drill bits will result in ragged holes that are not watertight.\nDefault_Robot.ino, is a good starting point for integrating your sensors with the Teensy. It adds some implements a couple features: logging of the analog pins, an updated diagnostic display, improved GPS resolution, and a few header files that help keep things organized. Be sure to read the README because it contains a lot of information about the features and adjustable knobs in each file. The adjustments described in the README file are sufficient to cover most standard student projects.\n\nDuring your checkoff, you will be expected to explain to your professor how everything is intended to work, and (preferably) give your professor a live demonstration of data collection and display or (if necessary) display a set of slides which shows your measured data. The difference from Week 2 is that everything should be mounted, and not just breadboarded. You should be able to mount your electronics assembly in your box, power it from battery power, mount the box in your robot and demonstrate the ability to log data when it is in this configuration. Any mechanical modifications to the robot should be complete before the checkoff so that the instructors are verifying that your electronics assembly can be mounted inside of the final version of your robot.\nHere is a PDF of the Week 3 check-off list that we will use to evaluate your protoboards."
  },
  {
    "objectID": "project/index.html#week-4-first-field-deployment-data",
    "href": "project/index.html#week-4-first-field-deployment-data",
    "title": "Project",
    "section": "",
    "text": "During the fourth week you need to demonstrate that your AUV is watertight and capable of autonomous operation by measuring field data with it. Because GPS reception in the tank room is poor we’ll accept faked control loops or open loop control during tank room deployments. You are expected to test and (hopefully) launch your AUV at the pHake Lake at the Bernard Field Station during your regular section time. The main goal of these tests is to ensure that your sensors work in the field. The secondary goal is to evaluate your experimental data so you can make changes to ensure that you will be able to meet your experimental goals. Do not forget that seawater and lake water have very different salinities, conductivities, and densities. A neutrally buoyant AUV in pHake Lake will bob like a cork in the ocean.\nRemember that field deployments are often easier if you have a deployment checklist, so write one. Here is an example deployment checklist. The intent is that this checklist will prevent mistakes during your deployment; you’ll be thinking about enough things out in the field that you are very likely to forget about the details of the care and feeding of your sensor suite without a list to check against.\nYou will also submit an experimental plan. The plan must include the number of deployments you intend to do and the times and locations of those deployments. You should list the expected range of signals you expect to observe (based on theory or preliminary measurements) during the deployments. The document should show the planned robot trajectory for each deployment and discuss how the robot will be recovered (kayak, it comes back and we grab it, pool hook, etc.).\nThe main E80 Lab (Parsons B171) will be open from 12:30 pm - 1:00 pm this week so that you may retrieve your equipment. You must be at the side gate of Bernard Field Station by 1:15 pm; an instructor will meet the group at the gate at the start of your section. The teaching team will be out at BFS. This is one of the two chances that you’ll have to collect data in the field, and field data is required for your final report and presentation.\nTools and facilities will be available at BFS. A generator will be running power supplies, oscilloscopes, soldering irons, and other electronics. Multimeters and common hand tools will be available. Common supplies will be available too: heat shrink, glue, hot air guns, etc. A set of work tables will be set up beneath shaded tents. Sunscreen and water will be available during this deployment, but be sure you’ve eaten before you arrive. Faculty will announce a cancellation of the launch in the case of severe rain. Be sure to walk to the BFS gate in pairs and only cross at crosswalks.\nYou should show slides containing analyzed data at your checkoff. Be sure to overlay data sets that should be compared against one another and include analytical models to compare against on your plots.\nNOTE: It is possible to increase the logging time of your robot by increasing the FILE_BLOCK_COUNT value in Logger.h. This can help you to log data during long deployments."
  },
  {
    "objectID": "project/index.html#week-5-final-field-deployment-data",
    "href": "project/index.html#week-5-final-field-deployment-data",
    "title": "Project",
    "section": "",
    "text": "The fifth week is your final chance to test and verify your deployment checklist and fix any flaws that were discovered at pHake Lake. You will have your regular section time to rebuild, retest, and modify your system to get more meaningful data by adjusting such things as amplifier gains and offsets, sampling rate, sensor location on the AUV, and deployment times of your sensor. You will not have access to pHake Lake, but you will have access to the water tank during the week.\nThe final field deployment is on Saturday, 4/22/2023. We will take buses from Foothill Blvd just north of Parsons to Dana Point, leaving at 6:30 am sharp. If you miss the bus, you will have to find your own way to Dana Point.\nYou must have your robot and any supplies that your group plans to bring with you in order to be ready to load the bus. Attendance will be taken to ensure that the bus doesn’t leave anyone behind at the end of the day, so make sure you are counted in the morning and you tell us if you are leaving separately from the bus.\nSunscreen, water and some snack/lunch food (pizza, granola bars, chips) will be provided. The same facilities as the lake deployment will be available. In addition, we will provide freshwater buckets and rice for recovering flooded robots.\nFaculty will announce a cancellation of the launch in the case of severe rain. The launch may be rescheduled for Sunday in that case.\nVideos have been recorded to give students a sense of the following environment characteristics:\n\nWater outside the harbor: Exercise great care if you want to operate a robot here. Most AUVs will be trashed. Watch this video.\nCurrents close to docks: This video shows the worst I saw. In this video, no motors are turned on.\nNormal AUV navigation in the harbor: This video shows it is possible.\nWater clarity: Get an idea of what you can see by watching this video.\n\nYour deliverables are slides with updated data from your deployment, which you will share with your instructors during your checkoffs at Dana Point. You are not allowed to do any deployments after launch day, so use this week well!"
  },
  {
    "objectID": "project/index.html#week-6-data-analysis-and-preparation-for-report-and-presentation",
    "href": "project/index.html#week-6-data-analysis-and-preparation-for-report-and-presentation",
    "title": "Project",
    "section": "",
    "text": "There are no deliverables during the sixth week of the project, but professors will be available to help you analyze data from your robot deployments. The experiments that you may conduct are limited, and the spirit of the restrictions is that you may only conduct small, in-lab forensic experiments to figure out problems if things went wrong.\nSpecifically:\n\nYou may not take any measurements underwater; you’re confined to “lab.”\nYou may not build or measure new sensors: if it didn’t work during a deployment then we’re not interested in measurements from it.\n\nYou should focus your efforts on analyzing your data and forensic analysis of failures in your sensors. If a small experiment would verify a forensic assumption or explain a quirk in your data, then you should feel free to carry it out. (For example, a team once needed to see how their measurements from an LED varied with angle, and they took their still functional sensor outside and waved it around to take that measurement.) When in doubt, ask an instructor.\nYour report is due at the end of this week."
  },
  {
    "objectID": "project/index.html#final-presentation",
    "href": "project/index.html#final-presentation",
    "title": "Project",
    "section": "",
    "text": "On presentation day you will give a fifteen-minute, in-person presentation followed by ten minutes of questions and answers. This presentation should be aimed at a technically competent audience with diverse training backgrounds that is unfamiliar with the details of your project. (e.g.: The audience is a group of professional engineers from different disciplines.) You should imagine the presentation is being given to employers or peers at a conference, which means that you should hold yourself to high standards of professionalism: practice until the presentation is smooth and well-polished, think carefully about the story your visual aids are telling, ensure that the visual aids are readable and high quality, and dress in traditional business or business casual clothing. Every member of the team should participate in the presentation.\nHere is the rubric.\nSuccessful presentations often include discussions of:\n\nScience and/or engineering goals\nSensors and mechanical modifications to achieve those goals\nDesign process and calculations\nPre-deployment modeling and expected measurements\nData processing\nComparisons between modeling and measured data\nInterpretation of these results\nRecommendations for future work\n\nThe questions during the Q&A portion of your presentation will come from both the general technical audience and your instructors. They will range from straightforward to very detailed. Be sure to prepare by practicing fielding pointed questions and by cultivating a comprehensive understanding of your work. Preparing supplementary slides which you can deploy for common questions can help you during the Q&A.\nThe presentation schedule is available here. Please be at least ten minutes early to your presentation."
  },
  {
    "objectID": "project/index.html#final-report",
    "href": "project/index.html#final-report",
    "title": "Project",
    "section": "",
    "text": "Each team is responsible for submitting a report on their deployments in IEEE format. The report has a maximum length of ten pages including figures and appendices. Your purpose is to convey your experiments, your apparatus and your results. You should assume your audience is made of technical professionals of diverse backgrounds (i.e.: not all instructors of the course) who are unfamiliar with your specific project. You should write the report such that a reader could replicate your experiment and compare their results to yours. Note that this is a different audience than the video presentation. This rubric is the rubric which will be used to grade the reports.\nHere are a few tips for good report writing:\n\nThe main body is often most digestible if it is written in several sections. Which sections are included and the ordering of your will depend on the specifics of the experiment, but some common, important topics are provided in the modified rubric. If it is impossible to address every point in the modified rubric while staying inside the page limit then (1) make your writing more compact by using mathematical notation, tables or figures and (2) prioritize what is most important for your report.\nBe sure to follow the practices of scientific writing: use quantifiable descriptions instead of vague adjectives (“a 25% change” instead of a “a big change”), make sure all plots have labeled axes with units, make sure text in figures and tables is large enough to read, don’t use the first person (including cheats like “the team did X”) and minimize passive voice by making the experiment or artifact the subject of your sentences.\nMake sure to do some pre-writing to organize your text. Decide what topics you want in the report and where you want to put them before you start writing. Don’t talk about topics in the wrong sections or repeat yourself unnecessarily.\nDon’t forget that your writing style has a huge impact on how your work is received. Make a careful editing pass to be sure that each sentence says what you mean it to say. Then make a second editing pass for spelling, punctuation, common grammatical errors (especially tense mismatch, which is endemic), and gracefulness of language.\n\nHere are some examples of student reports and a well-written Tech Memo (c/o Prof. Spjut, don’t mind the non-IEEE formatting).\nA rough draft of your final report is due at XX. The final draft is due at XX."
  },
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "Reference Designs",
    "section": "",
    "text": "This design adapts the lab turbidity meter to the requirements for being immersed and waterproofed. The instructions and procedure are here. A zip file of the design files is here."
  },
  {
    "objectID": "reference/index.html#auv-turbidity-meter",
    "href": "reference/index.html#auv-turbidity-meter",
    "title": "Reference Designs",
    "section": "",
    "text": "This design adapts the lab turbidity meter to the requirements for being immersed and waterproofed. The instructions and procedure are here. A zip file of the design files is here."
  },
  {
    "objectID": "reference/index.html#anemometer",
    "href": "reference/index.html#anemometer",
    "title": "Reference Designs",
    "section": "Anemometer",
    "text": "Anemometer\nAn anemometer is used for measuring wind speed. It is useful for a surface vehicle, but not so much for a submersible. The instructions and procedures are here. A zip file of the design documents is here."
  },
  {
    "objectID": "reference/index.html#weather-vane",
    "href": "reference/index.html#weather-vane",
    "title": "Reference Designs",
    "section": "Weather Vane",
    "text": "Weather Vane\nA weather vane is used for indicating wind direction relative to the local coordinates of a surface craft. It is not so useful for a submersible. There are two possible sensors for the weather vane. The first is the MLX90316. The instructions and procedure are here. The second is the ACE128. The instructions and procedures are here. A zip file of the design files for both is here."
  },
  {
    "objectID": "reference/index.html#velocity-sensor",
    "href": "reference/index.html#velocity-sensor",
    "title": "Reference Designs",
    "section": "Velocity Sensor",
    "text": "Velocity Sensor\nThe reference design for the velocity sensor was not terribly successful. Perhaps you can learn from other’s mistakes. The instructions and procedures, such as they are, are here. A spreadsheet with the design calculations is here. A spreadsheet with the experimental results is here. A zip archive with the design documents is here.\nSalinity Sensor"
  },
  {
    "objectID": "reference/index.html#future-designs",
    "href": "reference/index.html#future-designs",
    "title": "Reference Designs",
    "section": "Future Designs",
    "text": "Future Designs\nIf you had a design that was particularly successful and you would like to share it with future generations of E80 students, let the professors know, and it may show up here."
  },
  {
    "objectID": "labs/lab6/index.html",
    "href": "labs/lab6/index.html",
    "title": "Lab 6: Fluid Dynamics",
    "section": "",
    "text": "Team size: 4"
  },
  {
    "objectID": "labs/lab6/index.html#learning-objectives",
    "href": "labs/lab6/index.html#learning-objectives",
    "title": "Lab 6: Fluid Dynamics",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter successful completion of this lab, you will be able to…\n\nPerform computational fluid dynamics simulations in COMSOL Multiphysics.\nUse the wind tunnel to perform experiments to verify the results of your fluid dynamics simulations."
  },
  {
    "objectID": "labs/lab6/index.html#introduction",
    "href": "labs/lab6/index.html#introduction",
    "title": "Lab 6: Fluid Dynamics",
    "section": "0. Introduction",
    "text": "0. Introduction\nThis lab will take place in Parsons B178 and the wind tunnel room. E80 students should already have card access to Parsons B178. If you cannot access the room, please contact Sue Lindley in the Engineering Department Office.\nYou will be using COMSOL Multiphysics software Version 5.6 in this lab. You may practice using COMSOL and go through Granny Spark’s COMSOL tutorials outside of your designated lab time. However, you CANNOT run COMSOL simulations on LAB-RELATED objects outside of your designated lab time. These objects include the cylindrical objects tested in the wind tunnel, the NACA 6412 wing, your team’s low-drag body, and your team’s wing.\nThis lab will be completed in full teams. It is up to the team to determine which parts of the lab are done by whom, and at what time during the 4 hours of lab time.\nEach team will have exactly 60 minutes to use the wind tunnel to run experiments and collect data.\nThe instructions for this lab are not detailed. You are expected to review the resources, plan out your experiments, and fill in the blanks.\nNot all deliverables are due at the end of lab this week. You will submit a submission sheet at the end of lab as a team (per usual), but each of you will write a technical memorandum about the team’s process and findings individually. Details of the tech memo are discussed in the deliverables section below, but it is important to lay out the boundaries of collaboration on the tech memo. Specifically, the team must not collaborate on any writing in the tech memo at any time, and the team may not collaborate on the data or code after the assigned lab section is finished.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet ishere.\nBy the end of the laboratory the student will:\n\nDemonstration of the safe start-up and shut-down sequence for the wind tunnel.\nDetermination of wind speeds in the wind tunnel using a Pitot tube and digital manometer.\nMeasurement of drag forces on various shapes in the wind tunnel at various flow velocities.\nUtilize COMSOL computational fluid dynamics (CFD) to model the drag and lift forces of the objects tested in the wind tunnel.\nCompare the results obtained in the wind tunnel to those predicted by COMSOL.\nUse COMSOL to create and simulate your own low-drag object and predict the drag forces that it will experience during service.\nUse COMSOL to create, simulate, and predict the lift and drag characteristics of a NACA 6412 wing.\nUse COMSOL to create, simulate, and predict the lift and drag characteristics of your own wing.\n\nYou will be provided with:\n\nThe HMC wind tunnel.\nA stainless steel Pitot tube (similar to the one shownhere).\nA Dwyer Series 475 Mark III Digital Manometer (clickhere for more information).\n\nNote: Dwyer has released an app that you will find very useful. Search for “Dwyer Air Velocity Calculator” on Google Play or the App Store.\n\nA cylinder to be mounted in the wind tunnel. These will be provided to you at the start of the lab, and you will measure their dimensions during lab.\nThree different nose shapes for the cylinder. These will be provided to you at the start of the lab, and you will measure their dimensions during lab.\nA computer with COMSOL in the Engineering Computing Facility (ECF). It is highly recommended that you practice using COMSOL in your pre-lab. Please see the links to the Grandma Spark’s Step-By-Step guides and COMSOL tutorial videos mentioned below. You will not have time to learn COMSOL during lab.\n\nHere are informative resources on fluids, aerodynamics, and COMSOL that you should review PRIOR to lab:\n\nNASA Beginner’s Guide to Aerodynamics (clickhere)\nE80 fluid measurements lecture notes (clickhere)\nAirfoil database (clickhere)\nAirfoil and angle of attack definitions (clickhere)\nNASA Wing geometry definitions (clickhere)\nNASA Reynolds Number guide (clickhere)\nGrandma Spark’s step-by-step video guide to using COMSOL to model a cylinder in laminar flow (105 MB PowerPoint File, clickhere)\n\nEach slide on the PowerPoint contains a video! Make sure that you press play on each video!\n\nGrandma Spark’s step-by-step video guide to using COMSOL to model a NACA 0009 airfoil in laminar flow (164 MB PowerPoint File, clickhere)\n\nEach slide on the PowerPoint contains a video! Make sure that you press play on each video!\n\nCOMSOL video tutorials for beginners (clickhere)\nHow to use COMSOL 3D geometry tools (clickhere)\nHow to form unions in COMSOL (clickhere)\nComputing lift and drag forces in COMSOL (clickhere)\n\nNOTE: The COMSOL CFD portion of this lab will consume most of your time in this lab. You will not finish this lab if you are not prepared. Reviewing the COMSOL resources above and practicing COMSOL ahead of time will be essential to your team’s success in this lab.\nIMPORTANT SAFETY TIPS: For in-person labs\n\nFollow the dress code for E80 Lab. Everyone must wear safety goggles during the test. Hearing protection will be provided if needed.\nNever turn the fan on before checking to see that loose objects are NOT in the test chamber and the test chamber cover plate is secure.\nEnsure that all test personnel are at a safe distance from the wind tunnel itself (at least 24” in any direction).\nMake sure the article under test is securely fastened inside the test chamber.\nNever run the wind tunnel without a proctor or professor present."
  },
  {
    "objectID": "labs/lab6/index.html#wind-tunnel-experiments",
    "href": "labs/lab6/index.html#wind-tunnel-experiments",
    "title": "Lab 6: Fluid Dynamics",
    "section": "1. Wind Tunnel Experiments",
    "text": "1. Wind Tunnel Experiments\nYour team will have exactly 60 minutes to complete this section. The order in which teams will conduct experiments in the wind tunnel will be randomly determined at the start of each section. Be ready to go first! If you are in a six-team section, you may be using the wind tunnel during the final hour of lab, and therefore you must have a plan in place to obtain data and submit your report by the deadline.\n\n1.1 Getting to Know Your Wind Tunnel\nIn this sub-section, you will familiarize yourself with the wind tunnel and relate airspeed to fan RPM.\n\nA professor or proctor will take you to the wind tunnel room.\nLocate the gray box that is the fan RPM controller for the wind tunnel. Clickhere to see what it looks like.\nLocate the white box that displays the fan speed RPM. Clickhere to see what it looks like.\nLocate the LVDT box that displays lift and drag forces. It is located above the wind tunnel test chamber. Ensure that it is turned on. If it is not, the switch is on the right side of the box in the rear. DO NOT TOUCH THE KNOBS ON THE FRONT OF THIS BOX. Clickhere to see what the box looks like.\nEnsure that the fan is not running in the wind tunnel by pushing the “STOP” button.\nOpen the wind tunnel test chamber by removing the four clamps and gently removing the window.\nVerify that there is nothing but a Pitot probe and the force measurement stand in the wind tunnel. If there are other objects in the wind tunnel, remove them.\nObserve the mounting of the Pitot probe in the wind tunnel. Ensure that the end of the tube is properly oriented directly facing the incoming airflow. Ensure that the pitot probe is connected to the digital manometer.\nTurn on the digital manometer. Zero it. To calculate air velocity, you can use this Excel spreadsheetPitotVelocityCalculator , thisGoogle Sheet, the Dwyer Air Velocity Calculator app or use the Dwyer Air Velocity Calculation Card that has been placed next to the wind tunnel. Use of these tools or the card requires that you know:\n\nThe ambient (room) temperature. Read the temperature sensor in the room.\nThe relative humidity. Read the humidity sensor in the room.\nThe absolute air pressure. Use a barometric pressure app on a cell phone.\n\nGENTLY push on the left side of the force measurement stand with one finger. What is happening to the drag force shown on the LVDT?\n\nGENTLY push on the right side of the force measurement stand with one finger. What is happening to the drag force shown on the LVDT?\nGENTLY push on the top of the force measurement stand with one finger. What is happening to the drag force shown on the LVDT?\nGENTLY pull on the top side of the force measurement stand with two fingers. What is happening to the lift force shown on the LVDT?\n\nInstall the window on the test section and ensure that it is clamped at four corners. Make sure that everyone in the room is wearing safety goggles.\nPower up the wind tunnel by pushing the green button labeled “START” on the gray box. You adjust the speed with the knob on the gray box. You read the RPM in the white box near the main power switch. Measure the airspeed from 20% to 90% of max fan speed (in increments of 10%). Allow time at each measurement for the wind tunnel to come to steady state. Repeat measurements with increasing and decreasing RPM to ensure reproducible results.\n\nObserve the lift and drag forces exhibited by the force measurement stand at each RPM setting. How will these values be used in your calculations?\nPlot a calibration curve of airspeed in the test section versus RPM. Perform the necessary regression analysis and display the appropriate error bars.\nZero the speed in the wind tunnel and push the red button labeled “STOP” on the gray box.\n\n\n\n1.2 Measuring the Drag Forces on Cylindrical Objects\nPLEASE BE GENTLE WHEN MOUNTING FIXTURES ONTO THE FORCE MEASUREMENT STAND. IT IS A SENSITIVE PIECE OF EQUIPMENT. DO NOT PUSH, PULL, PRESS DOWN, OR PULL UP WITH GREAT FORCE. ASK FOR HELP FROM A PROCTOR OR PROFESSOR IF YOU NEED IT.\n\nWhen opening the wind tunnel, always ensure that there is no airflow by pressing the red “STOP” button and verifying that the fan RPM is zero.\nMount the cylindrical fixture on the force measurement stand and ensure that it is horizontal. Make sure that the side of the cylinder that says “FRONT TOWARDS FLOW” is actually facing the incoming flow.\nInstall “Nose #1” on the cylinder.\nAfter ensuring that the window is securely clamped, power up the wind tunnel.\nWhat values for lift and drag are shown on the LVDT box at zero flow velocity? How will these values be used in your calculations?\nMeasure the drag force on the object from 20% to 90% of max fan speed (in increments of 10%).\n\nUsing Excel, MATLAB, or other graphing software, plot a curve of Drag Force vs. Reynolds Number for Nose #1 (Do this in Parsons B178).\n\nUsing Excel, MATLAB, or other graphing software, plot a curve of Drag Coefficient vs. Reynolds Number for Nose #1 (Do this in Parsons B178). What are the correct reference area and characteristic length?\n\nBring the flow back down to zero and press the red “STOP” button, and then repeat steps 3-6 for “Nose #2” and “Nose #3”.\n\nUsing Excel, MATLAB, or other graphing software, plot a curve of Drag Force vs. Reynolds Number for Nose #2 and for Nose #3 (Do this in Parsons B178).\n\nUsing Excel, MATLAB, or other graphing software, plot a curve of Drag Coefficient vs. Reynolds Number for Nose #2 and for Nose #3 (Do this in Parsons B178). What are the correct reference area and characteristic length?\n\n\n\n\n1.3 Measuring the Drag Forces on a Scale Robot Model\n\nWhen opening the wind tunnel, always ensure that there is no airflow by pressing the red “STOP” button and verifying that the fan RPM is zero.\nMount the 1/3 scale model of the robot in the wind tunnel chamber using a zip tie (as shownhere,here andhere). Pay attention to its orientation. Ensure the window is securely clamped and power up the wind tunnel.\nRecord necessary calibration information, then record drag force on the object from 20%-90% of max fan speed (in increments of 10%).\n\nUsing Excel, MATLAB, or other graphing software, plot a curve of Drag Force vs. Reynolds Number for the scale model of the robot (Do this in Parsons B178).\n\nUsing Excel, MATLAB, or other graphing software, plot a curve of Drag Coefficient vs. Reynolds Number for the scale model of the robot (Do this in Parsons B178). What are the correct reference area and characteristic length?"
  },
  {
    "objectID": "labs/lab6/index.html#cfd-simulations-of-cylindrical-objects",
    "href": "labs/lab6/index.html#cfd-simulations-of-cylindrical-objects",
    "title": "Lab 6: Fluid Dynamics",
    "section": "2. CFD Simulations of Cylindrical Objects",
    "text": "2. CFD Simulations of Cylindrical Objects\nMake sure to download and watch Grandma Spark’s step-by-step video guide to using COMSOL to model a cylinder in laminar flow (106 MB PowerPoint File, clickhere). Each slide on the PowerPoint contains a video. Make sure that you press play on each video.\n\n\nUsethese dimensions of the objects that will be tested in the wind tunnel. Note that the wind tunnel test section is 1 ft x 1 ft x 2 ft.\nPerform COMSOL CFD simulations of your tests in the wind tunnel for the Cylindrical Object with Nose #1.\n\nUsing Excel, MATLAB, or other graphing software, create a graph of Drag Force vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s). How does drag force change with Reynolds Number?\nUsing Excel, MATLAB, or other graphing software, create a graph of Cd vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s). How does Cd change with Reynolds Number?\nCreate a velocity profile (single slice at centerline of body) for the 45 m/s flow condition. Grandma Sparks step-by-step guide shows you how to do this.\nCreate a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition. Grandma Sparks step-by-step guide shows you how to do this.\nHow do your computational results for drag and Cd compare to your experimental results? Were there any similarities or differences? What factors caused the differences? Explain.\n\nPerform COMSOL CFD simulations of your tests in the wind tunnel for the Cylindrical Object with Nose #2.\n\nHint: An object can be rotated in COMSOL by selecting a Cartesian Axis and entering values for x, y, and z.\nUsing Excel, MATLAB, or other graphing software, create a graph of Drag Force vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s). How does drag force change with Reynolds Number?\nUsing Excel, MATLAB, or other graphing software, create a graph of Cd vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s). How does Cd change with Reynolds Number?\nCreate a velocity profile (single slice at centerline of body) for the 45 m/s flow condition.\nCreate a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition.\nHow do your computational results for drag and Cd compare to your experimental results? Were there any similarities or differences? What factors caused the differences?\n\nPerform COMSOL CFD simulations of your tests in the wind tunnel for the Cylindrical Object with Nose #3.\n\nHint: An object can be rotated in COMSOL by selecting a Cartesian Axis and entering values for x, y, and z.\nUsing Excel, MATLAB, or other graphing software, create a graph of Drag Force vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s). How does drag force change with Reynolds Number?\nUsing Excel, MATLAB, or other graphing software, create a graph of Cd vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s). How does Cd change with Reynolds Number?\nCreate a velocity profile (single slice at centerline of body) for the 45 m/s flow condition.\nCreate a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition.\nHow do your computational results for drag and Cd compare to your experimental results? Were there any similarities or differences? What factors caused the differences?\n\nDesign an object using COMSOL that can achieve a LOWER Drag Coefficient than ALL of the cylindrical configurations that you have tested. Your team’s object should have the same reference area as the cylindrical bodies that you have tested, and should have a minimum length that is no less than the cylindrical object with Nose #1, and a maximum length no more than the cylindrical object with Nose #3.\n\nHINT: If your object does not converge during the study, it is not possible for COMSOL to simulate it. Please re-design your object so that it converges during the study.\n\nProvide a detailed drawing of your object that shows relevant dimensions.\nDiscuss the design process for your team’s low-drag body. Why did you choose the dimensions and shape of your object?\nUsing Excel, MATLAB, or other graphing software, create a graph of Cd vs. Reynolds Number for air velocities between 5 m/s and 45 m/s (in increments of 10 m/s).\nHow does the performance of your team’s low-drag object compare to the ones that you tested?\n\nCreate a velocity profile (single slice at centerline of body) and a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition.\n\nUse COMSOL to determine the drag forces that your custom cylindrical body will encounter when it is moving in water. COMSOL allows you to change the fluid in your simulations from air to water. However, changing the fluid to water alone is not enough. You need to use similitude to determine appropriate velocities in water. Use the concept of similitude to convert velocities in air between 5 m/s to 45 m/s to velocities in water. Once appropriate velocities in water are determined…\n\nPlot the drag force vs. Reynolds Number for your cylindrical body in water.\n\nPlot the Cd vs. Reynolds Number for your cylindrical body in water.\n\nSimulate a model of your robot (foundhere) in water at various velocities such that the Reynold’s number is comparable to the Reynold’s number of the scale model of the robot in the wind tunnel.\n\nPlot the drag force vs. Reynolds Number for your simulated robot\nPlot the Cd vs. Reynolds Number for your simulated robot\nNote that you’re not expected to construct this model during the lab like the other shapes. The following instructions will help to do that\n\nSelect Model Wizard -&gt; 3D -&gt; Laminar Flow -&gt; Stationary. Set units under the Geometry tab in the left hand column.\nRight click on “Geometry” in the left hand column and select “Import”. When importing, make sure that under “Objects to import” both the “Solids” and “Surfaces” boxes are checked and that under “For surface objects:” you select “Form solids” (seephoto).\nCreate the box and set up the laminar flow simulation as usual."
  },
  {
    "objectID": "labs/lab6/index.html#cfd-simulations-of-wings",
    "href": "labs/lab6/index.html#cfd-simulations-of-wings",
    "title": "Lab 6: Fluid Dynamics",
    "section": "3. CFD Simulations of Wings",
    "text": "3. CFD Simulations of Wings\nFor parts 2 and 3 of this section, please make sure to watch Grandma Spark’s step-by-step video guide to using COMSOL to model a NACA 0009 airfoil in laminar flow (164 MB PowerPoint File, clickhere). Each slide on the PowerPoint contains a video. Make sure that you press play on each video.\n\nUse thesedimensions of a wing that COULD be tested in the wind tunnel. Note that the wind tunnel test section is 1 ft x 1 ft x 2 ft. What are the appropriate reference area and characteristic length to determine the lift force and coefficient of lift for the flat plate?\n\nPerform COMSOL CFD simulations of your tests in the wind tunnel for the “Flat Plate Wing”. At three angles of attack (5, 15, and 45 degrees), vary the flow velocities between 5 m/s and 45 m/s.\n\n\n\nPlot the lift force vs. Reynolds Number at each angle of attack at flow velocities between 5 m/s and 45 m/s (in increments of 10 m/s). Plot the three curves on the same axes so that you can compare your results.\n\nMake sure that you indicate the angle of attack on each curve on the plot. A legend or labels would be helpful!\n\n\nPlot the coefficient of lift (Cl) vs. Reynolds Number at each angle of attack at flow velocities between 5 m/s and 45 m/s (in increments of 10 m/s). Plot the three curves on the same axes so that you can compare your results.\n\nMake sure that you indicate the angle of attack on each curve on the plot. A legend or labels would be helpful!\n\n\nCreate a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition at a 15 degree angle of attack.\nHow does the pressure on the bottom of the wing compare to the top of the wing at a 15 degree angle of attack?\n\n\nPerform COMSOL CFD simulations of a wing based on the NACA 6412 airfoil that has a similar reference area as your flat plate at three angles of attack (5, 15, and 45 degrees). Vary the flow velocities between 5 m/s and 45 m/s.\n\nPlot the lift force vs. Reynolds Number at each angle of attack at flow velocities between 5 m/s and 45 m/s (in increments of 10 m/s). Plot the three curves on the same axes so that you can compare your results.\n\nMake sure that you indicate the angle of attack on each curve on the plot. A legend or labels would be helpful!\n\n\nPlot Cl vs. Reynolds Number at each angle of attack at flow velocities between 5 m/s and 45 m/s (in increments of 10 m/s). Plot the three curves on the same axes so that you can compare your results.\n\nMake sure that you indicate the angle of attack on each curve on the plot. A legend or labels would be helpful!\n\nHow does the NACA 6412 wing’s Coefficient of Lift compare to the flat plate at an angle of attack of 15 degrees?\nCreate a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition at a 15 degree angle of attack.\nHow do the pressure differences between the top and bottom surfaces of the NACA 6412 wing compare to the pressure difference on the flat plate at 45 m/s and a 15 degree angle of attack?\n\nDesign a wing that will have a higher Cl than the flat plate and NACA 6412 wing at a chosen angle of attack (pick one: 5, 15, or 45 degrees), varying the flow velocities between 5 m/s and 45 m/s. Your wing must have the same reference area as the flat plate and NACA 6412 wing. You could either draw an airfoil in COMSOL and extrude it, plot it using points in the yz work plane followed by an extrusion, or any other method that your team chooses. This wing has to be unique to your team. You may use features of other airfoils in the airfoil database for inspiration, but you are not allowed to use any of the airfoils in the database.\n\nProvide a detailed drawing of your wing that shows relevant dimensions (e.g. chord line, camber line, max thickness, clickhere for details).\nPlot the lift force vs. Reynolds Number at your chosen angle of attack for flow velocities between 5 m/s and 45 m/s (in increments of 10 m/s). Overlay the results of the flat plate and NACA 6412 wing at this angle of attack to compare the performance of the three wings.\n\nMake sure that you indicate the chosen angle of attack on the plot. A legend or labels would be helpful!\n\n\nPlot the Cl vs. Reynolds Number at your chosen angle of attack for flow velocities between 5 m/s and 45 m/s (in increments of 10 m/s). Overlay the results of the flat plate and NACA 6412 wing at this angle of attack to compare the performance of the three wings.\n\nMake sure that you indicate the chosen angle of attack on the plot. A legend or labels would be helpful!\n\nHow does your wing’s Coefficient of Lift compare to the NACA 6412 wing and the flat plate at your chosen angle of attack?\nCreate a pressure contour plot (Contour Type: Filled) for the 45 m/s flow condition your chosen angle of attack."
  },
  {
    "objectID": "labs/lab6/index.html#deliverables",
    "href": "labs/lab6/index.html#deliverables",
    "title": "Lab 6: Fluid Dynamics",
    "section": "4. Deliverables",
    "text": "4. Deliverables\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet ishere.\nRecall that no late work is accepted, we will grade whatever is submitted at the deadlines.\nIn addition, you will each individually submit a technical memorandum, which requires you to combine the writing skills that we have practiced in previous weeks in a longer format. Because the memorandum is longer, it is not due at the end of your lab week. Final report due date is 3/3/2023 for Group B and 3/10/2023 for Group A.Beware that the E72 final problem set has a due date that occasionally conflicts with this memo, so plan your time carefully.\nThe memo will be written based onthis prompt, and we will dothis activity during the writing and reflection (Friday, 2/24/2023 for Group B and Friday, 3/3/2023 for Group A) section of the week in which lab 6 is carried out. The activity won’t take the whole section, so we encourage you to use the time to get started writing. When you have a draft, feel free to use thispeer review worksheet on your own time. We are grading on the criterion shown inthis rubric, but we’ve left out the point breakdown because we want you to figure out what’s important to emphasize on your own.\nYou are allowed to process your data any time until the report is due to write this report. If you are unable to generate results with your data in any section, then you may generate your own, simulated example data inside of MATLAB to analyze. You may not record any new data or run new COMSOL simulations. You may not share code, figures or text with any other students while writing this memo, though you may discuss ideas. We recommend that you make use of the writing center. Remember that you must submit a tech memo to pass the class."
  },
  {
    "objectID": "labs/lab7/index.html",
    "href": "labs/lab7/index.html",
    "title": "Lab 7: Autonomous Navigation",
    "section": "",
    "text": "Team size: 4\nIn order to give everyone access to the tank, we will be running the lab as follows:\nUntil every team has completed the required portion of the lab, tank access for extra credit sections will be at the discretion of the Professor in charge."
  },
  {
    "objectID": "labs/lab7/index.html#learning-objectives",
    "href": "labs/lab7/index.html#learning-objectives",
    "title": "Lab 7: Autonomous Navigation",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter successful completion of this lab, you will be able to…\n\nUse your robot to log GPS signals.\nImplement a proportional control algorithm for depth control.\nCalibrate the magnetometer on in the inertial measurement unit."
  },
  {
    "objectID": "labs/lab7/index.html#introduction",
    "href": "labs/lab7/index.html#introduction",
    "title": "Lab 7: Autonomous Navigation",
    "section": "0. Introduction",
    "text": "0. Introduction\nThe objective of this lab is to equip your robot with the ability to autonomously navigate between depth or X, Y waypoints. By doing so, you will learn how your robot’s software fits together and about various navigation sensors.\nThis lab will be done in teams of 4 students. The lab will take place in multiple locations: students will start work in the E80 lab room, but some experiments will be conducted in the Parsons parking lot (where your GPS can receive signals) and in the tank room. Don’t forget that you need to check out GPS’s and other expensive equipment from professors or proctors. You will also need to fill out hardware failure reports if you need replacements for these pieces of equipment.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here."
  },
  {
    "objectID": "labs/lab7/index.html#familiarize-yourself-with-the-software",
    "href": "labs/lab7/index.html#familiarize-yourself-with-the-software",
    "title": "Lab 7: Autonomous Navigation",
    "section": "1. Familiarize Yourself With the Software",
    "text": "1. Familiarize Yourself With the Software\nOpen E80_Lab_07.ino in the Arduino IDE. This sketch will be used as starter code for lab 7. Also make sure you have the up to date E80 libraries by performing a git fetch and checking that it’s set as your current sketchbook. Confirm that you can compile and upload the starter code to your Teensy.\nIn lab 1 you modified your main .ino file using the Arduino IDE. In this lab you will be modifying library files which are written in C++ (and thus have file extension .cpp). These files need to be opened in a text or code editor like Notepad or Sublime, not a Word Processor like Microsoft Word. The most popular source code editor these days is Visual Studio (VS) Code which is cross platform. Both support syntax coloring. The changed files will be compiled to your robot when you compile the E80_Lab_07.ino file from the Arduino IDE. You will also be asked to refer to header files (with the file extension .h) which are used to set up constants, initialize variables and do other house cleaning for the .cpp files of the same name.\nThe libraries are included in E80_Lab_07.ino using #include statements at the top of the file. Then commands from the libraries are used to create special variables, which we call objects, to represent your sensors like the GPS and the IMU. Finally, those objects are used to interact with the sensors. Read the E80_Lab_07.ino file and make note of where the libraries are included and used. Figure out how often your sensors are sampled by reading E80_Lab_07.ino and the TimingOffsets.h header file located in libraries/main and record your answer on your submission sheet."
  },
  {
    "objectID": "labs/lab7/index.html#position-measurements-via-imu",
    "href": "labs/lab7/index.html#position-measurements-via-imu",
    "title": "Lab 7: Autonomous Navigation",
    "section": "2. Position Measurements via IMU",
    "text": "2. Position Measurements via IMU\nSet up your PCB board stack that includes a teensy/dataloggerIMU/E80 PCB with a battery. Confirm you can successfully log IMU data. Refer to lab 1 instructions if you need help. Information about the IMU can be found here.\nWith the data logger running, move your board stack along a linear path in the horizontal x-y plane, keeping the orientation fixed. That is, create your own global Cartesian coordinate frame on a table, and set the position of the board stack to be (0,0,0), and set the orientation of the board stack to be (0,0,0). Then, move the board stack through the following positions: (0,0,0), (0.5,0,0), (0,0,0). Assume coordinates are in units of meters. Don’t move too fast. It may help to wait 5 seconds at the (0.5,0,0) way point.\nUsing MATLAB, load the IMU data and calculate the position of the board stack as a function of time. Plot the x,y coordinates of the board stack. Does the plotted path resemble the straight 0.5 meter path? If not, why? Think about how errors are accrued with double integration of IMU measurements. You can review the Integrals and Derivatives videos from the Data Analysis lectures if you need a refresher."
  },
  {
    "objectID": "labs/lab7/index.html#magnetometer-calibration",
    "href": "labs/lab7/index.html#magnetometer-calibration",
    "title": "Lab 7: Autonomous Navigation",
    "section": "3. Magnetometer Calibration",
    "text": "3. Magnetometer Calibration\nA magnetometer measures the earth’s magnetic field, so it can be used as a compass to sense your robot’s heading. Read this article describing how it works. We have a magnetometer integrated into our IMU.\nEvery magnetometer has errors in its measurement, which can be byproducts of manufacturing or of local magnetic disturbances (eg: the magnetic declination is -10.52 degrees at Mudd). You need to calibrate those errors out before you can trust your magnetometer results. This article on magnetometer calibration is a good summary of the process.\nTake your robot outside, far from buildings, and log your magnetometer data while your robot is held upright and you slowly (over ~10s) rotate 360 degrees while standing in place. Log your data. Next, program your Teensy with our magnetic calibration software – Mag_Calibration.ino – and use Mag_Calibration.m to extract the hard and soft iron correction coefficients. You will need MATLAB version 2018b or later to run this code. Save the figure generated by Mag_Calibration.m to your submission sheet. Update SensorIMU.h, which is included in the IMU reading library SensorIMU.cpp, with these coefficients. Turn in a circle again outside and save your magnetometer readings again. Generate the following two plots: a scatter plot of mx vs. my where your calibrated and uncalibrated data are superimposed (what units are the axes?), and a plot of heading vs. time for both your calibrated and uncalibrated data.\nIn this class we are using east-north-up local tangent plane coordinates. This means that you need to convert the heading from the IMU, which should have 0 degrees due North and positive angle in the CW direction, to yaw angles where 0 degrees points in the positive X direction (due East), and positive angles are in the CCW direction. If 0 degrees doesn’t face perfectly East, (which is location dependent due to abnormalities in the Earth’s magnetic field), you can add an offset angle to ensure it does. Put code to make this conversion in XYStateEstimator.cpp. Include the code you use to convert from heading to yaw in your submission sheet.\n\nNote: the most common programming mistakes that we see are messing up units (is this angle in degrees or radians?) and failing to re-map angles between -\\(\\pi\\) and \\(\\pi\\) after they are calculated (3\\(\\pi\\)/2 will crash a lot of your code unless you’re very careful)."
  },
  {
    "objectID": "labs/lab7/index.html#position-measurements-via-gps",
    "href": "labs/lab7/index.html#position-measurements-via-gps",
    "title": "Lab 7: Autonomous Navigation",
    "section": "4. Position Measurements via GPS",
    "text": "4. Position Measurements via GPS\nIntegrate the Adafruit Ultimate GPS into the board stack so that the Teensy has access to GPS measurements: First, solder a 9x1 female header pin row onto the motherboard at the position labelled GPS (see Lab 1 for details). Second, solder male header pins to the BOTTOM of the GPS breakout board. Be sure to get the orientation correct, (see image here). Note that screws, nuts, and standoffs may help secure the GPS breakout board to the motherboard.\nTest your GPS Sensor integration by opening the serial monitor while E80_Lab_07.ino is running. Make sure your battery is plugged into the stack (your GPS is powered off the battery and not off the same USB connection that powers your Teensy), and that you are outside the building so that you can get GPS lock and measurements.\nModify the library file named XYStateEstimator.cpp so that it calculates the x,y position (in meters) of the board stack with respect to a Cartesian coordinate frame whose origin is at ( 34.106465°, -117.712488°). Consult the XYStateEstimator.h file to see what variables you have available. Design your coordinate frame so the X axis points due East and the Y axis points due North. The code to make this transformation should be placed in the function named XYStateEstimator::updateState(), which is already in the file. Note, the x,y positions will be stored in the variables state.x and state.y\nIt may help to first make sure you are aware of how longitude and latitude work. This link is helpful and has a nice image to help visualize the coordinate system. There are several algorithms that have been used to convert longitude-latitude coordinates to x-y coordinates. There is the Vincenty formula, the Haversine equation, and linear transformations that simply scale the coordinates. The first two methods incorporate the curvature of the earth which is important when the vehicle is traveling many kilometers. Scaling methods are easier, but can only be used if distances are short. A good reference can be found here.\nWe will use a modified version of the Forward Equirectangular Projection, where we multiply by the radius of curvature R_earth. We note that the conversion of latitude to y is easier and if we assume the earth is a sphere (which it is to within ±0.25%), so we can use the relationship between the distance along an arc’s edge, the radius of the arc, and the angle, (e.g. state.y = R_earthlatitudeChange). To calculate x, note that it is a function of latitude, (e.g. state.x=R_earthlongituteChange*cos(latitude at origin)\nTo test that your sketch is functioning well, log the x,y positions (they are logged by default in the sample code) as you walk from the coordinate system origin to Foothill Blvd. Walk along the sidewalk East towards Shanahan. Then walk South between Shanahan and Parsons. Cut West back to Parson’s building and end at the origin. The path is illustrated here. It takes time (sometimes a few minutes) before the GPS receiver gets a lock on the signals from the satellites. The GPS lock LED can help you identify if your board has achieved lock. You may want to have the serial monitor open (and print x,y to the screen) when walking the course: this will inform you if your conversion makes sense. Using MATLAB, plot the logged x,y positions from the path. Only plot the x,y points for which the GPS has a lock on satellites.\n\nNote: See above note on common programming errors. They really crop up here."
  },
  {
    "objectID": "labs/lab7/index.html#p-control-on-depth",
    "href": "labs/lab7/index.html#p-control-on-depth",
    "title": "Lab 7: Autonomous Navigation",
    "section": "5. P Control on Depth",
    "text": "5. P Control on Depth\nIn order to implement closed loop depth control with your AUV, it first needs to be able to sense its current depth. To measure depth, you will be using a pressure sensor adapter PCB (picture, schematic, layout, KiCAD) to connect a pressure sensor to pin A0 of your Teensy. This adapter can be found on the central table.\nIn the library file named ZStateEstimator.cpp, in the function called ZStateEstimator::updateState(), you can see that the z position (depth) of the robot is calculated using the function’s input pressure_signal. The main loop() of the Arduino code is where z_state_estimator.updateState() is called. By reviewing this loop(), you can see that this pressure_signal input is receiving the output of analogRead(PRESSURE_PIN). analogRead() is an Arduino function that reads the value of a specified pin, and PRESSURE_PIN is a variable set in Pinouts.h, currently set to pin A0 (pin 14) of the Teensy. The pressure_signal input provides the pressure sensor signal in Teensy units. The ZStateEstimator::updateState() function then converts from Teensy units to Volts, then finally converts from Volts to depth [m] using the variables depthCal_slope and depthCal_intercept. This depth measurement is stored in state.z.\nThe depthCal_slope and depthCal_intercept are not calibrated to your pressure sensor, so you will have to update them. Find where these variables are defined in the library file called ZStateEstimator.h (which is included in ZStateEstimator.cpp), and write down the default values and line numbers for these variables. After finding the calibration slope and intercept for your pressure sensor, this is where you will update them.\n\nNote: Navigating the code like this is helpful in understanding the interaction between the .h files, the .cpp files, and the Arduino sketch. The .h files are the interfaces, they hold information on variables that are used in other files and the functions of the .cpp files of the same name; the .cpp files are the implementations of these functions where the variables held in .h files are used; and the sketch is the top level instructions where some of these functions and variables are used to implement the desired behavior of the robot.\n\nTo calibrate your pressure sensor, get a pressure sensor adapter PCB and a pressure sensor, a graduated cylinder and a meter stick with pressure tubing. Edit ZStateEstmiator::updateState() by uncommenting the two lines of code below the calculation of the z position that initialize a string and print a string with the function printer.printMessage(). The pressure sensor voltage should now appear in the serial monitor, and you will use that display to calibrate your pressure sensor.\nAttach the pressure tube to the pressure sensor and attach the adapter PCB to the motherboard, then plug the pressure sensor into the adapter. Open the serial monitor while E80_Lab_07.ino is running and record both depth and voltage readings. Measure at least seven evenly spaced depths (measured in meters) between the water level and the bottom of the cylinder. Plot the data in order to make a calibration curve and determine the equation of the line of best fit, then update the calibration slope and intercept in ZStateEstimator.h.\nAdd a Proportional depth control system to your robot by modifying the DepthControl.cpp file. Add the following steps:\n\nSet the variable depth_des to the desired depth, which can be found in the wayPoints array at the index currentWayPoint (i.e. wayPoints[currentWayPoint]).\nCalculate the current depth depth using the state.z variable, which was calculated in ZStateEstimator::updateState().\nCalculate the error e as the difference between depth_des and depth. Pay attention to the order you subtract these (How will this affect the control effort?).\nSet the vertical motor control effort uV to be the product of the control gain Kp and the error e. The default value of Kp is 80, but you can change it if your motor is too weak or too strong.\nBound the vertical control effort between -200 and 200. These are empirical values that work well for most situations. Depending on your motor, you may need to go beyond these limits. You can go up to a maximum of +/- 250.\n\nTest your depth P control using the meter stick with tubing and the graduated cylinder. Attach the pressure tubing to your pressure sensor (careful not to bend the pressure sensor - it’ll be easier if you take the pressure sensor out of the adapter, attach the tubing, then plug it back in). Then, while E80_Lab_07.ino is running with the serial monitor open, insert the meter stick into the cylinder, keeping an eye on the DepthControl:, Depth_Des:, Depth:, and uV: values printed to the serial monitor. Make sure that the Depth is reporting a similar value to the current depth of the meter stick to confirm that your calibration works. Then watch the control effort uV change as the difference between Depth and Depth_Des changes, making sure it behaves as expected for proportional control.\nFinally, get an E79 umbilical (found in the lab room) and attach it to your robot. Put the motor in the vertical position, and use a ziptie to secure the tube to the frame. Connect the tubing to your pressure sensor and the motor wires to the Motor C port on your motherboard. Test if the umbilical works by running E80_Lab_07.ino while the serial monitor is open. The motor should start spinning to get to the first waypoint at 0.5 meters. Check if it’s rotating in the correct direction; if not, switch the wires on your motherboard (or change the order you subtracted the depth and depth_des to get the error in DepthControl.cpp, or change the sign of Kp). Blow in the pressure tubing and confirm that the depth changes, and that the motor responds to the change in depth.\nOnce everything is tested and working, bring your robot to the tank room. Put it into the tank, run the sketch, and let the robot go to the two depth waypoints at 0.5m and 1m. Keep an eye on the values and messages printed to the serial monitor. Be sure to log your data, then plot the logged uV, depth and depth_des as a function of time.\n\nNote: Be careful with the umbilical, it may not have enough slack for the robot to go down to 1 meter; if that’s the case, you can change the depth waypoints in the setup() function of E80_Lab_07.ino. If your robot’s motor is too strong or too weak, you may need to change your Kp in DepthControl.h.\n\n\n\nNote: You can instruct the robot to stay at each depth waypoint for a specified amount of time by changing the diveDelay variable defined in the setup() function of E80_Lab_07.ino. e.g.: diveDelay = 3000 will tell the robot to wait at each depth waypoint for 3 seconds before continuing."
  },
  {
    "objectID": "labs/lab7/index.html#clean-up",
    "href": "labs/lab7/index.html#clean-up",
    "title": "Lab 7: Autonomous Navigation",
    "section": "6. Clean up",
    "text": "6. Clean up\nBe sure to dry and return your robot and board stack to your designated Tupperware container in the cupboard. Because this is the last lab of the semester, your team may keep the battery and GPS used for this lab. Make sure the battery is not stored fully charged."
  },
  {
    "objectID": "labs/lab7/index.html#deliverables",
    "href": "labs/lab7/index.html#deliverables",
    "title": "Lab 7: Autonomous Navigation",
    "section": "7. Deliverables",
    "text": "7. Deliverables\nAll labs require two submissions per group. The first submission is a submission sheet in which specific data must be shown. The submission sheet is due at the end of the 4 hour lab period. The submission sheet must be uploaded before the end of your lab session at 5:15 pm. Note that only ONE member of each team should access and submit the submission sheet. It is the responsibility of that team member to add the rest of the team’s names to the submission sheet.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here.\nThe second submission is a writing assignment. In a deviation from normal patterns, we will do the whole writing assignment in class, and it will be due after the first 30 minutes of the writing and reflection section. The rest of the 3/10/2023 Friday section will be our Project Kickoff meeting."
  },
  {
    "objectID": "labs/lab7/index.html#extra-credit-1.-go-autonomous",
    "href": "labs/lab7/index.html#extra-credit-1.-go-autonomous",
    "title": "Lab 7: Autonomous Navigation",
    "section": "Extra Credit 1. Go Autonomous",
    "text": "Extra Credit 1. Go Autonomous\nIn this section you will once again have your robot dive in the tank room using Proportional depth control, but this time you will use your waterproof box to hold your battery, motherboard and pressure sensor on your robot instead of using the umbilical, going completely autonomous.\nYou will need to use a pressure tube penetrator bolt (found in the lab room) so that the pressure sensor inside the box will be able to read the pressure outside the box. You will also need to drill another hole for this pressure penetrator bolt into your waterproof box. Be sure to use a 1/2” step drill bit (which we have in our cupboards) to drill out the hole. Standard drill bits will result in ragged holes that are not watertight. Make sure that the placement of your hole isn’t too close to any protrusions on the surface of the box; You want the rubber washer to be completely flat against the surface.\nNext, you will want to test if your box is waterproofed with the new hole, then add ballast to your robot in order to make it close to neutrally buoyant. Refer to the section on AUV Assembly in Lab 1 for directions on doing this.\nWhen your robot is ready, bring it to the tank room. Upload the sketch, make sure you’re logging your data, close your box and place your AUV in the water. Let your robot dive to the two depth waypoints (0.5) and (1), then include a plot of the uV, depth and depth_des as a function of time in the submission sheet (it should look similar to the submission for section 3). Then change the waypoints and the diveDelay, keeping the values within reason. Run the updated sketch and let your robot dive to the new waypoints, confirming that it’s waiting at each waypoint. Include a plot of the uV, depth and depth_des as a function of time for this run, which should show the depth staying still at each waypoint and the depth_des changing only after the delay is over."
  },
  {
    "objectID": "labs/lab7/index.html#extra-credit-2-proportional-surface-control",
    "href": "labs/lab7/index.html#extra-credit-2-proportional-surface-control",
    "title": "Lab 7: Autonomous Navigation",
    "section": "Extra Credit 2: Proportional Surface Control",
    "text": "Extra Credit 2: Proportional Surface Control\nIn this section you will implement a Proportional surface control system with your AUV using the GPS on your motherboard. Use E80_Lab_07_EC2.ino as the starter code for this portion. You will also interact with two new library files: SurfaceControl.cpp and SurfaceControl.h. Confirm that you can compile and upload the starter code to your Teensy.\nAdd a Proportional surface control system to your robot by modifying the SurfaceControl.cpp file. Add the following steps:\n\nCalculate the desired yaw angle using the atan2 function, i.e. yaw_des = atan2(y_des - y, x_des - x). In this case, (x_des, y_des) is the desired position of the robot.\nCalculate the error e as the difference between yaw_des and the yaw you calculated in section 4.\nSet the control effort u to be a product of the control gain Kp and the error e.\nSet the right and left motor thruster values (uR and uL) to be the avgPower + u and avgPower - u respectively. Start by setting avgPower to be 50. This can be modified later if you want your robot to have faster or slower forward motion.\nMultiply uR and uL by Kr and Kl respectively, (e.g. uR = uR*Kr;). The default values for Kr and Kl are 1.0, but you can change them later if your motors don’t run at the same speed when given the same PWM signal. Bound the control values to be between 0 and 127.\n\nTest your P control by walking the campus in the direction your P control guides you when the path is defined in the code to be the three x,y coordinates (125,-40), (150,-40), (125,-40). This should walk you 25 meters along the centerline of campus (see picture here). Walk at a slow speed , turning in response to the u_R and u_L values printed to the Serial monitor. E.g. if the the values are u_R=45 and u_L = 55, then veer right. Be sure to log your data. Plot the logged path of x, y points, (bonus points if plotted on top of an image of campus). Also plot the angle error and control effort u as a function of time.\nFinally, attach motors to the Motor A and Motor B port and repeat the above experiment, this time obeying your observations of the motor’s rotation rates rather than printed u_R and u_L values. Modify Kr and Kl if necessary to balance your motors. Pay special attention to how motors affect your yaw measurement: they have powerful magnetic fields that are likely to disrupt your experiment if you don’t handle them with care. Include plots of your x,y points, angle and control error."
  },
  {
    "objectID": "labs/lab5/index.html",
    "href": "labs/lab5/index.html",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "",
    "text": "Team size: 4"
  },
  {
    "objectID": "labs/lab5/index.html#learning-objectives",
    "href": "labs/lab5/index.html#learning-objectives",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter successful completion of this lab, you will be able to…\n\nUse the oscilloscope to perform Fourier analysis of a measured signal.\nExplain the impact of parameters such as sampling frequency and sample number on the resolution and frequency range of a Fast Fourier Transform."
  },
  {
    "objectID": "labs/lab5/index.html#introduction",
    "href": "labs/lab5/index.html#introduction",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "0. Introduction",
    "text": "0. Introduction\nIn this lab you will work as a team of four with underwater speakers to perform position measurements relative to your robot and relative to fixed beacons. The beacon measurements are most easily interpreted in the frequency domain, so you will be using Fourier analysis to understand the behavior of the signals. The purpose of this lab is to demonstrate the power of underwater acoustic measurements and to force you to wrangle early and often with Fourier analysis.\nFor the required portion of the Lab, beacons will be broadcasting sine waves at 9 kHz, 11 kHz, 13 kHz.\nFor the extra credit sections, each team is assigned an acoustic channel, and the team will need to filter out other teams’ measurements in addition to the ambient beacon signals in order to extract useful information. If you attempt these extra credit sections, you will be free to transmit up to 5 W at 14 kHz +1 kHz *(team number)+/- 300 Hz. If you emit at other frequencies while your peers are taking data then you may damage their experiments, so be diligent in controlling the frequency at which you broadcast.\nThese channels are in the audio range, so try to keep your experiments underwater and short lest your peers shout at you scornfully about the high-pitched whine you’re producing. Be aware that your receiver could be overloaded by broadcasters in other channels, so keep an eye on your time domain signal to be sure that it is not clipping.\nWe are using both benchtop electronics and water in this lab, and the two don’t mix, so BE EXTREMELY CAREFUL when putting anything in the water, removing anything from the water or mounting anything near the water. Instructors will stop your experiments if they think they pose a water hazard to equipment.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here."
  },
  {
    "objectID": "labs/lab5/index.html#introduction-to-the-fft",
    "href": "labs/lab5/index.html#introduction-to-the-fft",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "1. Introduction to the FFT",
    "text": "1. Introduction to the FFT\nEven if not every student can have hands on the oscilloscope (as a reminder, the Agilent/Keysight 2024A which has this spec sheet) during this part of the experiment, we would like every student to, at minimum, watch the proceedings. Please carry out this section as a whole group. Also note that much of this section can be predicted and analyzed very accurately in prelab with sample data generated in MATLAB.\nConnect a function generator to an input channel of the oscilloscope. Double check that your oscilloscope channel is DC coupled. Drive an 11 kHz sine wave with an amplitude of 1.5 V and an offset of 0 V into the oscilloscope. Set the time scale of the oscilloscope so that 50 cycles of the signal fit on the screen. Use the math function of the oscilloscope to display the FFT of the signal. Set the span of the FFT to 100 kHz, the center to 50 kHz and the window to rectangular. Look at the FFT produced by the math menu. Is it what you expect?\nDescribe what happens to the FFT when you do each of the following:\n\nIncrease the drive signal’s frequency by 1 kHz.\nChange the drive signal into a square wave. Back up your assertions that this makes sense with a rigorous analytical analysis.\nChange the window from rectangular to Hanning. Back up your assertions that this makes sense with a graphical analysis.\nChange the time scale of the oscilloscope. Explain your results in terms of the sample rate, the number of samples and the total amount of time over which samples have been recorded. What is your oscilloscope’s sample rate? You can find it displayed on the oscilloscope or figure it out from the scope’s datasheet. Note that the sample rate may vary with your time scale: if you are taking a long acquisition, it is set by the size of the oscilloscopes memory – i.e.: your total number of samples is fixed – and if you are taking a short acquisition it is limited by the speed of the sampling circuitry in the oscilloscope.\n\nDrive the square wave signal from item 3 into the oscilloscope, export your data (make sure that the max length option is turned on in your save settings) and then use MATLAB to take the FFT of your data. First take the FFT with no windowing and then use a Hanning window. Does the FFT in MATLAB match the oscilloscope and your analysis?"
  },
  {
    "objectID": "labs/lab5/index.html#circuit-interfaces-to-microphones",
    "href": "labs/lab5/index.html#circuit-interfaces-to-microphones",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "2. Circuit Interfaces to Microphones",
    "text": "2. Circuit Interfaces to Microphones\nYou will need to use microphones to pick up sounds in the tank. We will be using a waterproof electret microphone called the CME-1538-100LB. Build the reference circuit for your electret microphone. The reference circuit’s output is AC coupled – which means a capacitor is attached in series with the output – and your oscilloscope probe looks like a large impedance attached to ground. What effects do the coupling capacitor and the probe resistance have when both are in place? Drawing a full circuit model may help to answer that question. Be sure that you consider the effects of the AC coupling circuit at both low and high frequencies. Verify that you can receive signals with your electret microphone by clapping near it. What frequencies in your hand clap signal contain the most energy?\nYou will need to amplify the signal that you receive in the tank to make it visible on your oscilloscope. Build an amplifier with a gain of 100 by cascading two stages that each have a gain of 10. You need to spread your gain over two stages because of an op-amp parameter called the gain-bandwidth product (often abbreviated GBW or GBP). How do you calculate your bandwidth once you know your amplifier’s gain and the GBW? Use a dual-rail op-amp to build these amplifier stages (why?). Record your amplifier schematic in the submission sheet.\nIf your first amplifier stage is a non-inverting amplifier, then add a large resistor (~100k) between the positive amplifier input and ground. You don’t need this resistor if your first stage is an inverting amplifier. This resistor is necessary to prevent the input leakage current in your op-amp from changing your results.\nYou may need to solder leads to this electret microphone to plug it into your breadboard. You should consider twisting the leads together to form twisted pair wire. These wires do not need to be very long. In the tankroom, you will be provided with water-proofed microphones with long leads so that you can dip the microphones into the tank from the work tables."
  },
  {
    "objectID": "labs/lab5/index.html#distance-measurement-based-on-amplitude-decay-from-continuous-wave-beacons",
    "href": "labs/lab5/index.html#distance-measurement-based-on-amplitude-decay-from-continuous-wave-beacons",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "3. Distance Measurement Based On Amplitude Decay from Continuous Wave Beacons",
    "text": "3. Distance Measurement Based On Amplitude Decay from Continuous Wave Beacons\nOne way to locate your robot in the water is to listen to three beacons and calculate your distance to each of them based on the beacon power received at your robot. In this section we are going to create calibration curves which could allow you to trilaterate your robot based on a set of beacons. You will need to put your microphone into the tank, which will require long microphone wires as discussed in the last section.\nThree beacons are installed in the test tank and will be constantly emitting sine waves of approximately 9 kHz, 11 kHz and 13 kHz. Figure out which beacon corresponds to which frequency by taking acoustic measurements in the water. Which beacon corresponds to which frequency? What are their exact frequencies?\nOur goal is to see if we can infer the position of our microphone by measuring the power emitted by the beacons. We have an analytical expectation of how much power we should receive at a given distance from a speaker (what is it?), and you are going to compare that ideal analytical expression to measurements in the noise-limited, high-multipath environment of the tank. You need to be sure that your measurements capture evidence of multipath in the tank, so how closely will you need to space your measurements? (Hint: think about the wavelength of your waves and the size of the tank to predict multipath interference – which is kind of “spatial frequency” – to figure this out. Also, don’t be afraid to look this up on external resources.)\nMove your microphone around in the tank and measure the power to create received voltage vs. distance calibration curves for each beacon. Be sure to test how the orientation of your measurement system affects your received power and take that information into account when recording measurements. The FFT will be important to separate out the contribution of each speaker. Be sure to save and report some examples of the underlying FFT data which confirms that you have taken these measurements.\nMake an analytical calculation of how much voltage you expect to observe. Note that you don’t need to have the transmit power of the beacon or the pressure-to-voltage constant of your microphone (which is linear) to make this model. You can fit an appropriate voltage vs distance function to your data even without knowing these constants. How many parameters will you use to fit your function?\nCompare your measurements against your ideal analytical model by overlaying them on the same plot. Comment on the suitability of amplitude measurements for range finding. Your comment should not conclude that your hardware is not working: your equipment needs to be working well enough to tease out interesting environmental effects.\nAlways connect to your Teensy pins through the E80 motherboard, which has protection circuits designed to prevent damage to the Teensy."
  },
  {
    "objectID": "labs/lab5/index.html#sampling-audio-with-a-teensy",
    "href": "labs/lab5/index.html#sampling-audio-with-a-teensy",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "4. Sampling Audio with a Teensy",
    "text": "4. Sampling Audio with a Teensy\nThis section requires that you use the Teensy sampling rigs that have been set up in the tank room. It is an amplifier with an offset, and an E80 MTB is used to digitize your data. While tempting to connect your single analog signal directly to a Teensy, an E80 MTB with protection circuits should be used to prevent damage to the Teensy. Connect your microphone to a Teensy sampling rig, connect the rig to your computer with a micro USB cable and then run E80_Lab05_Teensy_Rig.m in order to retrieve information from the rig. This software uses the Teensy’s analog to digital converter to measure signals received from the microphone attached to the setup. The sample rate on the Teensy is programmable in this software. (The Teensy should already be running E80_Lab05_Teensy_Rig.ino)\n\nUse the software to measure vectors of sample data with sample rates of 10kHz and 100 kHz.\nPlot the magnitude of FFTs of the 10 kHz and 100 kHz sampled data. Describe any differences between the resulting graphs and explain what causes the differences.\nPlot the first 100 points of the time data for the 10 kHz and 100 kHz signals. Pay attention to the x axis of the signals. Describe any differences in the measured data and explain why they are there.\nWhat is the minimum sampling rate you should use to measure signals in the tank? Prove it by sampling data at the frequency and presenting an FFT of that data."
  },
  {
    "objectID": "labs/lab5/index.html#deliverables",
    "href": "labs/lab5/index.html#deliverables",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "5. Deliverables",
    "text": "5. Deliverables\nAll labs require two submissions per group. The first submission is a submission sheet in which specific data must be shown. The submission sheet is due at the end of the 4-hour lab period and must be uploaded before the end of your lab session at 5:15 pm. Note that only ONE member of each team should access and submit the submission sheet. It is the responsibility of that team member to add the rest of the team’s names to the submission sheet.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here.\nThe second submission is a writing assignment, usually around 1 page in length. Each writing assignment will be based on a prompt, and must be completed by each student individually; no collaboration is allowed on the text or figures in these assignments, though you may speak among yourselves about concepts in keeping with the collaboration rules of the course. A first draft of the writing assignment must be uploaded by noon on Friday, and you need to bring a printed copy of your draft to the writing and reflection section on Friday at 1:15 p.m. During the first hour of the writing and reflection, you will engage in a peer editing exercise. The second hour of the Writing and Reflection section is reserved for you to edit your draft to produce a final draft of the writing assignment. This final draft must be uploaded before the end of the Writing and Reflection section on Friday at 3:15 p.m. Since multiple submissions are permitted, and only the last one is graded, you may want to submit a draft at 3 p.m. as insurance. The writing assignment is based on this prompt. This is the peer feedback worksheet. Note that you should include relevant calculations to explain the ideal analytical curves on your calibration plots on your submission sheet.\nNote that the rubric is included in the prompt.\nRecall that no late work is accepted, we will grade whatever is submitted at the deadlines.\nAfter the writing and reflection section at the end of each week every person (not just one person per team) must submit a team dynamics check-in survey. These are part of your participation grade. The survey link can be found on the home page."
  },
  {
    "objectID": "labs/lab5/index.html#cleanup",
    "href": "labs/lab5/index.html#cleanup",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "6. Cleanup",
    "text": "6. Cleanup\nReturn your PVC to the stock in the E80 lab. Be sure to return electret microphones, power amplifier boards and speakers to the electronics table."
  },
  {
    "objectID": "labs/lab5/index.html#extra-credit-distance-measurement-based-on-time-of-flight-measurements",
    "href": "labs/lab5/index.html#extra-credit-distance-measurement-based-on-time-of-flight-measurements",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "Extra Credit: Distance Measurement Based on Time-of-Flight Measurements",
    "text": "Extra Credit: Distance Measurement Based on Time-of-Flight Measurements\nAnother common acoustic measurement is time-of-flight (ToF) range finding. ToF measurement relies on sending out a specially designed acoustic pulse from a speaker and measuring how long it takes for it to reach a microphone. Often the microphone is measuring reflections of your initial speaker pulse (eg. on a sounding vessel), but we’ll get started by just sending our speaker pulse straight to our microphone.\nYou need to be able to carefully control the signals being sent from your speaker in order to stay in your audio channel while creating a short pulse. Specifically, you will send a burst of sine waves: a small number of sine wave cycles. We can accomplish this by using internally triggered burst modulation, an advanced feature of the old signal generators (the HP/Agilent 33120A). This function is not available on the function generators in your oscilloscope. You can control burst mode by pressing the series of keys shown below. Read the manual for clarification on how these key presses work.\n\nTurn burst modulation mode on: Shift + the ramp/burst button / The text ‘burst’ will be highlighted at the top of the screen.\nTurn burst modulation mode off: Shift + the ramp/burst button / The text ‘burst’ will no longer be highlighted at the top of the screen.\nTurn manual triggering on and internal triggering off: Shift + the TRIG button / The text ‘trig’ will be highlighted at the top of the screen\nTurn manual triggering off and internal triggering on: Shift + the TRIG button / The text ‘trig’ will no longer be highlighted at the top of the screen\nChange the number of cycles sent out in each burst or the burst repetition rate:\nShift + Enter / Screen says “A: Mod Menu,”\nv / Screen says “AM Shape,”\n\n / Screen says \"AM Source,\"\n\n\n / Screen says \"FM Shape,\"\n\n\n / Screen says \"Burst CNT, \"\n\nv / Screen says some number.” OR &gt; / “Burst Rate,” and then V / “some number.”\nEdit the number you see and press enter to save the setting.\n\nYou will be using Dayton DAEX25W-8 Audio Exciters as speakers to convert voltage signals into acoustic signals. These speakers, like most speakers, have very low input impedance. What is their impedance? Calculate the maximum power you could drive into them using one of the old HP/Agilent 33120A signal generators. You need to account for the output impedance of the signal generator in this calculation. Audio amplifiers, like the LM384, help us to bypass this problem. They are designed to drive large amounts of power through speakers. What is the maximum average power an LM384 can drive into a DAEX25W-8?\nWe have created a power amplifier board containing an LM384 to allow you to drive your speakers. Follow these instructions to use the driver board. You only have access to one power supply in the tank room, so you’ll need to power your microphone amplifier off the same rails as the LM384 amplifier board. Be careful not to provide too much voltage to the microphone amplifier.\nYou are measuring in a noisy environment (beacons, other teams, etc), so measuring your received signal will also depend on carefully timing the snapshot that your oscilloscope takes. By gathering data that is synchronized with the signal you are sending and averaging over many samples, you can cancel out signals that are not at the same frequency as the burst repetition rate of your signal. This is called coherent averaging. Set this up using the following steps:\n\nUse a second oscilloscope channel to probe the output of your function generator (or attach the trigger output of your function generator to your scope’s trigger input)\nTrigger your oscilloscope on the channel attached to the output of the function generator (or on the trigger input)\nSet your oscilloscope to normal mode acquisition (so that it will only capture a new screen of data when it receives a trigger) and adjust the horizontal position of your oscilloscope trigger so that you don’t waste samples recording data before you send out a burst.\n\nTurn on averaging on your oscilloscope using the Acquisition/Mode button.\n\nAffix your speaker to the wall and move your microphone to different distances away from it. Measure the time of flight to your receiver to create a calibration curve of distance vs. measured time of flight. Include an ideal analytical calculation of time-of-flight vs. distance on your calibration curve and compare it to your data. How long should a sound wave take to propagate from your speaker to the other side of the pool? How long for a round trip? A schematic of the test tank can be found here. If you’re feeling particularly bold, you can try putting your speaker next to your microphone to measure a reflection off of something.\nYou may refer to this picture of an example range finding setup. As mentioned in the introduction, it is extremely important that your electronics and the tank water are not mixed. Use tape to hold electronics down so they can’t fall into the tank, and keep bench top equipment as far from the tank edge as possible. Always dry your test apparatus with a towel as you remove it from the water and be mindful of nearby electrical setups. This is an opportunity for some careful mechanical design: a little PVC can go a long way towards making your setup work well. Include one to three pictures of your experimental setup on the table and pool edge in your submission sheet. These pictures will be graded on safety and quality of construction."
  },
  {
    "objectID": "labs/lab5/index.html#extra-credit-velocity-detection-from-doppler-shift",
    "href": "labs/lab5/index.html#extra-credit-velocity-detection-from-doppler-shift",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "Extra Credit: Velocity Detection from Doppler Shift",
    "text": "Extra Credit: Velocity Detection from Doppler Shift\nIt is possible to use more complex modulation of the signal that your speaker emits to learn more about your robot. In this section you will use a frequency modulated sine wave to measure the velocity of your robot by leveraging the Doppler effect. This type of measurement is called a frequency modulated continuous wave (FMCW) measurement because, unlike your time of flight experiment, you are not sending out bursts of signal.\nUse the signal generator to generate a triangle frequency modulated FMCW signal to drive into your speaker. Instructions to do so can be found in the manual. Set the frequency deviation to fill your channel, the modulation frequency to 10 Hz, and the modulation shape to be a triangle.\nYou will need a “true” measurement of velocity to compare against your Doppler measured velocity. We will record video of your robot and analyze it with frame tracking software. VLC works well as capture software, and we recommend tracker for tracking software (though some students have used video-physics). Attach one of the USB web cameras to your computer and build a PVC frame so that it has a top-down view of your robot. Make sure a length reference like a meter stick is visible in the image that you capture. Attach a brightly colored piece of pool noodle to your robot so that it is visible above the water. This will enable you to use auto tracking features in the video analysis software. Test your image capture / velocity measurement system before deploying your robot to be sure that it is working.\nUse a claw hand or a piece of PVC to move your receiver through the water while driving the transmitter with your FMCW wave and recording the received audio. Also record video of the test using your image tracking system. It’s easiest to carry out your recordings by taking a very long acquisition on the oscilloscope which you start manually by pressing the force trigger button.\nUse the instructions in this document to process your received audio and extract the velocity as a function of time from your received FMCW. Bear in mind that you need to isolate your velocity signal before doing any signal processing, so don’t be afraid to take an FFT and filter out other channels before processing your data. Also extract velocity from your recorded video. Generate a plot comparing your Doppler velocity against the velocity measured using your image capture system.\nWriteups for this extra credit section are not counted against the page limit of your report. You may submit this as an additional document labeled “lab 5 doppler extra credit addendum.”"
  },
  {
    "objectID": "labs/lab5/index.html#extra-credit-self-powered-velocity-measurements",
    "href": "labs/lab5/index.html#extra-credit-self-powered-velocity-measurements",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "Extra Credit: Self-Powered Velocity Measurements",
    "text": "Extra Credit: Self-Powered Velocity Measurements\nAffix your speaker and microphone to your AUV and take velocity measurements while it is driving under its own power as in lab 1. Compare logged accelerometer data, image capture system data and Doppler data."
  },
  {
    "objectID": "labs/lab5/index.html#a-note-for-the-project",
    "href": "labs/lab5/index.html#a-note-for-the-project",
    "title": "Lab 5: Underwater Acoustics and Fourier Analysis",
    "section": "A Note for the Project:",
    "text": "A Note for the Project:\nYou won’t be able to use our audio amplifier boards during the final project, but it’s pretty easy to whip up your own LM384 on your protoboard. You can find the reference design for a typical 5 W amplifier in the LM384 datasheet. This reference design involves using a potentiometer for volume control, which you can probably replace with a fixed divider or omit depending on your design. Place an extra 4.7 µF bypass capacitor on the supply rails (not the bypass pin) in addition to your normal bypassing. Your amplifier will be unstable without this extra capacitor, so it may be educational to remove the capacitor and observe the amplifier output to understand exactly what bypassing does for you.\nNotice this design has a capacitor in series with the speaker. This is done for two reasons: speakers can be damaged by DC current, and the audio response of the speaker is linked to relatively high frequency oscillations. The capacitor lets high frequencies through and stops DC. This technique of driving an output through a series capacitor is called AC coupling. You’ll probably drive the input from a Teensy, but this input likes to have zero centered input signals, so we recommend AC coupling the input too."
  },
  {
    "objectID": "labs/lab3/index.html",
    "href": "labs/lab3/index.html",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "",
    "text": "Team size: 2"
  },
  {
    "objectID": "labs/lab3/index.html#learning-objectives",
    "href": "labs/lab3/index.html#learning-objectives",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter successful completion of this lab, you will be able to…\n\nDesign an operational amplifier circuit to appropriately scale and shift an input from a sensor to be read.\nExplain why operational amplifiers are needed for making measurements"
  },
  {
    "objectID": "labs/lab3/index.html#introduction",
    "href": "labs/lab3/index.html#introduction",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "0. Introduction",
    "text": "0. Introduction\nThe purpose of this lab is to use operational amplifiers to build a turbidity meter, a sensor that measures physical quantities that are often of interest in the ocean. The lab will require sensor design, circuit design and experiment design. Extra credit sections offer the opportunity to explore many other interesting marine sensors. The main take away from the laboratory is that operational amplifier circuits can be used for a variety of sensing applications and that careful sensor design is necessary to achieve repeatable results.\nThis lab will be carried out as sub-teams of two. As discussed in the class Home page, teams of 4 will be assigned by the instructor. Before this lab you must decide how you will split your team. Two other labs will also be completed as sub-teams, and you must use a different sub-team for each of these labs. Each sub-team will be responsible for its own version of the lab’s deliverables. Pre-lab work may still be carried out with your whole team but be sure each sub-team is ready to tackle the in-lab work independently. Between lab and Friday (the post-lab period) the two sub-teams in a team may discuss their experiences, but the sub-teams may not share data, code or text with one another.\nIt is up to the sub-team to determine which parts of the lab are done by whom, and at what time during the 4 hours of lab time. A work breakdown showing what each team member intends to work on during the 4-hour lab time is required for entry to the lab. The work breakdown will be submitted on paper to the lab instructor or proctor at the start of lab. Here is an example work breakdown. No hardware can be used outside of lab hours and no real data can be processed outside of lab hours. However, writing software or processing simulated data sets is allowed and, in fact, encouraged during the pre-lab period.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here.\nYou will work with some expensive hardware in this lab and in many future labs. This hardware needs to be explicitly checked out from a professor or proctor so that we can track where it is. If any hardware that you checked out breaks, then you will need to request a replacement from a professor. You make this request by filling out an error report (paper copies will be in lab). This report needs to be well thought out. Professors will reject reports that don’t represent sufficient testing or thought. You will keep this hardware with you throughout the semester in your storage box.\nThere are four extra credit sections. They would make the lab too long for most teams of two to complete. If you complete the required sections, you may attempt any or all and include the results in a separate written document summarizing your findings. We DO request that you remember the extra credit sections in this lab when deciding on instrumentation for your final project.\nThis lab will often call upon you to prepare solutions or handle chemicals. Though we aren’t working with anything hazardous (or which can’t be flushed down the drain), be sure to observe good chemical hygiene practices and use gloves and goggles when handling chemicals or sensitive equipment. Notably, always use gloves when handling any glassware that will go into the turbidity meter.\nThere are a few resources used in this lab which must be shared. Please respect others and don’t abuse these resources. All the teams in lab are going to have to share a single turbidity meter and beaker of mystery solution. There will be three digital scales available. For Extra Credit 1, we have a limited supply of buffer solutions which must last for all our labs, so don’t pour out more than you need to cover your pH probes and be sure to use the smaller set of beakers."
  },
  {
    "objectID": "labs/lab3/index.html#op-amp-familiarity",
    "href": "labs/lab3/index.html#op-amp-familiarity",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "1. Op-Amp Familiarity",
    "text": "1. Op-Amp Familiarity\nRead the datasheets for the TL081, OP07, MCP601, and MCP6004. Find the following values: single rail or dual rail, maximum supply voltage, minimum supply voltage, positive input pin, negative input pin, output pin, open-loop gain (which is A from our class videos), maximum input voltage.\nRead the datasheet for the AD623. The AD623 is a type of amplifier called an instrumentation amplifier which is similar to an operational amplifier. Is the AD623 single rail or dual rail? What is the input impedance of the AD623? What is the maximum gain of the AD623? Note that the datasheet reports a gain for the AD623 and NOT an open loop gain: the AD623 isn’t a simple op-amp.\nFirst, use an MCP601 to build a single-rail non-inverting amplifier with a gain of two. Be sure to stay within the supply voltage limits you found earlier when powering it. Exceeding the supply voltages is a sure way to destroy the op amp. Apply the following signals to the amplifier input: a 100mV amplitude sine wave with a 1 V offset, and a 100 mV amplitude sine wave with a 0 V offset. What do you observe at the amplifier’s output and why?\nUse an MCP601 to build a single rail inverting amplifier with a gain of five. Apply an input sine wave to this amplifier that obeys the input voltage limits you found earlier. What output do you observe and why? After observing the output of a standard inverting amplifier, use offset amplifier techniques to observe a sine wave at the output. What resistor values did you use for your inverting amplifier? Describe your offset circuit."
  },
  {
    "objectID": "labs/lab3/index.html#op-amps-and-impedance",
    "href": "labs/lab3/index.html#op-amps-and-impedance",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "2. Op Amps and Impedance",
    "text": "2. Op Amps and Impedance\nWe will be using voltage dividers and op-amp circuits to demonstrate how op-amps can reduce instrument loading.\nBuild the circuit shown here using values of Z1 and Z2 specified in case (A) and case (D) in the table here, Measure the outputs of these circuits with an Elenco (you may ignore all of the other measurement tools in the table. You may find this reference useful.). Calculate the expected output of this circuit including instrument impedances (for our purposes the DC resistances of the instrument inputs and/or outputs) and compare with measurements.\nReplace the circuit in Case (A) of the table on your breadboard with this circuit and repeat your measurements. Power the op-amp with ±15 V. Compare and contrast your results from Case (A) with your current results. What is the function of the op-amp in this measurement?\nReplace the circuit in Case (D) of the table on your breadboard with this circuit and repeat your measurements. Power the op-amp with ±15 V. Compare and contrast your results from Case (D) with your current results. What is the function of the op-amp in this circuit?\nIt may help to read up a bit on how the type of circuit you load the op-amp with affects the op-amp impedance. See this link."
  },
  {
    "objectID": "labs/lab3/index.html#turbidity-meter-introduction",
    "href": "labs/lab3/index.html#turbidity-meter-introduction",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "3. Turbidity Meter Introduction",
    "text": "3. Turbidity Meter Introduction\nTurbidity is an optical measurement which is related to the total undissolved solids in the water, which is an important environmental monitor since undissolved solids can be indicative of eroded runoff, disturbance of the sea floor or other sources of particles. In contrast, salinity (Extra Credit 2) is a measurement related to the total dissolved solids in the water. Because of time constraints we’ve relegated it to Extra Credit 2.\nModern electronic measurements of turbidity are measured by shining light through a sample and measuring transmission — how much light passes directly through — and 90° scattering — how much light bounces off the particles to a sensor located at 90° relative to the light source. Devices which measure only 90° scattering are called nephelometers, and devices which measure the ratio of the 90° signal to the transmitted signal are called turbidity meters or turbidimeters. The relative effectiveness of the two devices depends on exactly how many solids are in the water.\nThe device you build will compare transmission against 90° scattering to make a prediction of turbidity. You will use an IR1503 IR LED as a light source and two OP950 IR photodiodes as sensors. Why use IR instead of colored light? (Hint: what if the suspended particles were a mix of red clay and green organic matter?) What is the emission wavelength of the IR1503? What is the wavelengths of peak sensitivity of the OP950? This reference provides background information on LEDs and photodiodes. Note that IR LEDs are invisible to the human eye. You’ll need a photodiode or an IR-sensitive camera, like some cell-phone cameras, to tell if it is on.\nThis link has some additional information about turbidity, including a picture of some suspensions of different turbidity for visual reference."
  },
  {
    "objectID": "labs/lab3/index.html#transimpedance-amplifiers",
    "href": "labs/lab3/index.html#transimpedance-amplifiers",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "4. Transimpedance Amplifiers",
    "text": "4. Transimpedance Amplifiers\nThe current through a photodiode is linear in irradiance, so measuring the current passing through a photodiode is equivalent to making a linear measure of incident optical power. Operational amplifiers can help with this, but this is different than the voltage-amplifying operational amplifier configurations that we have observed so far. This schematic, depicts an operational amplifier configuration called a transimpedance amplifier that measures current. Analyze this schematic so that you understand how transimpedance amplifiers work. An equivalent circuit for the photodiode can help when analyzing this circuit: under illumination the photodiode looks like a current source pointing away from the amplifier.\nDesign and test your own transimpedance amplifier using an MCP6004 for your turbidity meter. Configure any unused op amps in the MCP6004 as unity gain buffers with the input connected to ground. Note that flipping the leads on the photodiode reverses the current direction and the sign of the output voltage; if the output voltage appears to be 0 on a single supply op-amp, try flipping the photodiode and see if the voltage appears. The photodiode in the schematic above is correctly oriented. Report the value of R1 that you picked. A quick experiment using only a scope, a photodiode, an LED, and power for the LED (see the next paragraph) might help you to estimate the currents in your system.\nNote: Transimpedance amplifiers can be designed in many ways. The design we are recommending that you use is not the highest-speed design, but it does have excellent low-noise characteristics. High-speed designs will reverse bias the diode to reduce its junction capacitance (a type of parasitic capacitance found in all diodes) and add a capacitor in parallel with the feedback resistor to filter out noise. However, applying the reverse bias makes current flow the other direction, which would require that the op-amp be dual rail or have an offset to ensure correct operation. This design is the simplest for a single-rail system, and it doesn’t lose performance when measuring large, slow signals like ours."
  },
  {
    "objectID": "labs/lab3/index.html#driving-leds-and-555-timers",
    "href": "labs/lab3/index.html#driving-leds-and-555-timers",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "5. Driving LEDs and 555 Timers",
    "text": "5. Driving LEDs and 555 Timers\nWe are going to power our LEDs using an alternating current signal. You will produce this signal using a 555 timer in astable operation mode. Using the reference information in the datasheet, select resistors such that the 555 timer output has a frequency between 500 Hz and 1 kHz and an output waveform duty cycle (ratio of high time to sum of low time and high time) of 3/5 (60%). Then build your 555 timer and verify that it produces a square wave output. Why are we having you use alternating signals in your LED instead of just using a DC input for the LED and reading the DC outputs of the photodiode circuits?\nLEDs, like all diodes, have an exponential relationship between the voltage applied across them and the current that passes through them. That means applying voltage carelessly can easily blow them up. We are going to fix that by installing a resistor in series with our 555 timer output. You will connect a resistor and the IR1503 in series between the output of the 555 timer and ground. Read the IR1503 datasheet to find the voltage-current relationship for the diode and pick values of Vcc and the series resistor that will result in 20-40 mA of current. Build it, and then check that your LED + 555 timer assembly is working by shining it at a photodiode and observing a signal of appropriate frequency."
  },
  {
    "objectID": "labs/lab3/index.html#turbidity-measurements",
    "href": "labs/lab3/index.html#turbidity-measurements",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "6. Turbidity Measurements",
    "text": "6. Turbidity Measurements\nNow it is time to assemble and use the turbidity meter. There is a two-piece fixture for holding the cuvette, LED and photodiodes. The instructions for its use are here. Use a cuvette to hold your solution. You should not need to fill it more than 1/2 full. Place the LED and photodiodes in the fixture, secure the fixture to your bench top (perhaps using the base legs with blue tape, electrical tape, or double-sided tape) and connect the components to their circuits in a reliable manner. Soldering long wires to your components or using female-female jumpers may help, but you may also be able to use a breadboard as a base and put component feet directly into it. (For reference: The Solidworks part for the fixture base is here and the Solidworks part for the fixture cover is here.)\nPrepare a set of solutions of different turbidities using milk and water. Eyedroppers or beakers may help you to add more precise volumes of milk to your solution. Check the turbidities of your solutions using the TU-2016 calibrated laboratory turbidity meter. Be sure to read the instruction manual to familiarize yourself with the operation of the meter before using it. Never touch the glass of the turbidity testing containers with your fingers (why?). You may need to perform a calibration on the laboratory turbidity meter to get best performance, be sure to sanity check the measurements it produces before measuring your sample. DO NOT EVER OPEN THE CALIBRATION STANDARDS.\nMeasure your solutions with your own turbidity measurement setup. Examine the effect of ambient light on your measurements. Plot the ratio of the 90° Vpp to the transmission Vpp against the calibrated turbidity of your solutions (recall that the turbidity is calculated from the ratio of the 90° signal to the transmitted (straight through) signal). Add a line of best fit and appropriate uncertainty measurements."
  },
  {
    "objectID": "labs/lab3/index.html#deliverables",
    "href": "labs/lab3/index.html#deliverables",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "7. Deliverables",
    "text": "7. Deliverables\nAll labs require two submissions per group. The first submission is a submission sheet in which specific data must be shown. The submission sheet is due at the end of the 4-hour lab period and must be uploaded before the end of your lab session at 5:15 pm. Note that only ONE member of each team should access and submit the submission sheet. It is the responsibility of that team member to add the rest of the team’s names to the submission sheet.\nFor pre-lab purposes, a sample submission sheet that contains all of the questions and requirements on the submission sheet is here.\nThe second submission is a writing assignment, usually around 1 page in length. Each writing assignment will be based on a prompt and must be completed by each student individually; no collaboration is allowed on the text or figures in these assignments, though you may speak among yourselves about concepts in keeping with the collaboration rules of the course. A first draft of the writing assignment must be uploaded by noon on Friday, and you need to bring a printed copy of your draft to the writing and reflection section on Friday at 1:15 p.m. During the first hour of the writing and reflection, you will engage in a peer editing exercise. The second hour of the Writing and Reflection section is reserved for you to edit your draft to produce a final draft of the writing assignment. This final draft must be uploaded before the end of the Writing and Reflection section on Friday at 3:15 p.m. Since multiple submissions are permitted, and only the last one is graded, you may want to submit a draft at 3 p.m. as insurance. The writing assignment is based on this prompt. This is the peer feedback worksheet.\nNote that the rubric is included in the prompt.\nRecall that no late work is accepted, we will grade whatever is submitted oat the deadlines.\nAfter the writing and reflection section at the end of each week every person (not just one person per team) must submit a team dynamics check-in survey. These are part of your participation grade. The survey link can be found on the home page."
  },
  {
    "objectID": "labs/lab3/index.html#extra-credit-1.-ph-measurement",
    "href": "labs/lab3/index.html#extra-credit-1.-ph-measurement",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "Extra Credit 1. pH Measurement",
    "text": "Extra Credit 1. pH Measurement\npH needs no introduction, but in oceanography it can be an important indicator of acidic runoff from the surface. The pH of the water also has a strong impact on the health of various plant and animal species, notably coral. You will build a circuit to interact with a pH sensor and calibrate it against buffer solutions.\nYou will be using buffer solutions in this portion of the lab and they are relatively expensive chemicals. Use the smaller 50mL beakers to hold buffer solutions at your station and take pains not to spill any buffer solution when pouring it from the main supply. Buffer solutions may be rinsed down the sink when you are done with them.\nFind a Pasco pH electrode. These electrodes are generally used with interface boxes provided by Pasco (the Pasport system), but we are going to be hooking circuits directly to the BNC connector of the pH probe. The pH probes are delicate instruments, so be sure to always re-cap them in a bath of pH 7 buffer solution and never leave them sitting exposed to air. Rinse them in a bath of deionized water and shake off any excess droplets before returning them to buffer solution.\nThe probes need special care to make repeatable and accurate measurements, so a few experimental tips will help you to get consistent results: stir the probes gently when you first immerse them in a bath, be sure to wait for the probe voltage to stabilize when taking a measurement because their time constants are long, and keep your hands away from the probes during measurement because the unshielded connections are sensitive to noise that can couple in through your body.\nMeasure the output voltage on the BNC connector in pH 4, 7 and 10 buffer solutions with a multimeter. What values do you observe?\nYou are going to attempt to improve the voltage swing achieved with these measurements by using a circuit. Your choice of circuit depends on the output impedance of the pH probe, consult this application note to get a ballpark estimate for the output impedance and report it. Also, read this reference, a handy guide to the operation of pH sensors, and then describe the physical mechanism which explains the value of the output impedance for this sensor.\nUse a TL081 to interface with the pH sensor to achieve a voltage swing of at least 1V between pH 4 and pH 10. What circuit topology did you use and why? Describe your interface circuit.\nMeasure the voltage your interface circuit produces when the pH sensor is immersed in pH 4, 7 and 10 buffer solutions. Use these measurements to make a calibration plot and add a line of best fit with appropriate quantification of uncertainty. Use your sensor and the line of best fit to determine the pH with confidence limits of the mystery solution in the middle of the room. There is only one small flask of mystery solution that should last for all teams in all sections. DO NOT pour the contents of the flask into another beaker! Rinse off your probe in distilled water. Uncap the mystery solution. Test the pH in situ. Remove the electrode and recap the solution. Rinse off your electrode and store it properly."
  },
  {
    "objectID": "labs/lab3/index.html#extra-credit-2.-salinity-measurement",
    "href": "labs/lab3/index.html#extra-credit-2.-salinity-measurement",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "Extra Credit 2. Salinity Measurement",
    "text": "Extra Credit 2. Salinity Measurement\nSalinity is a measure of the total dissolved salt content of water. It is an extremely important and common measurement in oceanographic studies. Salinity measurements are used to track the flow of water and map the hydrological cycle, calibrate acoustic communication links, and understand biological phenomena like algal blooms. In this section you will build a sensor to measure salinity using an inverting operational amplifier. You will prove that it works by calibrating it against saline solutions with different salinity.\nIn order to design your sensor, you need to know reasonable values for what you’re trying to measure. Your sensor will measure conductivity and the measured value will be used to extract salinity. Find the salinity and conductivity of the ocean using any resource you choose. Note that the equivalent circuit model of a saline solution whose value depends on the separation of the probe electrodes and the salt concentration (why?) is a resistor in parallel with a capacitor. We will ignore the capacitor for this extra credit section, but it is critically important in a design for the final project. You may want to read this reference for further information.\nDesign an inverting operational amplifier circuit using one or more TL081 op-amps which has an output voltage that is linear with the conductivity of your solution. Be sure to consider source and load impedances when designing your circuit. Ensure that the output voltage of this circuit will vary over a wide voltage range for the range of saline solutions that you plan to use for calibrating your circuit. This design depends on some of your experimental parameters including the separation of electrodes and the conductivities of the solutions you intend to measure.\nOne thing to be careful of when measuring salinity is that salt, water and electrons will undergo chemical reactions which can deposit metal salts on your electrodes. These salts can form non-conductive films which stop your conductivity measurements. What kind of waveform should you apply to your circuit in order to make a measurement stable over time? This chemistry can also cause your circuit to fail if the electrode area is too small or the voltage applied to the solution is too low.\nPrepare an experimental setup that will allow you to measure the conductivity of salt water. You have access to beakers, wire, electrical tape and digital thermometers. Prepare a set of saline solutions to be used with this setup which are sufficient to prove the sensor is linear. Graduated cylinders would usually be used to measure the volume of water in these solutions. Those are not available to you, so instead you will need to use the digital scales and the well-known relationship between the mass and volume of water. What is that relationship?\nRecord a calibration curve for your sensor which plots the voltage output of your sensor against the concentration of your salt solution in units of grams per liter on logarithmic X and Y axes. Find a line of best fit including appropriate uncertainty measurements. Then use your sensor and your calibration curve to measure the salinity of the mystery salinity solution on the central table.\nNote: You may use this resource to convert from a measured conductivity to salinity and this resource to convert from salinity to conductivity.\nWriteups for this extra credit section are not counted against the page limit of your report. You may submit this as an additional document labeled “Lab 3 salinity extra credit addendum.”"
  },
  {
    "objectID": "labs/lab3/index.html#extra-credit-3.-pressure-measurement",
    "href": "labs/lab3/index.html#extra-credit-3.-pressure-measurement",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "Extra Credit 3. Pressure Measurement",
    "text": "Extra Credit 3. Pressure Measurement\nIn this section you will replicate the pressure circuit on your E79 board to understand its operation. After that you will modify the sensing circuit to optimize the range of the output voltage for the graduated cylinder test that we have used to test pressure sensor operation.\nAnalyze this circuit and select values of R1, R2 and R3 such that output voltage will swing from 1V to 4V when you apply a pressure varying from atmospheric to 50cm below water. Implement the circuit using the MPX5700 pressure sensor and the MCP601 op-amp, which are the devices used on the E79 board. Use Vdd=5V. Why is the pressure sensor attached to the positive input of the amplifier?\nCreate an experimental setup to vary the pressure on the sensor using a large graduated cylinder, water and plastic tubing. Create a calibration curve relating your measured voltage to the applied pressure, and include appropriate measures of uncertainty.\nReturn the pressure sensor to stock when you are done with it under pain of a grade penalty and be careful not to damage the pins while using it in your breadboard.\nWriteups for this extra credit section are not counted against the page limit of your report. You may submit this as an additional document labeled “lab 3 pressure extra credit addendum.”"
  },
  {
    "objectID": "labs/lab3/index.html#extra-extra-credit-4.-true-synchronous-detection-only-do-after-extra-credits-1-2-and-3.",
    "href": "labs/lab3/index.html#extra-extra-credit-4.-true-synchronous-detection-only-do-after-extra-credits-1-2-and-3.",
    "title": "Lab 3: Operational Amplifiers and Marine Sensors",
    "section": "Extra Extra Credit 4. True Synchronous Detection – Only do after Extra Credits 1, 2 and 3.",
    "text": "Extra Extra Credit 4. True Synchronous Detection – Only do after Extra Credits 1, 2 and 3.\nIn this section you will do true synchronous detection like you would do when using the Teensy on an AUV. In true synchronous detection, the excitation is generated by a modulated or chopped signal of known (measured) frequency. In our case we’re using the signal generator to modulate the LED. In some cases, a slotted wheel is spun at a known frequency in front of a constant light source to provide the modulated signal. Either hardware or software is used to generate two constant-amplitude signals at the same frequency as the excitation signal. One is a sine wave in phase with the excitation signal and the other is a cosine wave 90° out of phase with the excitation signal. Each measured response signal (in our case the directly transmitted and the scattered signals form the photodiodes) is multiplied (either by analog or digital means) by the sine and the cosine signals. The two resulting signals (per measured input signal) are lowpass filtered with a cutoff frequency of at most the modulation frequency, and perhaps much lower if a great deal of noise reduction is required. The lowpass-filtered signals are then added in quadrature (square root of the sum of the squares of the signals) and if desired, the phase is calculated as atan2(sin signal, cosine signal). In our case, the phase information is not needed, and the ratio of the scattered quadrature signal to the transmitted quadrature signal is used to calculate the turbidity. In practice, lock-in amplifiers are used to recover signals that are -60 dB below the noise floor. In other words, the noise amplitude is 1000 times the signal amplitude.\nFor this extra credit, you need to wire up a connector to input three analog signals to your motherboard (a scaled and shifted reference signal, the 90° scattered signal, and the transmitted signal; all scaled and shifted to fit into the 0-to-3.3 V input range of the Teensy), and then log the three signals onto your microSD card and then modify LockInTest.m to process your results. You may need to consult with a proctor or professor to find out how to wire the motherboard or Teensy for three analog inputs, and for access to the basic robot package, that has code for high-speed data logging to the Teensy.\nWriteups for this extra credit section are not counted against the page limit of your report. You may submit this as an additional document labeled “lab 3 synchronous detection extra credit addendum.”"
  },
  {
    "objectID": "history/index.html",
    "href": "history/index.html",
    "title": "History",
    "section": "",
    "text": "A cleverly designed bottom crawler used powerful motors and a tethered surface skiff to map depth along accurate trajectories.\nhttps://drive.google.com/file/d/1s1zsGPTx-QZpVYCwWR4Md5jM4KVQRcAZ/view\nAn ASV used a particle filter based navigation and error correction system to achieve unusually good trajectory accuracy\nhttps://drive.google.com/file/d/1hbRGmwnh3ZMJ5kYYFFD54oPrNAFauuVd/view"
  },
  {
    "objectID": "history/index.html#section",
    "href": "history/index.html#section",
    "title": "History",
    "section": "",
    "text": "A cleverly designed bottom crawler used powerful motors and a tethered surface skiff to map depth along accurate trajectories.\nhttps://drive.google.com/file/d/1s1zsGPTx-QZpVYCwWR4Md5jM4KVQRcAZ/view\nAn ASV used a particle filter based navigation and error correction system to achieve unusually good trajectory accuracy\nhttps://drive.google.com/file/d/1hbRGmwnh3ZMJ5kYYFFD54oPrNAFauuVd/view"
  },
  {
    "objectID": "history/index.html#section-1",
    "href": "history/index.html#section-1",
    "title": "History",
    "section": "2017",
    "text": "2017\nAn acoustic beacon tracker deployed in the Mudd test tank. The oscillations in it’s trajectory are characteristic of angle control based on stereo sensors, and the team had a MATLAB model which showed the same behavior.\nhttps://drive.google.com/file/d/1nXRh81PjcI-u6L069lIfVtWcA4mYu-3c/view\nA wind-measuring ASV did an exceptionally good job of sensor calibration, including using the wind tunnel to calibrate sensors.\nhttps://drive.google.com/file/d/1RJtr_GxRZIaCJ95jLnJmj6HU9P30WT7T/view"
  },
  {
    "objectID": "history/index.html#older-versions-of-e80",
    "href": "history/index.html#older-versions-of-e80",
    "title": "History",
    "section": "Older Versions of E80",
    "text": "Older Versions of E80\nE80 serves a critical role in the Harvey Mudd college curriculum and it’s unsurprising that some of Mudd’s best faculty have had ownership of the course. A brief history of E80, courtesy of Erik Spjut on the previous E80 page, is provided below. You can find the previous E80 website, a treasure trove of information, here.\n\nE80, Hammer Time was one of the most successful field laboratory courses of all time. Zee Duron is widely acknowledged as one of the premiere course directors of the 21st Century. But time moves on, fashions change, and people move to other projects. Duron has moved on to administrative work, and he has left E80, The Next Generation to Erik Spjut and Mary Cardenas. The challenges and expectations of this sequel are chronicled in this website. We invite you to explore and enjoy.\n\nThe Harvey Mudd Way\nA key element of the philosophy of the Harvey Mudd College General Engineering education is that there are fundamental principles that are applicable to many engineering disciplines. Experimental Engineering (E80) is a sophomore-level, semester-long required course, which has striven to teach a large subset of these fundamental principles through multiple experiments in a number of engineering disciplines. We are redesigning the Experimental Engineering course to explicitly require learning in multiple engineering disciplines while directing all of the experiments to a final goal: to build, instrument, and fly a small rocket; and analyze and report on the data collected during the flight.\nThe project involves the creation of learning materials, teaching strategies, and equipment for a multidisciplinary experimental engineering course involving the instrumentation and testing of these small model rockets. The project includes the design, acquisition, and testing all of the pedagogy, hardware, and software necessary to implement the revised course. We will conduct the course several times with formal assessment, revise the course in response to that assessment, and distribute the course plans, instrumentation requirements, and pedagogical results to the wider academic community. Our plans and results will be presented on this web site.\n\n\nThe Wider World\nIt is difficult to predict where the commercial space era will take us, but this project will fulfill a need for multidisciplinary engineers interested in aerospace applications. The pedagogical materials can be used at a number of engineering institutions to teach experimental engineering in a multidisciplinary way, not only to the students, but also to faculty (at HMC and other institutions) who may not have industrial or hands-on multidisciplinary engineering experience. The proposed learning workshop for faculty will be a means for disseminating the creative learning materials and teaching strategies. Outreach to local middle schools will introduce rocketry (and the associated mathematics and physics) to a very diverse population; there is a real opportunity to increase the interest in and pursuit of math, science, and engineering by these diverse groups, and to increase the diverse and properly-trained workforce in these areas."
  }
]